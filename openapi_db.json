{
  "openapi": "3.1.0",
  "info": {
    "title": "TABi DB API",
    "description": "Middleware WebService for TABi Database",
    "version": "r950.9b35d6f"
  },
  "servers": [
    {
      "url": "/api-db"
    }
  ],
  "paths": {
    "/api/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Read Status",
        "operationId": "read_status_api_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/status/error": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Read Error",
        "operationId": "read_error_api_status_error_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read Users",
        "operationId": "read_users_api_admin_users_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/dbs__internal__schemas__user__User"
                  },
                  "type": "array",
                  "title": "Response Read Users Api Admin Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create User",
        "operationId": "create_user_api_admin_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__internal__schemas__user__User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/admin/users/{user_id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read User",
        "operationId": "read_user_api_admin_users__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__internal__schemas__user__User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update User",
        "operationId": "update_user_api_admin_users__user_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__internal__schemas__user__User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_api_admin_users__user_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__internal__schemas__user__User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/cache/user/{user_oid}/invalidate": {
      "get": {
        "tags": [
          "TABI Cache"
        ],
        "summary": "Invalidate All",
        "description": "Invalidate all caches associated to all customers of User OID, use for migration script",
        "operationId": "invalidate_all_api_tabi_cache_user__user_oid__invalidate_get",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Oid",
              "description": "User OID"
            },
            "name": "user_oid",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/cache/customer/{customer_oid}/refresh": {
      "get": {
        "tags": [
          "TABI Cache"
        ],
        "summary": "Refresh Customers",
        "description": "Refresh all customers data associated to a User by any of their customers",
        "operationId": "refresh_customers_api_tabi_cache_customer__customer_oid__refresh_get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/cache/parameters/{customer_oid}/refresh": {
      "get": {
        "tags": [
          "TABI Cache"
        ],
        "summary": "Refresh Parameters",
        "description": "Refresh parameters of customer",
        "operationId": "refresh_parameters_api_tabi_cache_parameters__customer_oid__refresh_get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/cache/global/{customer_oid}/refresh": {
      "get": {
        "tags": [
          "TABI Cache"
        ],
        "summary": "Refresh Global Parameters",
        "description": "Refresh global parameters of all customers associated to a User by any of their customers",
        "operationId": "refresh_global_parameters_api_tabi_cache_global__customer_oid__refresh_get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users": {
      "get": {
        "tags": [
          "TABI Users"
        ],
        "summary": "Read Users",
        "operationId": "read_users_api_tabi_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/dbs__tabi__schemas__user__User"
                  },
                  "type": "array",
                  "title": "Response Read Users Api Tabi Users Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/password": {
      "get": {
        "tags": [
          "TABI Users"
        ],
        "summary": "Read Users Password",
        "description": "Get all Users with password",
        "operationId": "read_users_password_api_tabi_users_password_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserPassword"
                  },
                  "type": "array",
                  "title": "Response Read Users Password Api Tabi Users Password Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/versions": {
      "get": {
        "tags": [
          "TABI Users"
        ],
        "summary": "Read Users Quoting Version",
        "operationId": "read_users_quoting_version_api_tabi_users_versions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserVersion"
                  },
                  "type": "array",
                  "title": "Response Read Users Quoting Version Api Tabi Users Versions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/customers/{user_oid}": {
      "get": {
        "tags": [
          "TABI Users"
        ],
        "summary": "Read Customers From User",
        "description": "Get all Customers from a User",
        "operationId": "read_customers_from_user_api_tabi_users_customers__user_oid__get",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Oid",
              "description": "User OID"
            },
            "name": "user_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "type": "array",
                  "title": "Response Read Customers From User Api Tabi Users Customers  User Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/customers/{user_oid}/search/companyname": {
      "post": {
        "tags": [
          "TABI Users"
        ],
        "summary": "Search Customers From User By Company Name",
        "description": "Get all Customers from a User that is matching with company name",
        "operationId": "search_customers_from_user_by_company_name_api_tabi_users_customers__user_oid__search_companyname_post",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Oid",
              "description": "User OID"
            },
            "name": "user_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Company Name",
                "description": "Company Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "type": "array",
                  "title": "Response Search Customers From User By Company Name Api Tabi Users Customers  User Oid  Search Companyname Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/{user_oid}/version/{version}": {
      "put": {
        "tags": [
          "TABI Users"
        ],
        "summary": "Put Update Users Version From Parent Customer",
        "description": "Update Quoting version to all users with the same parent customer oid",
        "operationId": "put_update_users_version_from_parent_customer_api_tabi_users__user_oid__version__version__put",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Oid",
              "description": "User OID"
            },
            "name": "user_oid",
            "in": "path"
          },
          {
            "description": "Quoting Version",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version",
              "description": "Quoting Version"
            },
            "name": "version",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/{user_oid}/parameters/version/{version}": {
      "delete": {
        "tags": [
          "TABI Users"
        ],
        "summary": " Delete Parameters From User",
        "description": "Delete all parameters from a Quoting version to all customers of user",
        "operationId": "_delete_parameters_from_user_api_tabi_users__user_oid__parameters_version__version__delete",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Oid",
              "description": "User OID"
            },
            "name": "user_oid",
            "in": "path"
          },
          {
            "description": "Quoting Version",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version",
              "description": "Quoting Version"
            },
            "name": "version",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/{user_oid}/global/version/{version}": {
      "get": {
        "tags": [
          "TABI Users"
        ],
        "summary": " Rollback Global Parameters From User",
        "description": "Delete all parameters from a Quoting version to all customers of user",
        "operationId": "_rollback_global_parameters_from_user_api_tabi_users__user_oid__global_version__version__get",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Oid",
              "description": "User OID"
            },
            "name": "user_oid",
            "in": "path"
          },
          {
            "description": "Quoting Version",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version",
              "description": "Quoting Version"
            },
            "name": "version",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/users/{user_oid}/equipment_type/version/{version}": {
      "delete": {
        "tags": [
          "TABI Users"
        ],
        "summary": " Delete Equipment Type From User",
        "description": "Delete all parameters from a Quoting version to all customers of user",
        "operationId": "_delete_equipment_type_from_user_api_tabi_users__user_oid__equipment_type_version__version__delete",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Oid",
              "description": "User OID"
            },
            "name": "user_oid",
            "in": "path"
          },
          {
            "description": "Quoting Version",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version",
              "description": "Quoting Version"
            },
            "name": "version",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/customers": {
      "get": {
        "tags": [
          "TABI Customers"
        ],
        "summary": "Read Customers",
        "operationId": "read_customers_api_tabi_customers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "type": "array",
                  "title": "Response Read Customers Api Tabi Customers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/customers/chain/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Customers"
        ],
        "summary": "Read Chain Customers",
        "description": "Get itself and child customers information from parent customer OID",
        "operationId": "read_chain_customers_api_tabi_customers_chain__customer_oid__get",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "Parent Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "type": "array",
                  "title": "Response Read Chain Customers Api Tabi Customers Chain  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/customers/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Customers"
        ],
        "summary": "Read Customer",
        "description": "Get customer information from their customer's customer OID",
        "operationId": "read_customer_api_tabi_customers__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/customers/{customer_oid}/search/companyname": {
      "post": {
        "tags": [
          "TABI Customers"
        ],
        "summary": "Search Customers From User By Company Name",
        "description": "Get all Customers from a Parent Customer that is matching with company name",
        "operationId": "search_customers_from_user_by_company_name_api_tabi_customers__customer_oid__search_companyname_post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Company Name",
                "description": "Company Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "type": "array",
                  "title": "Response Search Customers From User By Company Name Api Tabi Customers  Customer Oid  Search Companyname Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/customers/{customer_oid}/equipment_types": {
      "get": {
        "tags": [
          "TABI Customers"
        ],
        "summary": "Search Equipment Type From Customer",
        "description": "Get equipment type info for one Customer from a Parent Customer by the Customer's Customer OID",
        "operationId": "search_equipment_type_from_customer_api_tabi_customers__customer_oid__equipment_types_get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EquipmentTypeV8"
                  },
                  "type": "array",
                  "title": "Response Search Equipment Type From Customer Api Tabi Customers  Customer Oid  Equipment Types Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/versions": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read Supported Versions",
        "description": "Get currently API supported quoting parameters versions",
        "operationId": "read_supported_versions_api_tabi_parameters_versions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedVersions"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/version/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read Quoting Version",
        "description": "Get quoting parameters version for Customer's Customer OID",
        "operationId": "read_quoting_version_api_tabi_parameters_version__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v8/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V8 Global Parameters",
        "operationId": "read_v8_global_parameters_api_tabi_parameters_v8_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV8"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V8 Global Parameters",
        "operationId": "save_v8_global_parameters_api_tabi_parameters_v8_global__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalParametersV8"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV8"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v8/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V8 Parameters",
        "operationId": "read_v8_parameters_api_tabi_parameters_v8__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV8"
                  },
                  "type": "array",
                  "title": "Response Read V8 Parameters Api Tabi Parameters V8  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V8 Parameters",
        "operationId": "save_v8_parameters_api_tabi_parameters_v8__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "User Oid"
            },
            "name": "user_oid",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ParametersV8"
                },
                "type": "array",
                "title": "Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV8"
                  },
                  "type": "array",
                  "title": "Response Save V8 Parameters Api Tabi Parameters V8  Customer Oid  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v8/equipment_type/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V8 Equipment Type",
        "operationId": "save_v8_equipment_type_api_tabi_parameters_v8_equipment_type__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EquipmentTypeV8"
                  },
                  "type": "array",
                  "title": "Response Save V8 Equipment Type Api Tabi Parameters V8 Equipment Type  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v7/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V7 Global Parameters",
        "operationId": "read_v7_global_parameters_api_tabi_parameters_v7_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV7"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V7 Global Parameters",
        "operationId": "save_v7_global_parameters_api_tabi_parameters_v7_global__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalParametersV7"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV7"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v7/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V7 Parameters",
        "operationId": "read_v7_parameters_api_tabi_parameters_v7__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV7"
                  },
                  "type": "array",
                  "title": "Response Read V7 Parameters Api Tabi Parameters V7  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V7 Parameters",
        "operationId": "save_v7_parameters_api_tabi_parameters_v7__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "User Oid"
            },
            "name": "user_oid",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ParametersV7"
                },
                "type": "array",
                "title": "Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV7"
                  },
                  "type": "array",
                  "title": "Response Save V7 Parameters Api Tabi Parameters V7  Customer Oid  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v6/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V6 Global Parameters",
        "operationId": "read_v6_global_parameters_api_tabi_parameters_v6_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV6"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V6 Global Parameters",
        "operationId": "save_v6_global_parameters_api_tabi_parameters_v6_global__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalParametersV6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV6"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v6/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V6 Parameters",
        "operationId": "read_v6_parameters_api_tabi_parameters_v6__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV6"
                  },
                  "type": "array",
                  "title": "Response Read V6 Parameters Api Tabi Parameters V6  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V6 Parameters",
        "operationId": "save_v6_parameters_api_tabi_parameters_v6__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "User Oid"
            },
            "name": "user_oid",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ParametersV6"
                },
                "type": "array",
                "title": "Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV6"
                  },
                  "type": "array",
                  "title": "Response Save V6 Parameters Api Tabi Parameters V6  Customer Oid  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v5/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V5 Global Parameters",
        "operationId": "read_v5_global_parameters_api_tabi_parameters_v5_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV5"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V5 Global Parameters",
        "operationId": "save_v5_global_parameters_api_tabi_parameters_v5_global__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalParametersV5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV5"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v5/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V5 Parameters",
        "operationId": "read_v5_parameters_api_tabi_parameters_v5__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV5"
                  },
                  "type": "array",
                  "title": "Response Read V5 Parameters Api Tabi Parameters V5  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V5 Parameters",
        "operationId": "save_v5_parameters_api_tabi_parameters_v5__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "User Oid"
            },
            "name": "user_oid",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ParametersV5"
                },
                "type": "array",
                "title": "Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV5"
                  },
                  "type": "array",
                  "title": "Response Save V5 Parameters Api Tabi Parameters V5  Customer Oid  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v4/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V4 Global Parameters",
        "operationId": "read_v4_global_parameters_api_tabi_parameters_v4_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV4"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V4 Global Parameters",
        "operationId": "save_v4_global_parameters_api_tabi_parameters_v4_global__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalParametersV4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV4"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v4/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V4 Parameters",
        "operationId": "read_v4_parameters_api_tabi_parameters_v4__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV4"
                  },
                  "type": "array",
                  "title": "Response Read V4 Parameters Api Tabi Parameters V4  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v3/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V3 Global Parameters",
        "operationId": "read_v3_global_parameters_api_tabi_parameters_v3_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParameters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Save V3 Global Parameters",
        "operationId": "save_v3_global_parameters_api_tabi_parameters_v3_global__customer_oid__post",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalParameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParameters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v2/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V2 Global Parameters",
        "operationId": "read_v3_global_parameters_api_tabi_parameters_v2_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParameters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/global/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read Global Parameters",
        "description": "Use /api/tabi/parameters/v3/global/{customer_oid} instead",
        "operationId": "read_v3_global_parameters_api_tabi_parameters_global__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParameters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v3/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V3 Parameters",
        "operationId": "read_v3_parameters_api_tabi_parameters_v3__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Parameters"
                  },
                  "type": "array",
                  "title": "Response Read V3 Parameters Api Tabi Parameters V3  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/v2/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read V2 Parameters",
        "operationId": "read_v3_parameters_api_tabi_parameters_v2__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Parameters"
                  },
                  "type": "array",
                  "title": "Response Read V3 Parameters Api Tabi Parameters V2  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/parameters/{customer_oid}": {
      "get": {
        "tags": [
          "TABI Parameters"
        ],
        "summary": "Read Parameters",
        "description": "Use /api/tabi/parameters/v3/{customer_oid} instead",
        "operationId": "read_v3_parameters_api_tabi_parameters__customer_oid__get",
        "parameters": [
          {
            "description": "My Customer's Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer's Customer OID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Parameters"
                  },
                  "type": "array",
                  "title": "Response Read V3 Parameters Api Tabi Parameters  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/reports/{report_oid}": {
      "get": {
        "tags": [
          "TABI Reports"
        ],
        "summary": "Read Report By Oid",
        "operationId": "read_report_by_oid_api_tabi_reports__report_oid__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Oid"
            },
            "name": "report_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__tabi__schemas__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/reports/": {
      "post": {
        "tags": [
          "TABI Reports"
        ],
        "summary": "Create Report",
        "operationId": "create_report_api_tabi_reports__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dbs__tabi__schemas__report__RequestReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__tabi__schemas__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/reports/award/load_id/": {
      "put": {
        "tags": [
          "TABI Reports"
        ],
        "summary": "Update Awarded From Report By Load Oid",
        "operationId": "update_awarded_from_report_by_load_oid_api_tabi_reports_award_load_id__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwardInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__tabi__schemas__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/reports/{report_oid}/transform/exception/": {
      "put": {
        "tags": [
          "TABI Reports"
        ],
        "summary": "Put Transform Report In Exception By Oid",
        "operationId": "put_transform_report_in_exception_by_oid_api_tabi_reports__report_oid__transform_exception__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Oid"
            },
            "name": "report_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTransformReportInException"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__tabi__schemas__exception_report__ExceptionReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/reports/exception/": {
      "post": {
        "tags": [
          "TABI Reports"
        ],
        "summary": "Create Exception Report",
        "operationId": "create_exception_report_api_tabi_reports_exception__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dbs__tabi__schemas__exception_report__RequestExceptionReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__tabi__schemas__exception_report__ExceptionReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/reports/exception/{report_oid}": {
      "get": {
        "tags": [
          "TABI Reports"
        ],
        "summary": "Read Exception Report By Oid",
        "operationId": "read_exception_report_by_oid_api_tabi_reports_exception__report_oid__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Oid"
            },
            "name": "report_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbs__tabi__schemas__exception_report__ExceptionReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/order_entries/{order_entry_oid}": {
      "get": {
        "tags": [
          "TABI Order Entries"
        ],
        "summary": "Read Order Entry By Oid",
        "operationId": "read_order_entry_by_oid_api_tabi_order_entries__order_entry_oid__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Entry Oid"
            },
            "name": "order_entry_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntry"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/order_entries/{status}/{customer_domain}": {
      "get": {
        "tags": [
          "TABI Order Entries"
        ],
        "summary": "Read Order Entry By Status And Customer Domain",
        "operationId": "read_order_entry_by_status_and_customer_domain_api_tabi_order_entries__status___customer_domain__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Status"
            },
            "name": "status",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Domain"
            },
            "name": "customer_domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrderEntry"
                  },
                  "type": "array",
                  "title": "Response Read Order Entry By Status And Customer Domain Api Tabi Order Entries  Status   Customer Domain  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/order_entries/": {
      "post": {
        "tags": [
          "TABI Order Entries"
        ],
        "summary": "Create Order Entry",
        "operationId": "create_order_entry_api_tabi_order_entries__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestOrderEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntry"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/invoices/request/{invoice_oid}": {
      "get": {
        "tags": [
          "TABI Invoices"
        ],
        "summary": "Read Invoice By Oid",
        "operationId": "read_invoice_by_oid_api_tabi_invoices_request__invoice_oid__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Oid"
            },
            "name": "invoice_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRequest"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/invoices/request": {
      "post": {
        "tags": [
          "TABI Invoices"
        ],
        "summary": "Create Invoice",
        "operationId": "create_invoice_api_tabi_invoices_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRequest"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/invoices/file/{invoice_file_oid}": {
      "get": {
        "tags": [
          "TABI Invoices"
        ],
        "summary": "Read Invoice By Oid",
        "operationId": "read_invoice_by_oid_api_tabi_invoices_file__invoice_file_oid__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice File Oid"
            },
            "name": "invoice_file_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRequestFile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/tabi/invoices/file": {
      "post": {
        "tags": [
          "TABI Invoices"
        ],
        "summary": "Create Invoice",
        "operationId": "create_invoice_api_tabi_invoices_file_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInvoiceRequestFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRequestFile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/cache/companies/{company_id}": {
      "get": {
        "tags": [
          "Prometeo Cache"
        ],
        "summary": "Get Refresh Company",
        "description": "Refresh metadata of a company by company ID",
        "operationId": "get_refresh_company_api_prometeo_cache_companies__company_id__get",
        "parameters": [
          {
            "description": "Company ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id",
              "description": "Company ID"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/cache/customers/{company_id}": {
      "get": {
        "tags": [
          "Prometeo Cache"
        ],
        "summary": "Get Refresh Customer",
        "description": "Refresh customers of a company ID",
        "operationId": "get_refresh_customer_api_prometeo_cache_customers__company_id__get",
        "parameters": [
          {
            "description": "Company ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id",
              "description": "Company ID"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/cache/parameters/{customer_id}": {
      "get": {
        "tags": [
          "Prometeo Cache"
        ],
        "summary": "Get Refresh Parameters",
        "description": "Refresh parameters of a Customer ID",
        "operationId": "get_refresh_parameters_api_prometeo_cache_parameters__customer_id__get",
        "parameters": [
          {
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id",
              "description": "Customer ID"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/cache/parameters/bulk/": {
      "post": {
        "tags": [
          "Prometeo Cache"
        ],
        "summary": "Post Bulk Refresh Parameters",
        "description": "Refresh parameters of a list of Customer IDs",
        "operationId": "post_bulk_refresh_parameters_api_prometeo_cache_parameters_bulk__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "integer"
                },
                "type": "array",
                "title": "Customer Ids",
                "description": "List of Customer IDs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/cache/global/{company_id}": {
      "get": {
        "tags": [
          "Prometeo Cache"
        ],
        "summary": "Get Refresh Global Parameters",
        "description": "Refresh global parameters of a company ID",
        "operationId": "get_refresh_global_parameters_api_prometeo_cache_global__company_id__get",
        "parameters": [
          {
            "description": "Company ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id",
              "description": "Company ID"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/cache/version/{company_id}": {
      "get": {
        "tags": [
          "Prometeo Cache"
        ],
        "summary": "Get Refresh Quoting Version",
        "description": "Refresh quoting version for all customers of a company ID",
        "operationId": "get_refresh_quoting_version_api_prometeo_cache_version__company_id__get",
        "parameters": [
          {
            "description": "Company ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id",
              "description": "Company ID"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/companies": {
      "get": {
        "tags": [
          "Prometeo Companies"
        ],
        "summary": "Read Companies",
        "operationId": "read_companies_api_prometeo_companies_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PrometeoCompany"
                  },
                  "type": "array",
                  "title": "Response Read Companies Api Prometeo Companies Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/companies/{company_id}": {
      "get": {
        "tags": [
          "Prometeo Companies"
        ],
        "summary": "Read Company",
        "description": "Get company from company id",
        "operationId": "read_company_api_prometeo_companies__company_id__get",
        "parameters": [
          {
            "description": "Company ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id",
              "description": "Company ID"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrometeoCompany"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/companies/customers/{company_id}": {
      "get": {
        "tags": [
          "Prometeo Companies"
        ],
        "summary": "Read Customers From Company",
        "description": "Get all Customers from a User",
        "operationId": "read_customers_from_company_api_prometeo_companies_customers__company_id__get",
        "parameters": [
          {
            "description": "Company ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id",
              "description": "Company ID"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PrometeoCustomer"
                  },
                  "type": "array",
                  "title": "Response Read Customers From Company Api Prometeo Companies Customers  Company Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/companies/customers/{company_id}/search/companyname": {
      "post": {
        "tags": [
          "Prometeo Companies"
        ],
        "summary": "Search Customers From User By Company Name",
        "description": "Get all Customers from a User that is matching with company name",
        "operationId": "search_customers_from_user_by_company_name_api_prometeo_companies_customers__company_id__search_companyname_post",
        "parameters": [
          {
            "description": "User OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id",
              "description": "User OID"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Company Name",
                "description": "Company Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PrometeoCustomer"
                  },
                  "type": "array",
                  "title": "Response Search Customers From User By Company Name Api Prometeo Companies Customers  Company Id  Search Companyname Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/customers": {
      "get": {
        "tags": [
          "Prometeo Customers"
        ],
        "summary": "Read Customers",
        "operationId": "read_customers_api_prometeo_customers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PrometeoCustomer"
                  },
                  "type": "array",
                  "title": "Response Read Customers Api Prometeo Customers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/customers/{customer_id}": {
      "get": {
        "tags": [
          "Prometeo Customers"
        ],
        "summary": "Read Customer",
        "description": "Get customer information from their customer ID",
        "operationId": "read_customer_api_prometeo_customers__customer_id__get",
        "parameters": [
          {
            "description": "My Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id",
              "description": "My Customer ID"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrometeoCustomer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/customers/{customer_oid}/equipment_types": {
      "get": {
        "tags": [
          "Prometeo Customers"
        ],
        "summary": "Search Equipment Type From Customer",
        "description": "Get equipment type info for one Customer from a Parent Customer by the Customer ID",
        "operationId": "search_equipment_type_from_customer_api_prometeo_customers__customer_oid__equipment_types_get",
        "parameters": [
          {
            "description": "My Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "My Customer ID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EquipmentTypeV8"
                  },
                  "type": "array",
                  "title": "Response Search Equipment Type From Customer Api Prometeo Customers  Customer Oid  Equipment Types Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/parameters/versions": {
      "get": {
        "tags": [
          "Prometeo Parameters"
        ],
        "summary": "Read Supported Versions",
        "description": "Get currently API supported quoting parameters versions",
        "operationId": "read_supported_versions_api_prometeo_parameters_versions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedVersions"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/parameters/version/{customer_oid}": {
      "get": {
        "tags": [
          "Prometeo Parameters"
        ],
        "summary": "Read Quoting Version",
        "description": "Get quoting parameters version for Customer ID",
        "operationId": "read_quoting_version_api_prometeo_parameters_version__customer_oid__get",
        "parameters": [
          {
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "Customer ID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/parameters/v9/global/{customer_oid}": {
      "get": {
        "tags": [
          "Prometeo Parameters"
        ],
        "summary": "Read V9 Global Parameters",
        "operationId": "read_v9_global_parameters_api_prometeo_parameters_v9_global__customer_oid__get",
        "parameters": [
          {
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "Customer ID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParametersV9"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/parameters/v9/{customer_oid}": {
      "get": {
        "tags": [
          "Prometeo Parameters"
        ],
        "summary": "Read V9 Parameters",
        "operationId": "read_v9_parameters_api_prometeo_parameters_v9__customer_oid__get",
        "parameters": [
          {
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Oid",
              "description": "Customer ID"
            },
            "name": "customer_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV9"
                  },
                  "type": "array",
                  "title": "Response Read V9 Parameters Api Prometeo Parameters V9  Customer Oid  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/parameters/v9/fsc": {
      "put": {
        "tags": [
          "Prometeo Parameters"
        ],
        "summary": "Update Fsc Master Value From Parameters By Customer Id And Equipment Type",
        "operationId": "update_fsc_master_value_from_parameters_by_customer_id_and_equipment_type_api_prometeo_parameters_v9_fsc_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFSCMasterValueInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV9"
                  },
                  "type": "array",
                  "title": "Response Update Fsc Master Value From Parameters By Customer Id And Equipment Type Api Prometeo Parameters V9 Fsc Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/parameters/v9/e2open_fsc": {
      "put": {
        "tags": [
          "Prometeo Parameters"
        ],
        "summary": "Update E2Open Fsc Master Value From Parameters By Customer Id And Equipment Type",
        "operationId": "update_e2open_fsc_master_value_from_parameters_by_customer_id_and_equipment_type_api_prometeo_parameters_v9_e2open_fsc_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFSCMasterValueInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParametersV9"
                  },
                  "type": "array",
                  "title": "Response Update E2Open Fsc Master Value From Parameters By Customer Id And Equipment Type Api Prometeo Parameters V9 E2Open Fsc Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/{report_id}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Read Report By Id",
        "operationId": "read_report_by_id_api_prometeo_reports__report_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Report Id"
            },
            "name": "report_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/load_id/{load_id}/customer_id/{customer_id}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Read Last Report By Load Id",
        "operationId": "read_last_report_by_load_id_api_prometeo_reports_load_id__load_id__customer_id__customer_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Load Id"
            },
            "name": "load_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/quoted/load_id/{load_id}/customer_id/{customer_id}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Read Last Report By Load Id Status Bidpost",
        "operationId": "read_last_report_by_load_id_status_bidpost_api_prometeo_reports_quoted_load_id__load_id__customer_id__customer_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Load Id"
            },
            "name": "load_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/load_id/{load_id}/customer_id/{customer_id}/awarded/{awarded}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Read Last Report By Load Id And Awarded",
        "operationId": "read_last_report_by_load_id_and_awarded_api_prometeo_reports_load_id__load_id__customer_id__customer_id__awarded__awarded__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Load Id"
            },
            "name": "load_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Awarded"
            },
            "name": "awarded",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/exception/load_id/{load_id}/customer_id/{customer_id}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Read Last Exception By Load Id",
        "operationId": "read_last_exception_by_load_id_api_prometeo_reports_exception_load_id__load_id__customer_id__customer_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Load Id"
            },
            "name": "load_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__exception_report__ExceptionReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/extra_data/id/{extra_id}/customer_id/{customer_id}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Read Last Report By Extra Data Id",
        "operationId": "read_last_report_by_extra_data_id_api_prometeo_reports_extra_data_id__extra_id__customer_id__customer_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extra Id"
            },
            "name": "extra_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/": {
      "post": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Create Report",
        "operationId": "create_report_api_prometeo_reports__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__RequestReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/award/load_id/": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Update Awarded From Report By Load Id",
        "operationId": "update_awarded_from_report_by_load_id_api_prometeo_reports_award_load_id__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwardInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/one_source/award/load_id/": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Update Duplicate Awarded From Report By Load Id",
        "operationId": "update_duplicate_awarded_from_report_by_load_id_api_prometeo_reports_one_source_award_load_id__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AwardInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/{report_id}/transform/exception/": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Put Transform Report In Exception By Id",
        "operationId": "put_transform_report_in_exception_by_id_api_prometeo_reports__report_id__transform_exception__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Report Id"
            },
            "name": "report_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTransformReportInException"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__exception_report__ExceptionReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/exception/": {
      "post": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Create Exception Report",
        "operationId": "create_exception_report_api_prometeo_reports_exception__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__exception_report__RequestExceptionReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__exception_report__ExceptionReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/exception/{report_id}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Read Exception Report By Id",
        "operationId": "read_exception_report_by_id_api_prometeo_reports_exception__report_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Report Id"
            },
            "name": "report_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__exception_report__ExceptionReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/rebid/rate/load_id/": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Put Update Last Rate Rebid By Load Id",
        "operationId": "put_update_last_rate_rebid_by_load_id_api_prometeo_reports_rebid_rate_load_id__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRebidInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/load_id/": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Put Update Report By Load Id",
        "operationId": "put_update_report_by_load_id_api_prometeo_reports_load_id__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/external_portal/load_id/": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Put Update Report By Load Id External Portal",
        "operationId": "put_update_report_by_load_id_external_portal_api_prometeo_reports_external_portal_load_id__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/hide/{customer_id}": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Put Hide Report For Customer Id",
        "operationId": "put_hide_report_for_customer_id_api_prometeo_reports_hide__customer_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HideReportInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HideReportOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/most_frequent_lanes/{customer_id}": {
      "get": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Get Most Frequent Lanes",
        "operationId": "get_most_frequent_lanes_api_prometeo_reports_most_frequent_lanes__customer_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Number Of Lanes",
              "default": 100
            },
            "name": "number_of_lanes",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Number Of Days Before",
              "default": 7
            },
            "name": "number_of_days_before",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TopLane"
                  },
                  "type": "array",
                  "title": "Response Get Most Frequent Lanes Api Prometeo Reports Most Frequent Lanes  Customer Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/count_lanes/{customer_id}": {
      "post": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Get Search Reports Count Lanes",
        "operationId": "get_search_reports_count_lanes_api_prometeo_reports_count_lanes__customer_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountLanes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Get Search Reports Count Lanes Api Prometeo Reports Count Lanes  Customer Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/transaction_id/": {
      "put": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Put Update Report By Transaction Id",
        "operationId": "put_update_report_by_transaction_id_api_prometeo_reports_transaction_id__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportInputByTransactionId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/reports/customer_ids/days_in_past/{days_in_the_past}": {
      "post": {
        "tags": [
          "Prometeo Reports"
        ],
        "summary": "Get Search Reports By Customer Ids And Days In Past",
        "operationId": "get_search_reports_by_customer_ids_and_days_in_past_api_prometeo_reports_customer_ids_days_in_past__days_in_the_past__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0.0,
              "title": "Days In The Past"
            },
            "name": "days_in_the_past",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSearchReportsByCompanyIdAndDate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__report__Report"
                  },
                  "type": "array",
                  "title": "Response Get Search Reports By Customer Ids And Days In Past Api Prometeo Reports Customer Ids Days In Past  Days In The Past  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/rpas/audit_table/": {
      "put": {
        "tags": [
          "Prometeo RPAs"
        ],
        "summary": "Put Update Audit Table Report",
        "operationId": "put_update_audit_table_report_api_prometeo_rpas_audit_table__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditTableUpdateReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditTableReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Prometeo RPAs"
        ],
        "summary": "Post Create Audit Table Report",
        "operationId": "post_create_audit_table_report_api_prometeo_rpas_audit_table__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditTableCreateReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditTableReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/rpas/audit_table/bot_stopped/{bot_id}": {
      "put": {
        "tags": [
          "Prometeo RPAs"
        ],
        "summary": "Put Update Status To Stopped By Bot Id",
        "operationId": "put_update_status_to_stopped_by_bot_id_api_prometeo_rpas_audit_table_bot_stopped__bot_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Bot Id"
            },
            "name": "bot_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AuditTableReport"
                  },
                  "type": "array",
                  "title": "Response Put Update Status To Stopped By Bot Id Api Prometeo Rpas Audit Table Bot Stopped  Bot Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/geolocation/city/search/": {
      "post": {
        "tags": [
          "Prometeo Geolocation"
        ],
        "summary": "Search Cities",
        "operationId": "search_cities_api_prometeo_geolocation_city_search__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeolocationCitySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GeolocationCity"
                  },
                  "type": "array",
                  "title": "Response Search Cities Api Prometeo Geolocation City Search  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/prometeo/users_seats/{user_id}": {
      "get": {
        "tags": [
          "Prometeo Users seats"
        ],
        "summary": "Read User",
        "description": "Get user seat information from their User ID",
        "operationId": "read_user_api_prometeo_users_seats__user_id__get",
        "parameters": [
          {
            "description": "My User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id",
              "description": "My User ID"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrometeoUserSeat"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Accesorials": {
        "properties": {
          "accesorial": {
            "items": {
              "$ref": "#/components/schemas/Accessorial"
            },
            "type": "array"
          }
        },
        "type": "object",
        "title": "Accesorials"
      },
      "Accessorial": {
        "type": "string",
        "enum": [
          "LOAD",
          "UNLOAD",
          "HAZMAT",
          "TARPS",
          "RAMPS",
          "ADDITIONAL_STOP",
          "OTHER"
        ],
        "title": "Accessorial",
        "description": "An enumeration."
      },
      "AccessorialValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "accessorial": {
            "$ref": "#/components/schemas/Accessorial"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "accessorial"
        ],
        "title": "AccessorialValue",
        "description": "Generic object that represent an option with a charge"
      },
      "Accessorials": {
        "properties": {
          "accessorials": {
            "items": {
              "$ref": "#/components/schemas/AccessorialValue"
            },
            "type": "array",
            "title": "Accessorials"
          }
        },
        "type": "object",
        "required": [
          "accessorials"
        ],
        "title": "Accessorials"
      },
      "Action": {
        "type": "string",
        "enum": [
          "ALERT_NOTIFICATION",
          "GO",
          "NO_GO",
          "EXTRA_CHARGE",
          "INFO",
          "BASELINE_RATE",
          "CONTRACTUAL_RATE"
        ],
        "title": "Action",
        "description": "Type of action to do for an event"
      },
      "AdditionalStops": {
        "properties": {
          "stops": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AdditionalValue"
            },
            "type": "object",
            "title": "Stops"
          }
        },
        "type": "object",
        "required": [
          "stops"
        ],
        "title": "AdditionalStops"
      },
      "AdditionalStopsV6": {
        "properties": {
          "stops": {
            "additionalProperties": {
              "$ref": "#/components/schemas/OptionalActionOption"
            },
            "type": "object",
            "title": "Stops"
          }
        },
        "type": "object",
        "required": [
          "stops"
        ],
        "title": "AdditionalStopsV6"
      },
      "AdditionalValue": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          }
        },
        "type": "object",
        "required": [
          "value",
          "unit"
        ],
        "title": "AdditionalValue",
        "description": "Generic object that represent a charge"
      },
      "AfterHours": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "string",
            "format": "time",
            "title": "From ",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "to": {
            "type": "string",
            "format": "time",
            "title": "To",
            "description": "ISO 8601 format",
            "example": "14:23"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "from_",
          "to"
        ],
        "title": "AfterHours",
        "description": "Generic object that represent an option with a charge"
      },
      "AfterHoursV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "string",
            "format": "time",
            "title": "From ",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "to": {
            "type": "string",
            "format": "time",
            "title": "To",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to",
          "action"
        ],
        "title": "AfterHoursV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "Agent": {
        "properties": {
          "agents": {
            "items": {
              "$ref": "#/components/schemas/AgentCompany"
            },
            "type": "array",
            "title": "Agents"
          }
        },
        "type": "object",
        "title": "Agent"
      },
      "AgentCompany": {
        "properties": {
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          },
          "company_name": {
            "type": "string",
            "title": "Company Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "company_id",
          "company_name",
          "code"
        ],
        "title": "AgentCompany"
      },
      "ApiConnection": {
        "type": "string",
        "enum": [
          "BOTH",
          "SPOT",
          "ROUTING_GUIDE"
        ],
        "title": "ApiConnection",
        "description": "An enumeration."
      },
      "ArcherData": {
        "properties": {
          "shipper_id": {
            "type": "integer",
            "title": "Shipper Id"
          },
          "reefer_temperature": {
            "type": "string",
            "title": "Reefer Temperature"
          }
        },
        "type": "object",
        "required": [
          "shipper_id"
        ],
        "title": "ArcherData"
      },
      "AuditTableCreateReport": {
        "properties": {
          "bot_customer_platform_phase_id": {
            "type": "integer",
            "title": "Bot Customer Platform Phase Id"
          },
          "bot_id": {
            "type": "string",
            "title": "Bot Id"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "ISO 8601 format"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "ISO 8601 format"
          },
          "function_name": {
            "type": "string",
            "minLength": 1,
            "title": "Function Name"
          },
          "event_status": {
            "type": "string",
            "minLength": 1,
            "title": "Event Status"
          },
          "error_information": {
            "type": "string",
            "minLength": 1,
            "title": "Error Information"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__audit_table_report__ExtraReportFields"
          }
        },
        "type": "object",
        "required": [
          "bot_customer_platform_phase_id",
          "start_date",
          "function_name",
          "event_status"
        ],
        "title": "AuditTableCreateReport"
      },
      "AuditTableReport": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "bot_customer_platform_phase_id": {
            "type": "integer",
            "title": "Bot Customer Platform Phase Id"
          },
          "bot_id": {
            "type": "string",
            "title": "Bot Id"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "ISO 8601 format"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "ISO 8601 format"
          },
          "function_name": {
            "type": "string",
            "minLength": 1,
            "title": "Function Name"
          },
          "event_status": {
            "type": "string",
            "minLength": 1,
            "title": "Event Status"
          },
          "error_information": {
            "type": "string",
            "minLength": 1,
            "title": "Error Information"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__audit_table_report__ExtraReportFields"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "ISO 8601 format"
          }
        },
        "type": "object",
        "required": [
          "bot_customer_platform_phase_id",
          "start_date",
          "function_name",
          "event_status"
        ],
        "title": "AuditTableReport"
      },
      "AuditTableUpdateReport": {
        "properties": {
          "bot_customer_platform_phase_id": {
            "type": "integer",
            "title": "Bot Customer Platform Phase Id"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "ISO 8601 format"
          },
          "event_status": {
            "type": "string",
            "minLength": 1,
            "title": "Event Status"
          },
          "error_information": {
            "type": "string",
            "minLength": 1,
            "title": "Error Information"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__audit_table_report__ExtraReportFields"
          }
        },
        "type": "object",
        "required": [
          "bot_customer_platform_phase_id",
          "event_status"
        ],
        "title": "AuditTableUpdateReport"
      },
      "AwardInput": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "awarded": {
            "type": "boolean",
            "title": "Awarded"
          },
          "awarded_rate": {
            "type": "number",
            "title": "Awarded Rate"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "load_id",
          "awarded"
        ],
        "title": "AwardInput"
      },
      "AwardedData": {
        "properties": {
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails"
          },
          "match_rate": {
            "type": "boolean",
            "title": "Match Rate"
          },
          "dollar_threshold": {
            "type": "number",
            "title": "Dollar Threshold"
          }
        },
        "type": "object",
        "title": "AwardedData"
      },
      "BidPostV7": {
        "properties": {
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          }
        },
        "type": "object",
        "required": [
          "bid_post"
        ],
        "title": "BidPostV7"
      },
      "BillAmountMarginV5": {
        "properties": {
          "rates": {
            "items": {
              "$ref": "#/components/schemas/BillAmountMarginV5Value"
            },
            "type": "array",
            "title": "Rates"
          }
        },
        "type": "object",
        "required": [
          "rates"
        ],
        "title": "BillAmountMarginV5"
      },
      "BillAmountMarginV5Value": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "from_"
        ],
        "title": "BillAmountMarginV5Value",
        "description": "Generic object that represent an option with a charge"
      },
      "BillAmountMarginV8": {
        "properties": {
          "rates": {
            "items": {
              "$ref": "#/components/schemas/BillAmountMarginV5Value"
            },
            "type": "array",
            "title": "Rates"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "rates",
          "active"
        ],
        "title": "BillAmountMarginV8"
      },
      "Blueyonder": {
        "properties": {
          "auto_tender": {
            "$ref": "#/components/schemas/BlueyonderAutoTender"
          }
        },
        "type": "object",
        "required": [
          "auto_tender"
        ],
        "title": "Blueyonder"
      },
      "BlueyonderAutoTender": {
        "type": "string",
        "enum": [
          "YES",
          "NO"
        ],
        "title": "BlueyonderAutoTender",
        "description": "An enumeration."
      },
      "BreakthroughFuelV9": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "base_rate": {
            "type": "number",
            "title": "Base Rate"
          }
        },
        "type": "object",
        "required": [
          "value",
          "base_rate"
        ],
        "title": "BreakthroughFuelV9"
      },
      "CalculateDateValueV8": {
        "properties": {
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          },
          "transit_time": {
            "type": "integer",
            "title": "Transit Time"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "transit_time"
        ],
        "title": "CalculateDateValueV8"
      },
      "Commodities": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "weight": {
            "type": "integer",
            "title": "Weight"
          },
          "unit_type": {
            "$ref": "#/components/schemas/Unit"
          }
        },
        "type": "object",
        "title": "Commodities"
      },
      "Commodity": {
        "properties": {
          "commodities": {
            "items": {
              "$ref": "#/components/schemas/Commodities"
            },
            "type": "array",
            "title": "Commodities"
          }
        },
        "type": "object",
        "title": "Commodity"
      },
      "CompanyPlatforms": {
        "properties": {
          "e2open": {
            "$ref": "#/components/schemas/E2Open"
          }
        },
        "type": "object",
        "title": "CompanyPlatforms"
      },
      "ConditionedLanes": {
        "properties": {
          "origins": {
            "items": {
              "$ref": "#/components/schemas/Origin"
            },
            "type": "array",
            "title": "Origins"
          },
          "destinations": {
            "items": {
              "$ref": "#/components/schemas/Destination"
            },
            "type": "array",
            "title": "Destinations"
          },
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/dbs__tabi__schemas__conditioned_lanes__Lane"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "title": "ConditionedLanes"
      },
      "ConditionedLanesByStateV8": {
        "properties": {
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/ConditionedLanesByStateValueV8"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "required": [
          "lanes"
        ],
        "title": "ConditionedLanesByStateV8"
      },
      "ConditionedLanesByStateValueV8": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "string",
            "minLength": 1,
            "title": "From "
          },
          "to": {
            "type": "string",
            "minLength": 1,
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "from_",
          "to"
        ],
        "title": "ConditionedLanesByStateValueV8",
        "description": "Generic object that represent an option with a charge"
      },
      "ConditionedLanesV5": {
        "properties": {
          "origins": {
            "items": {
              "$ref": "#/components/schemas/ValueStrOption"
            },
            "type": "array",
            "title": "Origins"
          },
          "origins_states": {
            "items": {
              "$ref": "#/components/schemas/ValueStrOption"
            },
            "type": "array",
            "title": "Origins States"
          },
          "origins_zips": {
            "items": {
              "$ref": "#/components/schemas/ValueStrOption"
            },
            "type": "array",
            "title": "Origins Zips"
          },
          "destinations": {
            "items": {
              "$ref": "#/components/schemas/ValueStrOption"
            },
            "type": "array",
            "title": "Destinations"
          },
          "destinations_states": {
            "items": {
              "$ref": "#/components/schemas/ValueStrOption"
            },
            "type": "array",
            "title": "Destinations States"
          },
          "destinations_zips": {
            "items": {
              "$ref": "#/components/schemas/ValueStrOption"
            },
            "type": "array",
            "title": "Destinations Zips"
          },
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/dbs__tabi__schemas__conditioned_lanes__Lane"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "title": "ConditionedLanesV5"
      },
      "ConditionedLocations": {
        "properties": {
          "pickups": {
            "items": {
              "$ref": "#/components/schemas/Pickup"
            },
            "type": "array",
            "title": "Pickups"
          },
          "deliveries": {
            "items": {
              "$ref": "#/components/schemas/Delivery"
            },
            "type": "array",
            "title": "Deliveries"
          }
        },
        "type": "object",
        "title": "ConditionedLocations"
      },
      "CountLanes": {
        "properties": {
          "pickup": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "delivery": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          }
        },
        "type": "object",
        "title": "CountLanes"
      },
      "CrossBorderV6": {
        "properties": {
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/CrossBorderValueV6"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "required": [
          "lanes"
        ],
        "title": "CrossBorderV6"
      },
      "CrossBorderValueV6": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "$ref": "#/components/schemas/ISO31661Alfa3"
          },
          "to": {
            "$ref": "#/components/schemas/ISO31661Alfa3"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to",
          "action"
        ],
        "title": "CrossBorderValueV6",
        "description": "Generic object that represent an option with an optional charge"
      },
      "Customer": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "companyname": {
            "type": "string",
            "title": "Companyname"
          },
          "contactname": {
            "type": "string",
            "title": "Contactname"
          },
          "contactphone": {
            "type": "string",
            "title": "Contactphone"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "duns": {
            "type": "string",
            "title": "Duns"
          },
          "uatpost": {
            "type": "boolean",
            "title": "Uatpost"
          },
          "third_party": {
            "$ref": "#/components/schemas/ThirdParty"
          },
          "parade": {
            "type": "boolean",
            "title": "Parade"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "oid"
        ],
        "title": "Customer"
      },
      "Delivery": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "delivery": {
            "type": "string",
            "title": "Delivery"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "delivery"
        ],
        "title": "Delivery",
        "description": "Generic object that represent an option with a charge"
      },
      "DeliveryDateV8": {
        "properties": {
          "no_delivery_date": {
            "$ref": "#/components/schemas/DeliveryDateValueV8"
          },
          "delivery_date_in_past": {
            "$ref": "#/components/schemas/DeliveryDateValueV8"
          },
          "calculate_dates": {
            "items": {
              "$ref": "#/components/schemas/CalculateDateValueV8"
            },
            "type": "array",
            "title": "Calculate Dates",
            "default": []
          }
        },
        "type": "object",
        "title": "DeliveryDateV8"
      },
      "DeliveryDateV8BusinessRuleEnum": {
        "type": "string",
        "enum": [
          "SET_PICK_UP_DATE",
          "SET_PICK_UP_DATE_+1",
          "SET_PICK_UP_DATE_+2",
          "CALCULATE"
        ],
        "title": "DeliveryDateV8BusinessRuleEnum",
        "description": "An enumeration."
      },
      "DeliveryDateValueV8": {
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/DeliveryDateV8BusinessRuleEnum"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "DeliveryDateValueV8"
      },
      "DeliveryTime": {
        "properties": {
          "times": {
            "items": {
              "$ref": "#/components/schemas/DeliveryTimeValue"
            },
            "type": "array",
            "title": "Times"
          }
        },
        "type": "object",
        "required": [
          "times"
        ],
        "title": "DeliveryTime"
      },
      "DeliveryTimeV7": {
        "properties": {
          "times": {
            "items": {
              "$ref": "#/components/schemas/DeliveryTimeValueV7"
            },
            "type": "array",
            "title": "Times"
          }
        },
        "type": "object",
        "required": [
          "times"
        ],
        "title": "DeliveryTimeV7"
      },
      "DeliveryTimeValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "string",
            "format": "time",
            "title": "From ",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "to": {
            "type": "string",
            "format": "time",
            "title": "To",
            "description": "ISO 8601 format",
            "example": "14:23"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "from_",
          "to"
        ],
        "title": "DeliveryTimeValue",
        "description": "Generic object that represent an option with a charge"
      },
      "DeliveryTimeValueV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "from_": {
            "type": "string",
            "format": "time",
            "title": "From ",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "to": {
            "type": "string",
            "format": "time",
            "title": "To",
            "description": "ISO 8601 format",
            "example": "14:23"
          }
        },
        "type": "object",
        "required": [
          "action",
          "from_",
          "to"
        ],
        "title": "DeliveryTimeValueV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "Destination": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "destination": {
            "type": "string",
            "title": "Destination"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "destination"
        ],
        "title": "Destination",
        "description": "Generic object that represent an option with a charge"
      },
      "DieselFuelIndex": {
        "properties": {
          "source": {
            "$ref": "#/components/schemas/Source"
          },
          "value": {
            "$ref": "#/components/schemas/AdditionalValue"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "DieselFuelIndex"
      },
      "DistanceTiers": {
        "properties": {
          "distance_tiers": {
            "items": {
              "$ref": "#/components/schemas/DistanceTiersValue"
            },
            "type": "array",
            "title": "Distance Tiers"
          },
          "empty_distance_additional_values": {
            "type": "boolean",
            "title": "Empty Distance Additional Values",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "distance_tiers"
        ],
        "title": "DistanceTiers"
      },
      "DistanceTiersV8": {
        "properties": {
          "distance_tiers": {
            "items": {
              "$ref": "#/components/schemas/DistanceTiersValue"
            },
            "type": "array",
            "title": "Distance Tiers"
          },
          "empty_distance_additional_values": {
            "type": "boolean",
            "title": "Empty Distance Additional Values",
            "default": false
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "distance_tiers",
          "active"
        ],
        "title": "DistanceTiersV8"
      },
      "DistanceTiersValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          },
          "minimum_rate": {
            "$ref": "#/components/schemas/AdditionalValue"
          }
        },
        "type": "object",
        "required": [
          "from_"
        ],
        "title": "DistanceTiersValue",
        "description": "Generic object that represent an option with an optional charge"
      },
      "E2Open": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails"
          }
        },
        "type": "object",
        "title": "E2Open"
      },
      "E2OpenAdditionalValue": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "ISO 8601 format"
          }
        },
        "type": "object",
        "required": [
          "value",
          "unit"
        ],
        "title": "E2OpenAdditionalValue",
        "description": "Generic object that represent a charge"
      },
      "E2OpenSpot": {
        "properties": {
          "basis": {
            "$ref": "#/components/schemas/E2OpenSpotBasis"
          },
          "mode": {
            "$ref": "#/components/schemas/E2OpenSpotMode"
          }
        },
        "type": "object",
        "required": [
          "basis"
        ],
        "title": "E2OpenSpot"
      },
      "E2OpenSpotBasis": {
        "type": "string",
        "enum": [
          "CPM",
          "FLT"
        ],
        "title": "E2OpenSpotBasis",
        "description": "An enumeration."
      },
      "E2OpenSpotMode": {
        "type": "string",
        "enum": [
          "RPA",
          "API"
        ],
        "title": "E2OpenSpotMode",
        "description": "An enumeration."
      },
      "EmailNotification": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails"
          },
          "no_go": {
            "type": "boolean",
            "title": "No Go"
          }
        },
        "type": "object",
        "required": [
          "emails",
          "no_go"
        ],
        "title": "EmailNotification"
      },
      "Engine": {
        "type": "string",
        "enum": [
          "RATE_ENGINE_1",
          "RATE_ENGINE_2",
          "RATE_ENGINE_3",
          "RATE_ENGINE_4",
          "RATE_ENGINE_5",
          "RATE_ENGINE_7",
          "RATE_ENGINE_8",
          "RATE_ENGINE_10",
          "RATE_ENGINE_11",
          "RATE_ENGINE_12",
          "RATE_ENGINE_13",
          "RATE_ENGINE_14",
          "RATE_ENGINE_15",
          "RATE_ENGINE_16",
          "RATE_ENGINE_17",
          "RATE_ENGINE_18",
          "RATE_ENGINE_19",
          "RATE_ENGINE_20"
        ],
        "title": "Engine",
        "description": "An enumeration."
      },
      "EngineValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "engine": {
            "$ref": "#/components/schemas/Engine"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "engine"
        ],
        "title": "EngineValue",
        "description": "Generic object that represent an option with a charge"
      },
      "Environment": {
        "type": "string",
        "enum": [
          "PROD",
          "QA",
          "TEST",
          "DEV"
        ],
        "title": "Environment",
        "description": "An enumeration."
      },
      "EquipmentTypeV8": {
        "properties": {
          "keywords_mapping": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords Mapping"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "default": {
            "type": "boolean",
            "title": "Default"
          },
          "priority": {
            "type": "integer",
            "maximum": 4.0,
            "minimum": 1.0,
            "title": "Priority"
          },
          "equipment_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Trailer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Equipment Type"
          }
        },
        "type": "object",
        "required": [
          "keywords_mapping",
          "action",
          "default",
          "equipment_type"
        ],
        "title": "EquipmentTypeV8"
      },
      "ExtraChargesAndRestrictionsV6": {
        "properties": {
          "extra_charges_and_restrictions": {
            "items": {
              "$ref": "#/components/schemas/ExtraChargesAndRestrictionsValueV6"
            },
            "type": "array",
            "title": "Extra Charges And Restrictions"
          }
        },
        "type": "object",
        "required": [
          "extra_charges_and_restrictions"
        ],
        "title": "ExtraChargesAndRestrictionsV6"
      },
      "ExtraChargesAndRestrictionsV7": {
        "properties": {
          "extra_charges_and_restrictions": {
            "items": {
              "$ref": "#/components/schemas/ExtraChargesAndRestrictionsValueV7"
            },
            "type": "array",
            "title": "Extra Charges And Restrictions"
          }
        },
        "type": "object",
        "required": [
          "extra_charges_and_restrictions"
        ],
        "title": "ExtraChargesAndRestrictionsV7"
      },
      "ExtraChargesAndRestrictionsV8": {
        "properties": {
          "extra_charges_and_restrictions": {
            "items": {
              "$ref": "#/components/schemas/ExtraChargesAndRestrictionsValueV8"
            },
            "type": "array",
            "title": "Extra Charges And Restrictions"
          }
        },
        "type": "object",
        "required": [
          "extra_charges_and_restrictions"
        ],
        "title": "ExtraChargesAndRestrictionsV8"
      },
      "ExtraChargesAndRestrictionsValueV6": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          }
        },
        "type": "object",
        "required": [
          "action",
          "item"
        ],
        "title": "ExtraChargesAndRestrictionsValueV6",
        "description": "Generic object that represent an option with an optional charge"
      },
      "ExtraChargesAndRestrictionsValueV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "item": {
            "$ref": "#/components/schemas/ItemV7"
          }
        },
        "type": "object",
        "required": [
          "action",
          "item"
        ],
        "title": "ExtraChargesAndRestrictionsValueV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "ExtraChargesAndRestrictionsValueV8": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "item": {
            "$ref": "#/components/schemas/ItemV8"
          },
          "keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords"
          }
        },
        "type": "object",
        "required": [
          "action",
          "item",
          "keywords"
        ],
        "title": "ExtraChargesAndRestrictionsValueV8",
        "description": "Generic object that represent an option with an optional charge"
      },
      "ExtraData": {
        "properties": {
          "ids_list": {
            "$ref": "#/components/schemas/IDsList"
          },
          "e2open_offer_id": {
            "type": "integer",
            "title": "E2Open Offer Id"
          }
        },
        "type": "object",
        "title": "ExtraData"
      },
      "FixedLanes": {
        "properties": {
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/dbs__tabi__schemas__fixed_lanes__Lane"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "required": [
          "lanes"
        ],
        "title": "FixedLanes"
      },
      "FixedLanesV5": {
        "properties": {
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/LaneV5"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "required": [
          "lanes"
        ],
        "title": "FixedLanesV5"
      },
      "FromTo": {
        "properties": {
          "from_": {
            "type": "number",
            "minimum": 0.0,
            "title": "From "
          },
          "to": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to"
        ],
        "title": "FromTo"
      },
      "FscValueV9": {
        "properties": {
          "at_least": {
            "type": "number",
            "title": "At Least"
          },
          "but_less_than": {
            "type": "number",
            "title": "But Less Than"
          },
          "fsc": {
            "type": "number",
            "title": "Fsc"
          }
        },
        "type": "object",
        "required": [
          "at_least",
          "but_less_than",
          "fsc"
        ],
        "title": "FscValueV9"
      },
      "Geography": {
        "type": "string",
        "enum": [
          "STATE_TO_STATE",
          "100_MILE_RADIUS",
          "150_MILE_RADIUS"
        ],
        "title": "Geography",
        "description": "An enumeration."
      },
      "GeolocationCity": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name",
            "description": "City name"
          },
          "short_name": {
            "type": "string",
            "minLength": 1,
            "title": "Short Name",
            "description": "City short name"
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "title": "State",
            "description": "Full name of state"
          },
          "state_abbreviation": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "State Abbreviation",
            "description": "short name of state"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "example": "USA"
          },
          "zipcode": {
            "$ref": "#/components/schemas/GeolocationZipcode"
          },
          "zipcode_coords": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ZipcodeCords"
            },
            "type": "object",
            "title": "Zipcode Coords"
          }
        },
        "type": "object",
        "title": "GeolocationCity"
      },
      "GeolocationCitySearchRequest": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name",
            "description": "City name"
          },
          "short_name": {
            "type": "string",
            "minLength": 1,
            "title": "Short Name",
            "description": "City short name"
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "title": "State",
            "description": "Full name of state"
          },
          "state_abbreviation": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "State Abbreviation",
            "description": "short name of state"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "example": "USA"
          },
          "zipcode": {
            "$ref": "#/components/schemas/GeolocationZipcode"
          },
          "zipcode_coords": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ZipcodeCords"
            },
            "type": "object",
            "title": "Zipcode Coords"
          }
        },
        "type": "object",
        "title": "GeolocationCitySearchRequest"
      },
      "GeolocationZipcode": {
        "properties": {
          "zips": {
            "items": {
              "type": "string",
              "maxLength": 10,
              "minLength": 1
            },
            "type": "array",
            "title": "Zips",
            "description": "list of zip codes for this city"
          },
          "prefixes": {
            "items": {
              "type": "string",
              "maxLength": 10,
              "minLength": 1
            },
            "type": "array",
            "title": "Prefixes",
            "description": "list of zip prefixes codes for this city"
          }
        },
        "type": "object",
        "title": "GeolocationZipcode"
      },
      "GetSearchReportsByCompanyIdAndDate": {
        "properties": {
          "customer_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Customer Ids"
          }
        },
        "type": "object",
        "required": [
          "customer_ids"
        ],
        "title": "GetSearchReportsByCompanyIdAndDate"
      },
      "GlobalParameters": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "status_board_1": {
            "type": "boolean",
            "title": "Status Board 1",
            "description": "DAT"
          },
          "status_board_2": {
            "type": "boolean",
            "title": "Status Board 2",
            "description": "TRUCKSTOP"
          },
          "status_board_3": {
            "type": "boolean",
            "title": "Status Board 3",
            "description": "GREENSCREENS"
          },
          "status_board_4": {
            "type": "boolean",
            "title": "Status Board 4",
            "description": "C4"
          },
          "status_board_7": {
            "type": "boolean",
            "title": "Status Board 7",
            "description": "REVENOVA"
          },
          "status_board_8": {
            "type": "boolean",
            "title": "Status Board 8",
            "description": "LOADDEX"
          },
          "status_board_10": {
            "type": "boolean",
            "title": "Status Board 10",
            "description": "FREIGHTWAVES"
          },
          "status_board_11": {
            "type": "boolean",
            "title": "Status Board 11",
            "description": "123LOADBOARD"
          },
          "status_board_12": {
            "type": "boolean",
            "title": "Status Board 12",
            "description": "MCLEOD"
          },
          "status_board_13": {
            "type": "boolean",
            "title": "Status Board 13",
            "description": "PARADE"
          },
          "status_board_14": {
            "type": "boolean",
            "title": "Status Board 14",
            "description": "ARCBEST"
          },
          "status_board_15": {
            "type": "boolean",
            "title": "Status Board 15",
            "description": "DAT RATE CAST"
          },
          "status_board_16": {
            "type": "boolean",
            "title": "Status Board 16",
            "description": "ARCHER"
          },
          "status_board_17": {
            "type": "boolean",
            "title": "Status Board 17",
            "description": "DIRECT TRANS"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "status_board_1",
          "status_board_2",
          "status_board_3",
          "status_board_4",
          "status_board_7",
          "status_board_8",
          "status_board_10",
          "status_board_11",
          "status_board_12",
          "status_board_13",
          "status_board_14",
          "status_board_15",
          "status_board_16",
          "status_board_17"
        ],
        "title": "GlobalParameters",
        "description": "quoting_versions: 2, 3"
      },
      "GlobalParametersV4": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "status_board_1": {
            "type": "boolean",
            "title": "Status Board 1",
            "description": "DAT"
          },
          "status_board_2": {
            "type": "boolean",
            "title": "Status Board 2",
            "description": "TRUCKSTOP"
          },
          "status_board_3": {
            "type": "boolean",
            "title": "Status Board 3",
            "description": "GREENSCREENS"
          },
          "status_board_4": {
            "type": "boolean",
            "title": "Status Board 4",
            "description": "C4"
          },
          "status_board_7": {
            "type": "boolean",
            "title": "Status Board 7",
            "description": "REVENOVA"
          },
          "status_board_8": {
            "type": "boolean",
            "title": "Status Board 8",
            "description": "LOADDEX"
          },
          "status_board_10": {
            "type": "boolean",
            "title": "Status Board 10",
            "description": "FREIGHTWAVES"
          },
          "status_board_11": {
            "type": "boolean",
            "title": "Status Board 11",
            "description": "123LOADBOARD"
          },
          "status_board_12": {
            "type": "boolean",
            "title": "Status Board 12",
            "description": "MCLEOD"
          },
          "status_board_13": {
            "type": "boolean",
            "title": "Status Board 13",
            "description": "PARADE"
          },
          "status_board_14": {
            "type": "boolean",
            "title": "Status Board 14",
            "description": "ARCBEST"
          },
          "status_board_15": {
            "type": "boolean",
            "title": "Status Board 15",
            "description": "DAT RATE CAST"
          },
          "status_board_16": {
            "type": "boolean",
            "title": "Status Board 16",
            "description": "ARCHER"
          },
          "status_board_17": {
            "type": "boolean",
            "title": "Status Board 17",
            "description": "DIRECT TRANS"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "status_board_1",
          "status_board_2",
          "status_board_3",
          "status_board_4",
          "status_board_7",
          "status_board_8",
          "status_board_10",
          "status_board_11",
          "status_board_12",
          "status_board_13",
          "status_board_14",
          "status_board_15",
          "status_board_16",
          "status_board_17"
        ],
        "title": "GlobalParametersV4",
        "description": "quoting_versions: 4"
      },
      "GlobalParametersV5": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "status_board_1": {
            "type": "boolean",
            "title": "Status Board 1",
            "description": "DAT"
          },
          "status_board_2": {
            "type": "boolean",
            "title": "Status Board 2",
            "description": "TRUCKSTOP"
          },
          "status_board_3": {
            "type": "boolean",
            "title": "Status Board 3",
            "description": "GREENSCREENS"
          },
          "status_board_4": {
            "type": "boolean",
            "title": "Status Board 4",
            "description": "C4"
          },
          "status_board_7": {
            "type": "boolean",
            "title": "Status Board 7",
            "description": "REVENOVA"
          },
          "status_board_8": {
            "type": "boolean",
            "title": "Status Board 8",
            "description": "LOADDEX"
          },
          "status_board_10": {
            "type": "boolean",
            "title": "Status Board 10",
            "description": "FREIGHTWAVES"
          },
          "status_board_11": {
            "type": "boolean",
            "title": "Status Board 11",
            "description": "123LOADBOARD"
          },
          "status_board_12": {
            "type": "boolean",
            "title": "Status Board 12",
            "description": "MCLEOD"
          },
          "status_board_13": {
            "type": "boolean",
            "title": "Status Board 13",
            "description": "PARADE"
          },
          "status_board_14": {
            "type": "boolean",
            "title": "Status Board 14",
            "description": "ARCBEST"
          },
          "status_board_15": {
            "type": "boolean",
            "title": "Status Board 15",
            "description": "DAT RATE CAST"
          },
          "status_board_16": {
            "type": "boolean",
            "title": "Status Board 16",
            "description": "ARCHER"
          },
          "status_board_17": {
            "type": "boolean",
            "title": "Status Board 17",
            "description": "DIRECT TRANS"
          },
          "multi_stops_api": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultiStopsAPIEnum"
              }
            ],
            "default": "GOOGLE_MAPS"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "status_board_1",
          "status_board_2",
          "status_board_3",
          "status_board_4",
          "status_board_7",
          "status_board_8",
          "status_board_10",
          "status_board_11",
          "status_board_12",
          "status_board_13",
          "status_board_14",
          "status_board_15",
          "status_board_16",
          "status_board_17"
        ],
        "title": "GlobalParametersV5",
        "description": "quoting_versions: 5"
      },
      "GlobalParametersV6": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "status_board_1": {
            "type": "boolean",
            "title": "Status Board 1",
            "description": "DAT"
          },
          "status_board_2": {
            "type": "boolean",
            "title": "Status Board 2",
            "description": "TRUCKSTOP"
          },
          "status_board_3": {
            "type": "boolean",
            "title": "Status Board 3",
            "description": "GREENSCREENS"
          },
          "status_board_4": {
            "type": "boolean",
            "title": "Status Board 4",
            "description": "C4"
          },
          "status_board_7": {
            "type": "boolean",
            "title": "Status Board 7",
            "description": "REVENOVA"
          },
          "status_board_8": {
            "type": "boolean",
            "title": "Status Board 8",
            "description": "LOADDEX"
          },
          "status_board_10": {
            "type": "boolean",
            "title": "Status Board 10",
            "description": "FREIGHTWAVES"
          },
          "status_board_11": {
            "type": "boolean",
            "title": "Status Board 11",
            "description": "123LOADBOARD"
          },
          "status_board_12": {
            "type": "boolean",
            "title": "Status Board 12",
            "description": "MCLEOD"
          },
          "status_board_13": {
            "type": "boolean",
            "title": "Status Board 13",
            "description": "PARADE"
          },
          "status_board_14": {
            "type": "boolean",
            "title": "Status Board 14",
            "description": "ARCBEST"
          },
          "status_board_15": {
            "type": "boolean",
            "title": "Status Board 15",
            "description": "DAT RATE CAST"
          },
          "status_board_16": {
            "type": "boolean",
            "title": "Status Board 16",
            "description": "ARCHER"
          },
          "status_board_17": {
            "type": "boolean",
            "title": "Status Board 17",
            "description": "DIRECT TRANS"
          },
          "multi_stops_api": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultiStopsAPIEnum"
              }
            ],
            "default": "GOOGLE_MAPS"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "status_board_1",
          "status_board_2",
          "status_board_3",
          "status_board_4",
          "status_board_7",
          "status_board_8",
          "status_board_10",
          "status_board_11",
          "status_board_12",
          "status_board_13",
          "status_board_14",
          "status_board_15",
          "status_board_16",
          "status_board_17"
        ],
        "title": "GlobalParametersV6",
        "description": "quoting_versions: 6"
      },
      "GlobalParametersV7": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "status_board_1": {
            "type": "boolean",
            "title": "Status Board 1",
            "description": "DAT"
          },
          "status_board_2": {
            "type": "boolean",
            "title": "Status Board 2",
            "description": "TRUCKSTOP"
          },
          "status_board_3": {
            "type": "boolean",
            "title": "Status Board 3",
            "description": "GREENSCREENS"
          },
          "status_board_4": {
            "type": "boolean",
            "title": "Status Board 4",
            "description": "C4"
          },
          "status_board_7": {
            "type": "boolean",
            "title": "Status Board 7",
            "description": "REVENOVA"
          },
          "status_board_8": {
            "type": "boolean",
            "title": "Status Board 8",
            "description": "LOADDEX"
          },
          "status_board_10": {
            "type": "boolean",
            "title": "Status Board 10",
            "description": "FREIGHTWAVES"
          },
          "status_board_11": {
            "type": "boolean",
            "title": "Status Board 11",
            "description": "123LOADBOARD"
          },
          "status_board_12": {
            "type": "boolean",
            "title": "Status Board 12",
            "description": "MCLEOD"
          },
          "status_board_13": {
            "type": "boolean",
            "title": "Status Board 13",
            "description": "PARADE"
          },
          "status_board_14": {
            "type": "boolean",
            "title": "Status Board 14",
            "description": "ARCBEST"
          },
          "status_board_15": {
            "type": "boolean",
            "title": "Status Board 15",
            "description": "DAT RATE CAST"
          },
          "status_board_16": {
            "type": "boolean",
            "title": "Status Board 16",
            "description": "ARCHER"
          },
          "status_board_17": {
            "type": "boolean",
            "title": "Status Board 17",
            "description": "DIRECT TRANS"
          },
          "multi_stops_api": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultiStopsAPIEnum"
              }
            ],
            "default": "GOOGLE_MAPS"
          },
          "greenscreens_endpoint_switch": {
            "$ref": "#/components/schemas/GreenscreensSwitchValues"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "status_board_1",
          "status_board_2",
          "status_board_3",
          "status_board_4",
          "status_board_7",
          "status_board_8",
          "status_board_10",
          "status_board_11",
          "status_board_12",
          "status_board_13",
          "status_board_14",
          "status_board_15",
          "status_board_16",
          "status_board_17"
        ],
        "title": "GlobalParametersV7",
        "description": "quoting_versions: 7"
      },
      "GlobalParametersV8": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "status_board_1": {
            "type": "boolean",
            "title": "Status Board 1",
            "description": "DAT"
          },
          "status_board_2": {
            "type": "boolean",
            "title": "Status Board 2",
            "description": "TRUCKSTOP"
          },
          "status_board_3": {
            "type": "boolean",
            "title": "Status Board 3",
            "description": "GREENSCREENS"
          },
          "status_board_4": {
            "type": "boolean",
            "title": "Status Board 4",
            "description": "C4"
          },
          "status_board_7": {
            "type": "boolean",
            "title": "Status Board 7",
            "description": "REVENOVA"
          },
          "status_board_8": {
            "type": "boolean",
            "title": "Status Board 8",
            "description": "LOADDEX"
          },
          "status_board_10": {
            "type": "boolean",
            "title": "Status Board 10",
            "description": "FREIGHTWAVES"
          },
          "status_board_11": {
            "type": "boolean",
            "title": "Status Board 11",
            "description": "123LOADBOARD"
          },
          "status_board_12": {
            "type": "boolean",
            "title": "Status Board 12",
            "description": "MCLEOD"
          },
          "status_board_13": {
            "type": "boolean",
            "title": "Status Board 13",
            "description": "PARADE"
          },
          "status_board_14": {
            "type": "boolean",
            "title": "Status Board 14",
            "description": "ARCBEST"
          },
          "status_board_15": {
            "type": "boolean",
            "title": "Status Board 15",
            "description": "DAT RATE CAST"
          },
          "status_board_16": {
            "type": "boolean",
            "title": "Status Board 16",
            "description": "ARCHER"
          },
          "status_board_17": {
            "type": "boolean",
            "title": "Status Board 17",
            "description": "DIRECT TRANS"
          },
          "multi_stops_api": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultiStopsAPIEnum"
              }
            ],
            "default": "GOOGLE_MAPS"
          },
          "greenscreens_endpoint_switch": {
            "$ref": "#/components/schemas/GreenscreensSwitchValues"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "status_board_1",
          "status_board_2",
          "status_board_3",
          "status_board_4",
          "status_board_7",
          "status_board_8",
          "status_board_10",
          "status_board_11",
          "status_board_12",
          "status_board_13",
          "status_board_14",
          "status_board_15",
          "status_board_16",
          "status_board_17"
        ],
        "title": "GlobalParametersV8",
        "description": "quoting_versions: 8"
      },
      "GlobalParametersV9": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "multi_stops_api": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultiStopsAPIEnum"
              }
            ],
            "default": "GOOGLE_MAPS"
          },
          "greenscreens_endpoint_switch": {
            "$ref": "#/components/schemas/GreenscreensSwitchValues"
          },
          "truckstop_rate_type_values": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TruckstopRateTypeValues"
              }
            ],
            "default": "RATE_MATE"
          },
          "status_board_1": {
            "type": "boolean",
            "title": "Status Board 1",
            "description": "DAT",
            "default": false
          },
          "status_board_2": {
            "type": "boolean",
            "title": "Status Board 2",
            "description": "TRUCKSTOP",
            "default": false
          },
          "status_board_3": {
            "type": "boolean",
            "title": "Status Board 3",
            "description": "GREENSCREENS",
            "default": false
          },
          "status_board_4": {
            "type": "boolean",
            "title": "Status Board 4",
            "description": "C4",
            "default": false
          },
          "status_board_5": {
            "type": "boolean",
            "title": "Status Board 5",
            "description": "TESTRATEENGINE",
            "default": false
          },
          "status_board_7": {
            "type": "boolean",
            "title": "Status Board 7",
            "description": "REVENOVA",
            "default": false
          },
          "status_board_8": {
            "type": "boolean",
            "title": "Status Board 8",
            "description": "LOADDEX",
            "default": false
          },
          "status_board_10": {
            "type": "boolean",
            "title": "Status Board 10",
            "description": "FREIGHTWAVES",
            "default": false
          },
          "status_board_11": {
            "type": "boolean",
            "title": "Status Board 11",
            "description": "123LOADBOARD",
            "default": false
          },
          "status_board_12": {
            "type": "boolean",
            "title": "Status Board 12",
            "description": "MCLEOD",
            "default": false
          },
          "status_board_13": {
            "type": "boolean",
            "title": "Status Board 13",
            "description": "PARADE",
            "default": false
          },
          "status_board_14": {
            "type": "boolean",
            "title": "Status Board 14",
            "description": "ARCBEST",
            "default": false
          },
          "status_board_15": {
            "type": "boolean",
            "title": "Status Board 15",
            "description": "DAT RATE CAST",
            "default": false
          },
          "status_board_16": {
            "type": "boolean",
            "title": "Status Board 16",
            "description": "ARCHER",
            "default": false
          },
          "status_board_17": {
            "type": "boolean",
            "title": "Status Board 17",
            "description": "DIRECT TRANS",
            "default": false
          },
          "status_board_18": {
            "type": "boolean",
            "title": "Status Board 18",
            "description": "FIXED PRICE",
            "default": false
          },
          "status_board_19": {
            "type": "boolean",
            "title": "Status Board 19",
            "description": "TRINITY",
            "default": false
          },
          "status_board_20": {
            "type": "boolean",
            "title": "Status Board 20",
            "description": "DIRECT CONNECT LOGISTIX",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "GlobalParametersV9"
      },
      "GreenscreensConfidenceScoreV8": {
        "properties": {
          "confidence_scores": {
            "items": {
              "$ref": "#/components/schemas/GreenscreensConfidenceScoreValueV8"
            },
            "type": "array",
            "title": "Confidence Scores"
          }
        },
        "type": "object",
        "required": [
          "confidence_scores"
        ],
        "title": "GreenscreensConfidenceScoreV8"
      },
      "GreenscreensConfidenceScoreValueV8": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "action",
          "from_",
          "to"
        ],
        "title": "GreenscreensConfidenceScoreValueV8",
        "description": "Generic object that represent an option with an optional charge"
      },
      "GreenscreensSwitchValues": {
        "type": "string",
        "enum": [
          "NETWORK_RATE",
          "PREDICTION_RATE"
        ],
        "title": "GreenscreensSwitchValues",
        "description": "An enumeration."
      },
      "HTTPCustomValidationError": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "title": "Transaction ID"
          },
          "detail": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ValidationError"
                },
                "type": "array"
              },
              {
                "type": "string"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPCustomValidationError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HideReportInput": {
        "properties": {
          "transaction_id_list": {
            "items": {
              "type": "string",
              "maxLength": 53,
              "minLength": 53
            },
            "type": "array",
            "maxLength": 53,
            "minLength": 53,
            "minItems": 1,
            "title": "Transaction Id List"
          },
          "quoting": {
            "type": "boolean",
            "title": "Quoting",
            "description": "Search in quoting reports",
            "default": false
          },
          "exception": {
            "type": "boolean",
            "title": "Exception",
            "description": "Search in exceptions reports",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "transaction_id_list"
        ],
        "title": "HideReportInput"
      },
      "HideReportOutput": {
        "properties": {
          "quoting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HideReportResultsSet"
              }
            ],
            "title": "Quoting",
            "description": "results set of quoting reports hidden",
            "default": {
              "modified": 0,
              "records": {}
            }
          },
          "exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HideReportResultsSet"
              }
            ],
            "title": "Exception",
            "description": "results set of quoting reports hidden",
            "default": {
              "modified": 0,
              "records": {}
            }
          }
        },
        "type": "object",
        "title": "HideReportOutput"
      },
      "HideReportResultsSet": {
        "properties": {
          "modified": {
            "type": "integer",
            "title": "Modified",
            "default": 0
          },
          "records": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Records",
            "default": {}
          }
        },
        "type": "object",
        "title": "HideReportResultsSet"
      },
      "Holiday": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "holidays": {
            "items": {
              "type": "string",
              "format": "date"
            },
            "type": "array",
            "title": "Holidays",
            "description": "ISO 8601 format",
            "example": "[\"2008-09-15\"]"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "holidays"
        ],
        "title": "Holiday",
        "description": "Generic object that represent an option with a charge"
      },
      "HolidayV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "holidays": {
            "items": {
              "type": "string",
              "format": "date"
            },
            "type": "array",
            "title": "Holidays",
            "description": "ISO 8601 format",
            "example": "[\"2008-09-15\"]"
          }
        },
        "type": "object",
        "required": [
          "action",
          "holidays"
        ],
        "title": "HolidayV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "IDsList": {
        "properties": {
          "quote_id": {
            "type": "integer",
            "title": "Quote Id"
          },
          "quote_number": {
            "type": "string",
            "title": "Quote Number"
          },
          "reference_id": {
            "type": "string",
            "title": "Reference Id"
          },
          "quote_date": {
            "type": "string",
            "format": "date-time",
            "title": "Quote Date"
          }
        },
        "type": "object",
        "required": [
          "quote_id",
          "quote_number"
        ],
        "title": "IDsList"
      },
      "ISO31661Alfa3": {
        "type": "string",
        "enum": [
          "ABW",
          "AFG",
          "AGO",
          "AIA",
          "ALA",
          "ALB",
          "AND",
          "ARE",
          "ARG",
          "ARM",
          "ASM",
          "ATA",
          "ATF",
          "ATG",
          "AUS",
          "AUT",
          "AZE",
          "BDI",
          "BEL",
          "BEN",
          "BES",
          "BFA",
          "BGD",
          "BGR",
          "BHR",
          "BHS",
          "BIH",
          "BLM",
          "BLR",
          "BLZ",
          "BMU",
          "BOL",
          "BRA",
          "BRB",
          "BRN",
          "BTN",
          "BVT",
          "BWA",
          "CAF",
          "CAN",
          "CCK",
          "CHE",
          "CHL",
          "CHN",
          "CIV",
          "CMR",
          "COD",
          "COG",
          "COK",
          "COL",
          "COM",
          "CPV",
          "CRI",
          "CUB",
          "CUW",
          "CXR",
          "CYM",
          "CYP",
          "CZE",
          "DEU",
          "DJI",
          "DMA",
          "DNK",
          "DOM",
          "DZA",
          "ECU",
          "EGY",
          "ERI",
          "ESH",
          "ESP",
          "EST",
          "ETH",
          "FIN",
          "FJI",
          "FLK",
          "FRA",
          "FRO",
          "FSM",
          "GAB",
          "GBR",
          "GEO",
          "GGY",
          "GHA",
          "GIB",
          "GIN",
          "GLP",
          "GMB",
          "GNB",
          "GNQ",
          "GRC",
          "GRD",
          "GRL",
          "GTM",
          "GUF",
          "GUM",
          "GUY",
          "HKG",
          "HMD",
          "HND",
          "HRV",
          "HTI",
          "HUN",
          "IDN",
          "IMN",
          "IND",
          "IOT",
          "IRL",
          "IRN",
          "IRQ",
          "ISL",
          "ISR",
          "ITA",
          "JAM",
          "JEY",
          "JOR",
          "JPN",
          "KAZ",
          "KEN",
          "KGZ",
          "KHM",
          "KIR",
          "KNA",
          "KOR",
          "KWT",
          "LAO",
          "LBN",
          "LBR",
          "LBY",
          "LCA",
          "LIE",
          "LKA",
          "LSO",
          "LTU",
          "LUX",
          "LVA",
          "MAC",
          "MAF",
          "MAR",
          "MCO",
          "MDA",
          "MDG",
          "MDV",
          "MEX",
          "MHL",
          "MKD",
          "MLI",
          "MLT",
          "MMR",
          "MNE",
          "MNG",
          "MNP",
          "MOZ",
          "MRT",
          "MSR",
          "MTQ",
          "MUS",
          "MWI",
          "MYS",
          "MYT",
          "NAM",
          "NCL",
          "NER",
          "NFK",
          "NGA",
          "NIC",
          "NIU",
          "NLD",
          "NOR",
          "NPL",
          "NRU",
          "NZL",
          "OMN",
          "PAK",
          "PAN",
          "PCN",
          "PER",
          "PHL",
          "PLW",
          "PNG",
          "POL",
          "PRI",
          "PRK",
          "PRT",
          "PRY",
          "PSE",
          "PYF",
          "QAT",
          "REU",
          "ROU",
          "RUS",
          "RWA",
          "SAU",
          "SDN",
          "SEN",
          "SGP",
          "SGS",
          "SHN",
          "SJM",
          "SLB",
          "SLE",
          "SLV",
          "SMR",
          "SOM",
          "SPM",
          "SRB",
          "SSD",
          "STP",
          "SUR",
          "SVK",
          "SVN",
          "SWE",
          "SWZ",
          "SXM",
          "SYC",
          "SYR",
          "TCA",
          "TCD",
          "TGO",
          "THA",
          "TJK",
          "TKL",
          "TKM",
          "TLS",
          "TON",
          "TTO",
          "TUN",
          "TUR",
          "TUV",
          "TWN",
          "TZA",
          "UGA",
          "UKR",
          "UMI",
          "URY",
          "USA",
          "UZB",
          "VAT",
          "VCT",
          "VEN",
          "VGB",
          "VIR",
          "VNM",
          "VUT",
          "WLF",
          "WSM",
          "YEM",
          "ZAF",
          "ZMB",
          "ZWE"
        ],
        "title": "ISO31661Alfa3",
        "description": "Format ISO 3166-1 Alfa 3\nCode list: https://datahub.io/core/country-codes"
      },
      "InternationalShipmentV7": {
        "properties": {
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/InternationalShipmentValueV7"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "required": [
          "lanes"
        ],
        "title": "InternationalShipmentV7"
      },
      "InternationalShipmentValueV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "from_": {
            "$ref": "#/components/schemas/ISO31661Alfa3"
          },
          "to": {
            "$ref": "#/components/schemas/ISO31661Alfa3"
          }
        },
        "type": "object",
        "required": [
          "action",
          "from_",
          "to"
        ],
        "title": "InternationalShipmentValueV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "InvoiceRequest": {
        "properties": {
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "title": "Url"
          },
          "invoice_api_response": {
            "type": "string",
            "minLength": 1,
            "title": "Invoice Api Response"
          },
          "date_hour": {
            "type": "string",
            "format": "date-time",
            "title": "Date Hour",
            "description": "ISO 8601 format"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "title": "Created Date",
            "description": "ISO 8601 format"
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "title": "Subject"
          },
          "origin_email": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Email",
            "description": "Original sender in case of forwarded email"
          },
          "sender_email": {
            "type": "string",
            "minLength": 1,
            "title": "Sender Email",
            "description": "Always is the sender of email"
          },
          "process_message": {
            "type": "string",
            "minLength": 1,
            "title": "Process Message"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "oid": {
            "type": "integer",
            "title": "Oid"
          }
        },
        "type": "object",
        "required": [
          "customer_oid",
          "status",
          "oid"
        ],
        "title": "InvoiceRequest"
      },
      "InvoiceRequestFile": {
        "properties": {
          "page_number": {
            "type": "integer",
            "title": "Page Number"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "title": "Url"
          },
          "invoice_request_oid": {
            "type": "integer",
            "title": "Invoice Request Oid"
          },
          "type": {
            "type": "string",
            "minLength": 1,
            "title": "Type"
          },
          "oid": {
            "type": "integer",
            "title": "Oid"
          }
        },
        "type": "object",
        "required": [
          "oid"
        ],
        "title": "InvoiceRequestFile"
      },
      "Item": {
        "type": "string",
        "enum": [
          "HAZMAT"
        ],
        "title": "Item",
        "description": "An enumeration."
      },
      "ItemV7": {
        "type": "string",
        "enum": [
          "HAZMAT",
          "TANKER_ENDORSEMENT",
          "APPOINTMENT_REQUIRED",
          "PALLET_EXCHANGE",
          "MODE",
          "SPECIAL_HANDLING",
          "INSURANCE",
          "OVER_DIMENSIONED",
          "TARPS",
          "RAMPS",
          "LOAD",
          "UNLOAD",
          "DROP_TRAILER"
        ],
        "title": "ItemV7",
        "description": "An enumeration."
      },
      "ItemV8": {
        "type": "string",
        "enum": [
          "HAZMAT",
          "TANKER_ENDORSEMENT",
          "APPOINTMENT_REQUIRED",
          "PALLET_EXCHANGE",
          "SPECIAL_HANDLING",
          "INSURANCE",
          "OVER_DIMENSIONED",
          "TARPS",
          "RAMPS",
          "LOAD",
          "UNLOAD",
          "DROP_TRAILER",
          "OTHER"
        ],
        "title": "ItemV8",
        "description": "An enumeration."
      },
      "LaneByStateV7": {
        "properties": {
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/LaneByStateValueV7"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "required": [
          "lanes"
        ],
        "title": "LaneByStateV7"
      },
      "LaneByStateValueV7": {
        "properties": {
          "from_": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "From "
          },
          "to": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to"
        ],
        "title": "LaneByStateValueV7"
      },
      "LaneScoresV7": {
        "properties": {
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/LaneScoresValueV7"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "required": [
          "lanes"
        ],
        "title": "LaneScoresV7"
      },
      "LaneScoresValueV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to",
          "action"
        ],
        "title": "LaneScoresValueV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "LaneV5": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "origin",
          "destination",
          "action"
        ],
        "title": "LaneV5",
        "description": "Generic object that represent an option with a charge"
      },
      "LeadTime": {
        "properties": {
          "lead_times": {
            "items": {
              "$ref": "#/components/schemas/LeadTimeValue"
            },
            "type": "array",
            "title": "Lead Times"
          }
        },
        "type": "object",
        "required": [
          "lead_times"
        ],
        "title": "LeadTime"
      },
      "LeadTimeV6": {
        "properties": {
          "lead_times": {
            "items": {
              "$ref": "#/components/schemas/LeadTimeValueV6"
            },
            "type": "array",
            "title": "Lead Times"
          }
        },
        "type": "object",
        "required": [
          "lead_times"
        ],
        "title": "LeadTimeV6"
      },
      "LeadTimeV9": {
        "properties": {
          "times": {
            "items": {
              "$ref": "#/components/schemas/LeadTimeValueV9"
            },
            "type": "array",
            "title": "Times"
          }
        },
        "type": "object",
        "required": [
          "times"
        ],
        "title": "LeadTimeV9"
      },
      "LeadTimeV9UnitEnum": {
        "type": "string",
        "enum": [
          "SAME_DAY",
          "HOURS",
          "DAYS"
        ],
        "title": "LeadTimeV9UnitEnum",
        "description": "An enumeration."
      },
      "LeadTimeValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "from_"
        ],
        "title": "LeadTimeValue",
        "description": "Generic object that represent an option with a charge"
      },
      "LeadTimeValueV6": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "action"
        ],
        "title": "LeadTimeValueV6",
        "description": "Generic object that represent an option with an optional charge"
      },
      "LeadTimeValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "time": {
            "type": "integer",
            "title": "Time"
          },
          "unit": {
            "$ref": "#/components/schemas/LeadTimeV9UnitEnum"
          }
        },
        "type": "object",
        "required": [
          "action",
          "time",
          "unit"
        ],
        "title": "LeadTimeValueV9",
        "description": "Generic object that represent an option with an optional charge"
      },
      "LoadBoardRateItem": {
        "properties": {
          "rate": {
            "type": "number",
            "title": "Rate"
          },
          "rateloadboard": {
            "$ref": "#/components/schemas/LoadBoardRateNameEnum"
          },
          "response_id": {
            "type": "integer",
            "title": "Response Id"
          }
        },
        "type": "object",
        "title": "LoadBoardRateItem"
      },
      "LoadBoardRateList": {
        "properties": {
          "rates": {
            "items": {
              "$ref": "#/components/schemas/LoadBoardRateItem"
            },
            "type": "array",
            "title": "Rates"
          }
        },
        "type": "object",
        "title": "LoadBoardRateList"
      },
      "LoadBoardRateNameEnum": {
        "type": "string",
        "enum": [
          "01_DAT",
          "02_TRUCKSTOP",
          "03_GREENSCREENS",
          "04_CARGOCHIEF",
          "05_MARKETINSIGHT",
          "06_SLLR",
          "07_REVENOVA",
          "08_LOADDEX",
          "09_AS/400",
          "10_FREIGHTWAVES",
          "11_123LOADBOARD",
          "12_MCLEOD",
          "13_PARADE",
          "14_ARCBEST",
          "15_DATRATECAST",
          "16_ARCHER",
          "17_DIRECTTRANS",
          "18_FIXEDPRICE",
          "19_TRINITY",
          "20_DCL"
        ],
        "title": "LoadBoardRateNameEnum",
        "description": "An enumeration."
      },
      "LoadModeName": {
        "properties": {
          "van": {
            "type": "string",
            "title": "Van"
          },
          "reefer": {
            "type": "string",
            "title": "Reefer"
          },
          "flatbed": {
            "type": "string",
            "title": "Flatbed"
          },
          "specialized": {
            "type": "string",
            "title": "Specialized"
          }
        },
        "type": "object",
        "title": "LoadModeName"
      },
      "LoaddexData": {
        "properties": {
          "shipper_code": {
            "type": "string",
            "title": "Shipper Code"
          },
          "load_mode_name": {
            "$ref": "#/components/schemas/LoadModeName"
          }
        },
        "type": "object",
        "required": [
          "shipper_code",
          "load_mode_name"
        ],
        "title": "LoaddexData"
      },
      "MarginControl": {
        "properties": {
          "minimum": {
            "$ref": "#/components/schemas/MarginControlValue"
          },
          "maximum": {
            "$ref": "#/components/schemas/MarginControlValue"
          }
        },
        "type": "object",
        "title": "MarginControl"
      },
      "MarginControlValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "action"
        ],
        "title": "MarginControlValue",
        "description": "Generic object that represent an option with a charge"
      },
      "Method": {
        "type": "string",
        "enum": [
          "HIGHEST_RATE",
          "AVERAGE_RATE",
          "LOWEST_RATE"
        ],
        "title": "Method",
        "description": "An enumeration."
      },
      "MileageCapV6": {
        "properties": {
          "mileages": {
            "items": {
              "$ref": "#/components/schemas/MileageValueV6"
            },
            "type": "array",
            "title": "Mileages"
          }
        },
        "type": "object",
        "required": [
          "mileages"
        ],
        "title": "MileageCapV6"
      },
      "MileageThresholdBiggerV8": {
        "properties": {
          "mileage": {
            "type": "integer",
            "title": "Mileage"
          }
        },
        "type": "object",
        "required": [
          "mileage"
        ],
        "title": "MileageThresholdBiggerV8"
      },
      "MileageThresholdV6": {
        "properties": {
          "mileage": {
            "type": "integer",
            "title": "Mileage"
          }
        },
        "type": "object",
        "required": [
          "mileage"
        ],
        "title": "MileageThresholdV6"
      },
      "MileageValueV6": {
        "properties": {
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          },
          "rate_cap": {
            "$ref": "#/components/schemas/AdditionalValue"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "rate_cap"
        ],
        "title": "MileageValueV6"
      },
      "MultiStopsAPIEnum": {
        "type": "string",
        "enum": [
          "GOOGLE_MAPS",
          "TRIMBLE_MAPS"
        ],
        "title": "MultiStopsAPIEnum",
        "description": "An enumeration."
      },
      "Navisphere": {
        "properties": {
          "api_connection": {
            "$ref": "#/components/schemas/ApiConnection"
          }
        },
        "type": "object",
        "required": [
          "api_connection"
        ],
        "title": "Navisphere"
      },
      "OptionalActionOption": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "OptionalActionOption",
        "description": "Generic object that represent an option with an optional charge"
      },
      "OrderEntry": {
        "properties": {
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "title": "Status"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "title": "Url"
          },
          "idata_response": {
            "type": "string",
            "minLength": 1,
            "title": "Idata Response"
          },
          "customer_domain": {
            "type": "string",
            "minLength": 1,
            "title": "Customer Domain"
          },
          "date_hour": {
            "type": "string",
            "format": "date-time",
            "title": "Date Hour",
            "description": "ISO 8601 format"
          },
          "received_date": {
            "type": "string",
            "format": "date-time",
            "title": "Received Date",
            "description": "ISO 8601 format"
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "title": "Subject"
          },
          "url_tabi": {
            "type": "string",
            "minLength": 1,
            "title": "Url Tabi"
          },
          "from_email": {
            "type": "string",
            "minLength": 1,
            "title": "From Email"
          },
          "attempt": {
            "type": "integer",
            "title": "Attempt"
          },
          "oid": {
            "type": "integer",
            "title": "Oid"
          }
        },
        "type": "object",
        "required": [
          "customer_oid",
          "oid"
        ],
        "title": "OrderEntry"
      },
      "Origin": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "origin"
        ],
        "title": "Origin",
        "description": "Generic object that represent an option with a charge"
      },
      "OriginDeliveryRate": {
        "properties": {
          "origin": {
            "type": "number",
            "title": "Origin",
            "default": 0
          },
          "delivery": {
            "type": "number",
            "title": "Delivery",
            "default": 0
          }
        },
        "type": "object",
        "title": "OriginDeliveryRate"
      },
      "Parameters": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "creationdate": {
            "type": "string",
            "format": "date-time",
            "title": "Creationdate",
            "description": "ISO 8601 format"
          },
          "afterhours": {
            "$ref": "#/components/schemas/AfterHours"
          },
          "accessorials": {
            "$ref": "#/components/schemas/Accessorials"
          },
          "conditioned_lanes": {
            "$ref": "#/components/schemas/ConditionedLanes"
          },
          "conditioned_locations": {
            "$ref": "#/components/schemas/ConditionedLocations"
          },
          "delivery_time": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "diesel_fuel_index": {
            "$ref": "#/components/schemas/DieselFuelIndex"
          },
          "distance_tiers": {
            "$ref": "#/components/schemas/DistanceTiers"
          },
          "fixed_lanes": {
            "$ref": "#/components/schemas/FixedLanes"
          },
          "holiday": {
            "$ref": "#/components/schemas/Holiday"
          },
          "lead_time": {
            "$ref": "#/components/schemas/LeadTime"
          },
          "margin_control": {
            "$ref": "#/components/schemas/MarginControl"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "price_per_mile": {
            "$ref": "#/components/schemas/PricePerMile"
          },
          "quotes_amount_threshold": {
            "$ref": "#/components/schemas/QuotesAmountThreshold"
          },
          "rate_engines_index": {
            "$ref": "#/components/schemas/RateEnginesIndex"
          },
          "rate_engines_weight": {
            "$ref": "#/components/schemas/RateEnginesWeight"
          },
          "re_bid_minimum": {
            "$ref": "#/components/schemas/ReBidMinimum"
          },
          "restricted_lanes": {
            "$ref": "#/components/schemas/RestrictedLanes"
          },
          "same_day_cutoff": {
            "$ref": "#/components/schemas/SameDayCutoff"
          },
          "seasonality": {
            "$ref": "#/components/schemas/Seasonality"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/TrailerType"
          },
          "transit_time_variance": {
            "$ref": "#/components/schemas/TransitTimeVariance"
          },
          "undercut_amount": {
            "$ref": "#/components/schemas/UndercutAmountV3"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "weekend": {
            "$ref": "#/components/schemas/Weekend"
          },
          "weight_tiers": {
            "$ref": "#/components/schemas/WeightTiers"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "conditioned_lanes",
          "conditioned_locations",
          "margin_control",
          "price_per_mile",
          "rate_engines_index",
          "restricted_lanes",
          "trailer_type",
          "version"
        ],
        "title": "Parameters",
        "description": "quoting_versions: 2, 3"
      },
      "ParametersV4": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "creationdate": {
            "type": "string",
            "format": "date-time",
            "title": "Creationdate",
            "description": "ISO 8601 format"
          },
          "afterhours": {
            "$ref": "#/components/schemas/AfterHours"
          },
          "accessorials": {
            "$ref": "#/components/schemas/Accessorials"
          },
          "conditioned_lanes": {
            "$ref": "#/components/schemas/ConditionedLanes"
          },
          "conditioned_locations": {
            "$ref": "#/components/schemas/ConditionedLocations"
          },
          "delivery_time": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "diesel_fuel_index": {
            "$ref": "#/components/schemas/DieselFuelIndex"
          },
          "distance_tiers": {
            "$ref": "#/components/schemas/DistanceTiers"
          },
          "fixed_lanes": {
            "$ref": "#/components/schemas/FixedLanes"
          },
          "holiday": {
            "$ref": "#/components/schemas/Holiday"
          },
          "lead_time": {
            "$ref": "#/components/schemas/LeadTime"
          },
          "margin_control": {
            "$ref": "#/components/schemas/MarginControl"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "price_per_mile": {
            "$ref": "#/components/schemas/PricePerMile"
          },
          "quotes_amount_threshold": {
            "$ref": "#/components/schemas/QuotesAmountThreshold"
          },
          "rate_engines_index": {
            "$ref": "#/components/schemas/RateEnginesIndex"
          },
          "rate_engines_weight": {
            "$ref": "#/components/schemas/RateEnginesWeight"
          },
          "re_bid_minimum": {
            "$ref": "#/components/schemas/ReBidMinimum"
          },
          "restricted_lanes": {
            "$ref": "#/components/schemas/RestrictedLanesV4"
          },
          "same_day_cutoff": {
            "$ref": "#/components/schemas/SameDayCutoff"
          },
          "seasonality": {
            "$ref": "#/components/schemas/Seasonality"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/TrailerType"
          },
          "transit_time_variance": {
            "$ref": "#/components/schemas/TransitTimeVariance"
          },
          "undercut_amount": {
            "$ref": "#/components/schemas/UndercutAmountV3"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "weekend": {
            "$ref": "#/components/schemas/Weekend"
          },
          "weight_tiers": {
            "$ref": "#/components/schemas/WeightTiers"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "conditioned_lanes",
          "conditioned_locations",
          "margin_control",
          "price_per_mile",
          "rate_engines_index",
          "restricted_lanes",
          "trailer_type",
          "version"
        ],
        "title": "ParametersV4",
        "description": "quoting_versions: 4"
      },
      "ParametersV5": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "creationdate": {
            "type": "string",
            "format": "date-time",
            "title": "Creationdate",
            "description": "ISO 8601 format"
          },
          "afterhours": {
            "$ref": "#/components/schemas/AfterHours"
          },
          "accessorials": {
            "$ref": "#/components/schemas/Accessorials"
          },
          "conditioned_lanes": {
            "$ref": "#/components/schemas/ConditionedLanesV5"
          },
          "conditioned_locations": {
            "$ref": "#/components/schemas/ConditionedLocations"
          },
          "delivery_time": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "diesel_fuel_index": {
            "$ref": "#/components/schemas/DieselFuelIndex"
          },
          "distance_tiers": {
            "$ref": "#/components/schemas/DistanceTiers"
          },
          "fixed_lanes": {
            "$ref": "#/components/schemas/FixedLanesV5"
          },
          "holiday": {
            "$ref": "#/components/schemas/Holiday"
          },
          "lead_time": {
            "$ref": "#/components/schemas/LeadTime"
          },
          "margin_control": {
            "$ref": "#/components/schemas/MarginControl"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "price_per_mile": {
            "$ref": "#/components/schemas/PricePerMile"
          },
          "quotes_amount_threshold": {
            "$ref": "#/components/schemas/QuotesAmountThreshold"
          },
          "rate_engines_index": {
            "$ref": "#/components/schemas/RateEnginesIndex"
          },
          "rate_engines_weight": {
            "$ref": "#/components/schemas/RateEnginesWeight"
          },
          "re_bid_minimum": {
            "$ref": "#/components/schemas/ReBidMinimum"
          },
          "restricted_lanes": {
            "$ref": "#/components/schemas/RestrictedLanesV4"
          },
          "same_day_cutoff": {
            "$ref": "#/components/schemas/SameDayCutoff"
          },
          "seasonality": {
            "$ref": "#/components/schemas/Seasonality"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/TrailerType"
          },
          "transit_time_variance": {
            "$ref": "#/components/schemas/TransitTimeVariance"
          },
          "undercut_amount": {
            "$ref": "#/components/schemas/UndercutAmountV3"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "weekend": {
            "$ref": "#/components/schemas/Weekend"
          },
          "weight_tiers": {
            "$ref": "#/components/schemas/WeightTiers"
          },
          "additional_stops": {
            "$ref": "#/components/schemas/AdditionalStops"
          },
          "bill_amount_margin": {
            "$ref": "#/components/schemas/BillAmountMarginV5"
          },
          "truck_to_load_ratio": {
            "$ref": "#/components/schemas/TruckToLoadRatioV5"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "conditioned_lanes",
          "conditioned_locations",
          "margin_control",
          "price_per_mile",
          "rate_engines_index",
          "restricted_lanes",
          "trailer_type",
          "version",
          "truck_to_load_ratio"
        ],
        "title": "ParametersV5",
        "description": "quoting_versions: 5"
      },
      "ParametersV6": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "creationdate": {
            "type": "string",
            "format": "date-time",
            "title": "Creationdate",
            "description": "ISO 8601 format"
          },
          "afterhours": {
            "$ref": "#/components/schemas/AfterHours"
          },
          "accessorials": {
            "$ref": "#/components/schemas/Accessorials"
          },
          "conditioned_lanes": {
            "$ref": "#/components/schemas/ConditionedLanesV5"
          },
          "conditioned_locations": {
            "$ref": "#/components/schemas/ConditionedLocations"
          },
          "delivery_time": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "diesel_fuel_index": {
            "$ref": "#/components/schemas/DieselFuelIndex"
          },
          "distance_tiers": {
            "$ref": "#/components/schemas/DistanceTiers"
          },
          "fixed_lanes": {
            "$ref": "#/components/schemas/FixedLanesV5"
          },
          "holiday": {
            "$ref": "#/components/schemas/Holiday"
          },
          "lead_time": {
            "$ref": "#/components/schemas/LeadTimeV6"
          },
          "margin_control": {
            "$ref": "#/components/schemas/MarginControl"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "price_per_mile": {
            "$ref": "#/components/schemas/PricePerMile"
          },
          "quotes_amount_threshold": {
            "$ref": "#/components/schemas/QuotesAmountThreshold"
          },
          "rate_engines_index": {
            "$ref": "#/components/schemas/RateEnginesIndexV6"
          },
          "rate_engines_weight": {
            "$ref": "#/components/schemas/RateEnginesWeight"
          },
          "re_bid_minimum": {
            "$ref": "#/components/schemas/ReBidMinimum"
          },
          "restricted_lanes": {
            "$ref": "#/components/schemas/RestrictedLanesV4"
          },
          "same_day_cutoff": {
            "$ref": "#/components/schemas/SameDayCutoff"
          },
          "seasonality": {
            "$ref": "#/components/schemas/Seasonality"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/TrailerType"
          },
          "transit_time_variance": {
            "$ref": "#/components/schemas/TransitTimeVariance"
          },
          "undercut_amount": {
            "$ref": "#/components/schemas/UndercutAmountV3"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "weekend": {
            "$ref": "#/components/schemas/WeekendV6"
          },
          "weight_tiers": {
            "$ref": "#/components/schemas/WeightTiers"
          },
          "additional_stops": {
            "$ref": "#/components/schemas/AdditionalStopsV6"
          },
          "bill_amount_margin": {
            "$ref": "#/components/schemas/BillAmountMarginV5"
          },
          "truck_to_load_ratio": {
            "$ref": "#/components/schemas/TruckToLoadRatioV5"
          },
          "cross_border": {
            "$ref": "#/components/schemas/CrossBorderV6"
          },
          "extra_charges_and_restrictions": {
            "$ref": "#/components/schemas/ExtraChargesAndRestrictionsV6"
          },
          "mileage_cap": {
            "$ref": "#/components/schemas/MileageCapV6"
          },
          "mileage_threshold": {
            "$ref": "#/components/schemas/MileageThresholdV6"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "conditioned_lanes",
          "conditioned_locations",
          "margin_control",
          "price_per_mile",
          "rate_engines_index",
          "restricted_lanes",
          "trailer_type",
          "version",
          "truck_to_load_ratio"
        ],
        "title": "ParametersV6",
        "description": "quoting_versions: 6"
      },
      "ParametersV7": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "creationdate": {
            "type": "string",
            "format": "date-time",
            "title": "Creationdate",
            "description": "ISO 8601 format"
          },
          "afterhours": {
            "$ref": "#/components/schemas/AfterHoursV7"
          },
          "accessorials": {
            "$ref": "#/components/schemas/Accessorials"
          },
          "conditioned_lanes": {
            "$ref": "#/components/schemas/ConditionedLanesV5"
          },
          "conditioned_locations": {
            "$ref": "#/components/schemas/ConditionedLocations"
          },
          "delivery_time": {
            "$ref": "#/components/schemas/DeliveryTimeV7"
          },
          "diesel_fuel_index": {
            "$ref": "#/components/schemas/DieselFuelIndex"
          },
          "distance_tiers": {
            "$ref": "#/components/schemas/DistanceTiers"
          },
          "fixed_lanes": {
            "$ref": "#/components/schemas/FixedLanesV5"
          },
          "holiday": {
            "$ref": "#/components/schemas/HolidayV7"
          },
          "lead_time": {
            "$ref": "#/components/schemas/LeadTimeV6"
          },
          "margin_control": {
            "$ref": "#/components/schemas/MarginControl"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "price_per_mile": {
            "$ref": "#/components/schemas/PricePerMile"
          },
          "quotes_amount_threshold": {
            "$ref": "#/components/schemas/QuotesAmountThresholdV7"
          },
          "rate_engines_index": {
            "$ref": "#/components/schemas/RateEnginesIndexV6"
          },
          "rate_engines_weight": {
            "$ref": "#/components/schemas/RateEnginesWeight"
          },
          "re_bid_minimum": {
            "$ref": "#/components/schemas/ReBidMinimumV7"
          },
          "restricted_lanes": {
            "$ref": "#/components/schemas/RestrictedLanesV4"
          },
          "same_day_cutoff": {
            "$ref": "#/components/schemas/SameDayCutoffV7"
          },
          "seasonality": {
            "$ref": "#/components/schemas/Seasonality"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/TrailerType"
          },
          "transit_time_variance": {
            "$ref": "#/components/schemas/TransitTimeVariance"
          },
          "undercut_amount": {
            "$ref": "#/components/schemas/UndercutAmountV3"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "weekend": {
            "$ref": "#/components/schemas/WeekendV6"
          },
          "weight_tiers": {
            "$ref": "#/components/schemas/WeightTiers"
          },
          "additional_stops": {
            "$ref": "#/components/schemas/AdditionalStopsV6"
          },
          "bill_amount_margin": {
            "$ref": "#/components/schemas/BillAmountMarginV5"
          },
          "truck_to_load_ratio": {
            "$ref": "#/components/schemas/TruckToLoadRatioV5"
          },
          "cross_border": {
            "$ref": "#/components/schemas/CrossBorderV6"
          },
          "extra_charges_and_restrictions": {
            "$ref": "#/components/schemas/ExtraChargesAndRestrictionsV7"
          },
          "mileage_cap": {
            "$ref": "#/components/schemas/MileageCapV6"
          },
          "mileage_threshold": {
            "$ref": "#/components/schemas/MileageThresholdV6"
          },
          "bid_post": {
            "$ref": "#/components/schemas/BidPostV7"
          },
          "international_shipment": {
            "$ref": "#/components/schemas/InternationalShipmentV7"
          },
          "lane_by_state": {
            "$ref": "#/components/schemas/LaneByStateV7"
          },
          "lane_scores": {
            "$ref": "#/components/schemas/LaneScoresV7"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "conditioned_lanes",
          "conditioned_locations",
          "margin_control",
          "price_per_mile",
          "rate_engines_index",
          "restricted_lanes",
          "trailer_type",
          "version",
          "truck_to_load_ratio"
        ],
        "title": "ParametersV7",
        "description": "quoting_versions: 7"
      },
      "ParametersV8": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "creationdate": {
            "type": "string",
            "format": "date-time",
            "title": "Creationdate",
            "description": "ISO 8601 format"
          },
          "afterhours": {
            "$ref": "#/components/schemas/AfterHoursV7"
          },
          "accessorials": {
            "$ref": "#/components/schemas/Accessorials"
          },
          "conditioned_lanes": {
            "$ref": "#/components/schemas/ConditionedLanesV5"
          },
          "conditioned_locations": {
            "$ref": "#/components/schemas/ConditionedLocations"
          },
          "delivery_time": {
            "$ref": "#/components/schemas/DeliveryTimeV7"
          },
          "diesel_fuel_index": {
            "$ref": "#/components/schemas/DieselFuelIndex"
          },
          "distance_tiers": {
            "$ref": "#/components/schemas/DistanceTiersV8"
          },
          "fixed_lanes": {
            "$ref": "#/components/schemas/FixedLanesV5"
          },
          "holiday": {
            "$ref": "#/components/schemas/HolidayV7"
          },
          "lead_time": {
            "$ref": "#/components/schemas/LeadTimeV6"
          },
          "margin_control": {
            "$ref": "#/components/schemas/MarginControl"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "price_per_mile": {
            "$ref": "#/components/schemas/PricePerMile"
          },
          "quotes_amount_threshold": {
            "$ref": "#/components/schemas/QuotesAmountThresholdV7"
          },
          "rate_engines_index": {
            "$ref": "#/components/schemas/RateEnginesIndexV8"
          },
          "rate_engines_weight": {
            "$ref": "#/components/schemas/RateEnginesWeight"
          },
          "re_bid_minimum": {
            "$ref": "#/components/schemas/ReBidMinimumV7"
          },
          "restricted_lanes": {
            "$ref": "#/components/schemas/RestrictedLanesV4"
          },
          "same_day_cutoff": {
            "$ref": "#/components/schemas/SameDayCutoffV7"
          },
          "seasonality": {
            "$ref": "#/components/schemas/Seasonality"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/TrailerType"
          },
          "transit_time_variance": {
            "$ref": "#/components/schemas/TransitTimeVariance"
          },
          "undercut_amount": {
            "$ref": "#/components/schemas/UndercutAmountV3"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "weekend": {
            "$ref": "#/components/schemas/WeekendV6"
          },
          "weight_tiers": {
            "$ref": "#/components/schemas/WeightTiersV8"
          },
          "additional_stops": {
            "$ref": "#/components/schemas/AdditionalStopsV6"
          },
          "bill_amount_margin": {
            "$ref": "#/components/schemas/BillAmountMarginV8"
          },
          "truck_to_load_ratio": {
            "$ref": "#/components/schemas/TruckToLoadRatioV5"
          },
          "cross_border": {
            "$ref": "#/components/schemas/CrossBorderV6"
          },
          "extra_charges_and_restrictions": {
            "$ref": "#/components/schemas/ExtraChargesAndRestrictionsV8"
          },
          "mileage_cap": {
            "$ref": "#/components/schemas/MileageCapV6"
          },
          "mileage_threshold": {
            "$ref": "#/components/schemas/MileageThresholdV6"
          },
          "bid_post": {
            "$ref": "#/components/schemas/BidPostV7"
          },
          "international_shipment": {
            "$ref": "#/components/schemas/InternationalShipmentV7"
          },
          "lane_by_state": {
            "$ref": "#/components/schemas/LaneByStateV7"
          },
          "lane_scores": {
            "$ref": "#/components/schemas/LaneScoresV7"
          },
          "delivery_date": {
            "$ref": "#/components/schemas/DeliveryDateV8"
          },
          "conditioned_lanes_by_state": {
            "$ref": "#/components/schemas/ConditionedLanesByStateV8"
          },
          "greenscreens_confidence_score": {
            "$ref": "#/components/schemas/GreenscreensConfidenceScoreV8"
          },
          "mileage_threshold_bigger": {
            "$ref": "#/components/schemas/MileageThresholdBiggerV8"
          },
          "pickup_date": {
            "$ref": "#/components/schemas/PickupDateV8"
          },
          "pickup_time": {
            "$ref": "#/components/schemas/PickupTimeV8"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "conditioned_lanes",
          "conditioned_locations",
          "margin_control",
          "price_per_mile",
          "rate_engines_index",
          "restricted_lanes",
          "trailer_type",
          "version",
          "truck_to_load_ratio"
        ],
        "title": "ParametersV8",
        "description": "quoting_versions: 8"
      },
      "ParametersV9": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "profit_method": {
            "$ref": "#/components/schemas/ProfitMethodV9Enum"
          },
          "creationdate": {
            "type": "string",
            "format": "date-time",
            "title": "Creationdate",
            "description": "ISO 8601 format"
          },
          "accessorials": {
            "$ref": "#/components/schemas/Accessorials"
          },
          "conditioned_locations": {
            "$ref": "#/components/schemas/ConditionedLocations"
          },
          "diesel_fuel_index": {
            "$ref": "#/components/schemas/DieselFuelIndex"
          },
          "margin_control": {
            "$ref": "#/components/schemas/MarginControl"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "price_per_mile": {
            "$ref": "#/components/schemas/PricePerMileV9"
          },
          "rate_engines_weight": {
            "$ref": "#/components/schemas/RateEnginesWeight"
          },
          "seasonality": {
            "$ref": "#/components/schemas/SeasonalityV9"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/TrailerType"
          },
          "transit_time_variance": {
            "$ref": "#/components/schemas/TransitTimeVariance"
          },
          "undercut_amount": {
            "$ref": "#/components/schemas/UndercutAmountV3"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "restricted_lanes": {
            "$ref": "#/components/schemas/RestrictedLanesV4"
          },
          "conditioned_lanes": {
            "$ref": "#/components/schemas/ConditionedLanesV5"
          },
          "fixed_lanes": {
            "$ref": "#/components/schemas/FixedLanesV5"
          },
          "truck_to_load_ratio": {
            "$ref": "#/components/schemas/TruckToLoadRatioV5"
          },
          "additional_stops": {
            "$ref": "#/components/schemas/AdditionalStopsV6"
          },
          "cross_border": {
            "$ref": "#/components/schemas/CrossBorderV6"
          },
          "lead_time": {
            "$ref": "#/components/schemas/LeadTimeV9"
          },
          "mileage_cap": {
            "$ref": "#/components/schemas/MileageCapV6"
          },
          "mileage_threshold": {
            "$ref": "#/components/schemas/MileageThresholdV6"
          },
          "rate_engines_index": {
            "$ref": "#/components/schemas/RateEnginesIndexV8"
          },
          "weekend": {
            "$ref": "#/components/schemas/WeekendV9"
          },
          "afterhours": {
            "$ref": "#/components/schemas/AfterHoursV7"
          },
          "bid_post": {
            "$ref": "#/components/schemas/BidPostV7"
          },
          "delivery_time": {
            "$ref": "#/components/schemas/DeliveryTimeV7"
          },
          "holiday": {
            "$ref": "#/components/schemas/HolidayV7"
          },
          "international_shipment": {
            "$ref": "#/components/schemas/InternationalShipmentV7"
          },
          "lane_by_state": {
            "$ref": "#/components/schemas/LaneByStateV7"
          },
          "lane_scores": {
            "$ref": "#/components/schemas/LaneScoresV7"
          },
          "re_bid_minimum": {
            "$ref": "#/components/schemas/ReBidMinimumV9"
          },
          "quotes_amount_threshold": {
            "$ref": "#/components/schemas/QuotesAmountThresholdV9"
          },
          "quotes_amount_threshold_zip": {
            "$ref": "#/components/schemas/QuotesAmountThresholdZipV9"
          },
          "quotes_amount_threshold_city": {
            "$ref": "#/components/schemas/QuotesAmountThresholdCityV9"
          },
          "quotes_amount_threshold_state": {
            "$ref": "#/components/schemas/QuotesAmountThresholdStateV9"
          },
          "same_day_cutoff": {
            "$ref": "#/components/schemas/SameDayCutoffV7"
          },
          "bill_amount_margin": {
            "$ref": "#/components/schemas/BillAmountMarginV8"
          },
          "distance_tiers": {
            "$ref": "#/components/schemas/DistanceTiersV8"
          },
          "delivery_date": {
            "$ref": "#/components/schemas/DeliveryDateV8"
          },
          "conditioned_lanes_by_state": {
            "$ref": "#/components/schemas/ConditionedLanesByStateV8"
          },
          "extra_charges_and_restrictions": {
            "$ref": "#/components/schemas/ExtraChargesAndRestrictionsV8"
          },
          "greenscreens_confidence_score": {
            "$ref": "#/components/schemas/GreenscreensConfidenceScoreV8"
          },
          "mileage_threshold_bigger": {
            "$ref": "#/components/schemas/MileageThresholdBiggerV8"
          },
          "pickup_date": {
            "$ref": "#/components/schemas/PickupDateV8"
          },
          "pickup_time": {
            "$ref": "#/components/schemas/PickupTimeV8"
          },
          "weight_tiers": {
            "$ref": "#/components/schemas/WeightTiersV8"
          },
          "temperature": {
            "$ref": "#/components/schemas/TemperatureV9"
          },
          "truckstop_rate_insight": {
            "$ref": "#/components/schemas/TruckstopRateInsightsV9"
          },
          "transit_time_delivery": {
            "$ref": "#/components/schemas/TransitTimeDeliveryV9"
          },
          "breakthrough_fuel": {
            "$ref": "#/components/schemas/BreakthroughFuelV9"
          }
        },
        "type": "object",
        "required": [
          "id",
          "version"
        ],
        "title": "ParametersV9",
        "description": "quoting_versions: 9"
      },
      "PickUpOrDelivery": {
        "properties": {
          "city": {
            "type": "string",
            "minLength": 1,
            "title": "City"
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "title": "State"
          },
          "zip_code": {
            "type": "string",
            "minLength": 1,
            "title": "Zip Code"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "time": {
            "type": "string",
            "format": "time",
            "title": "Time"
          }
        },
        "type": "object",
        "title": "PickUpOrDelivery"
      },
      "Pickup": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "pickup": {
            "type": "string",
            "title": "Pickup"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "pickup"
        ],
        "title": "Pickup",
        "description": "Generic object that represent an option with a charge"
      },
      "PickupDateV8": {
        "properties": {
          "no_pickup_date": {
            "$ref": "#/components/schemas/PickupDateValueV8"
          },
          "pickup_date_in_past": {
            "$ref": "#/components/schemas/PickupDateValueV8"
          }
        },
        "type": "object",
        "title": "PickupDateV8"
      },
      "PickupDateV8BusinessRuleEnum": {
        "type": "string",
        "enum": [
          "SET_TODAY",
          "SET_TODAY+1"
        ],
        "title": "PickupDateV8BusinessRuleEnum",
        "description": "An enumeration."
      },
      "PickupDateValueV8": {
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/PickupDateV8BusinessRuleEnum"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "PickupDateValueV8"
      },
      "PickupTimeV8": {
        "properties": {
          "times": {
            "items": {
              "$ref": "#/components/schemas/PickupTimeValueV8"
            },
            "type": "array",
            "title": "Times"
          }
        },
        "type": "object",
        "required": [
          "times"
        ],
        "title": "PickupTimeV8"
      },
      "PickupTimeValueV8": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "from_": {
            "type": "string",
            "format": "time",
            "title": "From ",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "to": {
            "type": "string",
            "format": "time",
            "title": "To",
            "description": "ISO 8601 format",
            "example": "14:23"
          }
        },
        "type": "object",
        "required": [
          "action",
          "from_",
          "to"
        ],
        "title": "PickupTimeValueV8",
        "description": "Generic object that represent an option with an optional charge"
      },
      "Platforms": {
        "properties": {
          "e2open_spot": {
            "$ref": "#/components/schemas/E2OpenSpot"
          },
          "blueyonder_api": {
            "$ref": "#/components/schemas/Blueyonder"
          },
          "navisphere_api": {
            "$ref": "#/components/schemas/Navisphere"
          }
        },
        "type": "object",
        "title": "Platforms"
      },
      "PricePerMile": {
        "properties": {
          "fileurl": {
            "type": "string",
            "title": "Fileurl"
          },
          "master": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin_states": {
            "items": {
              "$ref": "#/components/schemas/PricePerMileValue"
            },
            "type": "array",
            "title": "Origin States"
          }
        },
        "type": "object",
        "title": "PricePerMile"
      },
      "PricePerMileV9": {
        "properties": {
          "fsc": {
            "items": {
              "$ref": "#/components/schemas/FscValueV9"
            },
            "type": "array",
            "title": "Fsc"
          },
          "master": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/E2OpenAdditionalValue"
              },
              {
                "$ref": "#/components/schemas/AdditionalValue"
              }
            ],
            "title": "Master"
          },
          "origin_states": {
            "items": {
              "$ref": "#/components/schemas/PricePerMileValueV9"
            },
            "type": "array",
            "title": "Origin States"
          },
          "mode": {
            "$ref": "#/components/schemas/PricePerMileV9ModeEnum"
          }
        },
        "type": "object",
        "title": "PricePerMileV9"
      },
      "PricePerMileV9ModeEnum": {
        "type": "string",
        "enum": [
          "PRICE_PER_MILE",
          "TRUCKLOAD_FUEL_SURCHARGE",
          "E2OPEN_FUEL_SURCHARGE",
          "BREAKTHROUGH_FUEL"
        ],
        "title": "PricePerMileV9ModeEnum",
        "description": "An enumeration."
      },
      "PricePerMileValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin_state": {
            "type": "string",
            "title": "Origin State"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "origin_state"
        ],
        "title": "PricePerMileValue",
        "description": "Generic object that represent an option with a charge"
      },
      "PricePerMileValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin_state": {
            "type": "string",
            "title": "Origin State"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "origin_state"
        ],
        "title": "PricePerMileValueV9",
        "description": "Generic object that represent an option with a charge"
      },
      "ProfitMethodV9Enum": {
        "type": "string",
        "enum": [
          "BILL_AMOUNT_MARGIN",
          "DISTANCE_TIERS"
        ],
        "title": "ProfitMethodV9Enum",
        "description": "An enumeration."
      },
      "PrometeoCompany": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_parade_company": {
            "type": "boolean",
            "title": "Is Parade Company"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "scacs": {
            "items": {
              "$ref": "#/components/schemas/PrometeoSCAC"
            },
            "type": "array",
            "title": "Scacs"
          },
          "additional_data": {
            "$ref": "#/components/schemas/PrometeoCompanyAdditionalData"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "is_active",
          "is_parade_company",
          "deleted"
        ],
        "title": "PrometeoCompany"
      },
      "PrometeoCompanyAdditionalData": {
        "properties": {
          "e2open_spot_email": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "E2Open Spot Email"
          },
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "platforms": {
            "$ref": "#/components/schemas/CompanyPlatforms"
          }
        },
        "type": "object",
        "title": "PrometeoCompanyAdditionalData"
      },
      "PrometeoCustomer": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "company": {
            "$ref": "#/components/schemas/PrometeoCompany"
          },
          "contact_name": {
            "type": "string",
            "title": "Contact Name"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "duns": {
            "type": "string",
            "title": "Duns"
          },
          "additional_data": {
            "$ref": "#/components/schemas/PrometeoCustomerAdditionalData"
          },
          "third_party": {
            "$ref": "#/components/schemas/ThirdParty"
          },
          "parade": {
            "type": "boolean",
            "title": "Parade",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "companyname": {
            "type": "string",
            "title": "Companyname"
          }
        },
        "type": "object",
        "required": [
          "id",
          "company_id",
          "name",
          "is_active",
          "deleted",
          "is_default",
          "bid_post",
          "oid",
          "companyname"
        ],
        "title": "PrometeoCustomer"
      },
      "PrometeoCustomerAdditionalData": {
        "properties": {
          "email_notification": {
            "$ref": "#/components/schemas/EmailNotification"
          },
          "third_party": {
            "type": "object",
            "title": "Third Party"
          },
          "equipment_type_keywords": {
            "items": {},
            "type": "array",
            "title": "Equipment Type Keywords"
          },
          "loaddex_data": {
            "$ref": "#/components/schemas/LoaddexData"
          },
          "archer_data": {
            "$ref": "#/components/schemas/ArcherData"
          },
          "scac": {
            "type": "string",
            "title": "Scac"
          },
          "platforms": {
            "$ref": "#/components/schemas/Platforms"
          },
          "awarded_data": {
            "$ref": "#/components/schemas/AwardedData"
          },
          "identifiers": {
            "items": {},
            "type": "array",
            "title": "Identifiers"
          }
        },
        "type": "object",
        "title": "PrometeoCustomerAdditionalData"
      },
      "PrometeoSCAC": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "scac_code": {
            "type": "string",
            "title": "Scac Code"
          },
          "scac_name": {
            "type": "string",
            "title": "Scac Name"
          },
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "scac_code",
          "scac_name",
          "company_id"
        ],
        "title": "PrometeoSCAC"
      },
      "PrometeoUserSeat": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "seat_id": {
            "type": "integer",
            "title": "Seat Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "seat_id"
        ],
        "title": "PrometeoUserSeat"
      },
      "QuotesAmountThreshold": {
        "properties": {
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/QuotesAmountThresholdValue"
            },
            "type": "array",
            "title": "Quotes"
          }
        },
        "type": "object",
        "required": [
          "quotes"
        ],
        "title": "QuotesAmountThreshold"
      },
      "QuotesAmountThresholdCityV9": {
        "properties": {
          "by_pick_up_date": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_city__ByPickupDate"
          },
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_city__QuotesAmountThresholdValueV9"
            },
            "type": "array",
            "title": "Quotes"
          }
        },
        "type": "object",
        "required": [
          "by_pick_up_date",
          "quotes"
        ],
        "title": "QuotesAmountThresholdCityV9"
      },
      "QuotesAmountThresholdStateV9": {
        "properties": {
          "by_pick_up_date": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_state__ByPickupDate"
          },
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_state__QuotesAmountThresholdValueV9"
            },
            "type": "array",
            "title": "Quotes"
          }
        },
        "type": "object",
        "required": [
          "by_pick_up_date",
          "quotes"
        ],
        "title": "QuotesAmountThresholdStateV9"
      },
      "QuotesAmountThresholdV7": {
        "properties": {
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/QuotesAmountThresholdValueV7"
            },
            "type": "array",
            "title": "Quotes"
          }
        },
        "type": "object",
        "required": [
          "quotes"
        ],
        "title": "QuotesAmountThresholdV7"
      },
      "QuotesAmountThresholdV9": {
        "properties": {
          "by_pick_up_date": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold__ByPickupDate"
          },
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold__QuotesAmountThresholdValueV9"
            },
            "type": "array",
            "title": "Quotes"
          }
        },
        "type": "object",
        "required": [
          "by_pick_up_date",
          "quotes"
        ],
        "title": "QuotesAmountThresholdV9"
      },
      "QuotesAmountThresholdValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "origin",
          "quantity"
        ],
        "title": "QuotesAmountThresholdValue",
        "description": "Generic object that represent an option with a charge"
      },
      "QuotesAmountThresholdValueV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "action",
          "origin",
          "quantity"
        ],
        "title": "QuotesAmountThresholdValueV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "QuotesAmountThresholdZipV9": {
        "properties": {
          "by_pick_up_date": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_zip__ByPickupDate"
          },
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_zip__QuotesAmountThresholdValueV9"
            },
            "type": "array",
            "title": "Quotes"
          }
        },
        "type": "object",
        "required": [
          "by_pick_up_date",
          "quotes"
        ],
        "title": "QuotesAmountThresholdZipV9"
      },
      "RateEnginesIndex": {
        "properties": {
          "timeframe_geography": {
            "$ref": "#/components/schemas/TimeframeGeography"
          },
          "posted": {
            "type": "integer",
            "title": "Posted"
          },
          "paid": {
            "type": "integer",
            "title": "Paid"
          }
        },
        "type": "object",
        "title": "RateEnginesIndex"
      },
      "RateEnginesIndexV6": {
        "properties": {
          "timeframe_geography": {
            "$ref": "#/components/schemas/TimeframeGeography"
          },
          "posted": {
            "type": "integer",
            "title": "Posted"
          },
          "paid": {
            "type": "integer",
            "title": "Paid"
          },
          "geography": {
            "$ref": "#/components/schemas/Geography"
          }
        },
        "type": "object",
        "title": "RateEnginesIndexV6"
      },
      "RateEnginesIndexV8": {
        "properties": {
          "timeframe_geography": {
            "$ref": "#/components/schemas/TimeframeGeography"
          },
          "posted": {
            "type": "integer",
            "title": "Posted"
          },
          "paid": {
            "type": "integer",
            "title": "Paid"
          },
          "geography": {
            "$ref": "#/components/schemas/Geography"
          },
          "dat_rate_cast_time_frame": {
            "$ref": "#/components/schemas/TimeFrame"
          },
          "dat_rate_cast_fuel_index": {
            "type": "number",
            "title": "Dat Rate Cast Fuel Index"
          }
        },
        "type": "object",
        "title": "RateEnginesIndexV8"
      },
      "RateEnginesWeight": {
        "properties": {
          "engines": {
            "items": {
              "$ref": "#/components/schemas/EngineValue"
            },
            "type": "array",
            "title": "Engines"
          }
        },
        "type": "object",
        "required": [
          "engines"
        ],
        "title": "RateEnginesWeight"
      },
      "ReBidMinimum": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          }
        },
        "type": "object",
        "required": [
          "value",
          "unit"
        ],
        "title": "ReBidMinimum",
        "description": "Generic object that represent a charge"
      },
      "ReBidMinimumV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "type": {
            "$ref": "#/components/schemas/dbs__tabi__schemas__re_bid_minimum__ReBidMinimumType"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "type"
        ],
        "title": "ReBidMinimumV7",
        "description": "Generic object that represent an option with a charge"
      },
      "ReBidMinimumV9": {
        "properties": {
          "re_bids": {
            "items": {
              "$ref": "#/components/schemas/ReBidMinimumValueV9"
            },
            "type": "array",
            "title": "Re Bids"
          },
          "type": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__re_bid_minimum__ReBidMinimumType"
          }
        },
        "type": "object",
        "required": [
          "re_bids",
          "type"
        ],
        "title": "ReBidMinimumV9"
      },
      "ReBidMinimumValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "from_"
        ],
        "title": "ReBidMinimumValueV9",
        "description": "Generic object that represent an option with a charge"
      },
      "ReportItem": {
        "properties": {
          "rate": {
            "type": "number",
            "title": "Rate"
          },
          "report_id": {
            "type": "string",
            "title": "Report Id"
          }
        },
        "type": "object",
        "title": "ReportItem"
      },
      "ReportList": {
        "properties": {
          "reports": {
            "items": {
              "$ref": "#/components/schemas/ReportItem"
            },
            "type": "array",
            "title": "Reports",
            "examples": [
              [
                {
                  "rate": 10.01,
                  "report_id": "01"
                },
                {
                  "rate": 0.0,
                  "report_id": "02"
                },
                {
                  "rate": 10.99,
                  "report_id": "03"
                },
                {
                  "rate": 10.1245,
                  "report_id": "04"
                }
              ]
            ]
          }
        },
        "type": "object",
        "title": "ReportList"
      },
      "RequestInvoiceRequest": {
        "properties": {
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "title": "Url"
          },
          "invoice_api_response": {
            "type": "string",
            "minLength": 1,
            "title": "Invoice Api Response"
          },
          "date_hour": {
            "type": "string",
            "format": "date-time",
            "title": "Date Hour",
            "description": "ISO 8601 format"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "title": "Created Date",
            "description": "ISO 8601 format"
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "title": "Subject"
          },
          "origin_email": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Email",
            "description": "Original sender in case of forwarded email"
          },
          "sender_email": {
            "type": "string",
            "minLength": 1,
            "title": "Sender Email",
            "description": "Always is the sender of email"
          },
          "process_message": {
            "type": "string",
            "minLength": 1,
            "title": "Process Message"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          }
        },
        "type": "object",
        "required": [
          "customer_oid",
          "status"
        ],
        "title": "RequestInvoiceRequest"
      },
      "RequestInvoiceRequestFile": {
        "properties": {
          "page_number": {
            "type": "integer",
            "title": "Page Number"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "title": "Url"
          },
          "invoice_request_oid": {
            "type": "integer",
            "title": "Invoice Request Oid"
          },
          "type": {
            "type": "string",
            "minLength": 1,
            "title": "Type"
          }
        },
        "type": "object",
        "title": "RequestInvoiceRequestFile"
      },
      "RequestOrderEntry": {
        "properties": {
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "title": "Status"
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "title": "Url"
          },
          "idata_response": {
            "type": "string",
            "minLength": 1,
            "title": "Idata Response"
          },
          "customer_domain": {
            "type": "string",
            "minLength": 1,
            "title": "Customer Domain"
          },
          "date_hour": {
            "type": "string",
            "format": "date-time",
            "title": "Date Hour",
            "description": "ISO 8601 format"
          },
          "received_date": {
            "type": "string",
            "format": "date-time",
            "title": "Received Date",
            "description": "ISO 8601 format"
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "title": "Subject"
          },
          "url_tabi": {
            "type": "string",
            "minLength": 1,
            "title": "Url Tabi"
          },
          "from_email": {
            "type": "string",
            "minLength": 1,
            "title": "From Email"
          },
          "attempt": {
            "type": "integer",
            "title": "Attempt"
          }
        },
        "type": "object",
        "required": [
          "customer_oid"
        ],
        "title": "RequestOrderEntry"
      },
      "RequestTransformReportInException": {
        "properties": {
          "exception_type": {
            "type": "string",
            "title": "Exception Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "exception_type",
          "description"
        ],
        "title": "RequestTransformReportInException"
      },
      "RestrictedLanes": {
        "properties": {
          "origins": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Origins"
          },
          "destinations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Destinations"
          },
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/dbs__tabi__schemas__restricted_lanes__Lane"
            },
            "type": "array",
            "title": "Lanes"
          }
        },
        "type": "object",
        "title": "RestrictedLanes"
      },
      "RestrictedLanesV4": {
        "properties": {
          "origins": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Origins"
          },
          "destinations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Destinations"
          },
          "lanes": {
            "items": {
              "$ref": "#/components/schemas/dbs__tabi__schemas__restricted_lanes__Lane"
            },
            "type": "array",
            "title": "Lanes"
          },
          "origins_states": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Origins States"
          },
          "origins_zips": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Origins Zips"
          },
          "destinations_states": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Destinations States"
          },
          "destinations_zips": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Destinations Zips"
          }
        },
        "type": "object",
        "title": "RestrictedLanesV4"
      },
      "Role": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "role": {
            "$ref": "#/components/schemas/RoleValue"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "role"
        ],
        "title": "Role"
      },
      "RoleValue": {
        "type": "string",
        "enum": [
          "INTERNAL_ADMIN",
          "COMPANY_ID",
          "TABI_USER",
          "TABI_CUSTOMER",
          "TABI_PARAMETER",
          "TABI_REPORT"
        ],
        "title": "RoleValue",
        "description": "An enumeration."
      },
      "SMMetadata": {
        "properties": {
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          }
        },
        "type": "object",
        "required": [
          "company_id"
        ],
        "title": "SMMetadata",
        "description": "The Secret Manager Metadata for the user"
      },
      "SameDayCutoff": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "deadline": {
            "type": "string",
            "format": "time",
            "title": "Deadline",
            "description": "ISO 8601 format",
            "example": "14:23"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "deadline"
        ],
        "title": "SameDayCutoff",
        "description": "Generic object that represent an option with a charge"
      },
      "SameDayCutoffV7": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "deadline": {
            "type": "string",
            "format": "time",
            "title": "Deadline",
            "description": "ISO 8601 format",
            "example": "14:23"
          }
        },
        "type": "object",
        "required": [
          "action",
          "deadline"
        ],
        "title": "SameDayCutoffV7",
        "description": "Generic object that represent an option with an optional charge"
      },
      "Season": {
        "type": "string",
        "enum": [
          "WINTER",
          "SPRING",
          "SUMMER",
          "FALL"
        ],
        "title": "Season",
        "description": "An enumeration."
      },
      "SeasonValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "season": {
            "$ref": "#/components/schemas/Season"
          },
          "from_": {
            "type": "string",
            "format": "date",
            "title": "From ",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          },
          "to": {
            "type": "string",
            "format": "date",
            "title": "To",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "season",
          "from_",
          "to"
        ],
        "title": "SeasonValue",
        "description": "Generic object that represent an option with a charge"
      },
      "SeasonValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "from_": {
            "type": "string",
            "format": "date",
            "title": "From ",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          },
          "to": {
            "type": "string",
            "format": "date",
            "title": "To",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          }
        },
        "type": "object",
        "required": [
          "action",
          "from_",
          "to"
        ],
        "title": "SeasonValueV9",
        "description": "Generic object that represent an option with an optional charge"
      },
      "Seasonality": {
        "properties": {
          "seasons": {
            "items": {
              "$ref": "#/components/schemas/SeasonValue"
            },
            "type": "array",
            "title": "Seasons"
          }
        },
        "type": "object",
        "required": [
          "seasons"
        ],
        "title": "Seasonality"
      },
      "SeasonalityV9": {
        "properties": {
          "seasons": {
            "items": {
              "$ref": "#/components/schemas/SeasonValueV9"
            },
            "type": "array",
            "title": "Seasons"
          }
        },
        "type": "object",
        "required": [
          "seasons"
        ],
        "title": "SeasonalityV9"
      },
      "Source": {
        "type": "string",
        "enum": [
          "BREAKTHROUGH_FUEL",
          "EIA"
        ],
        "title": "Source",
        "description": "An enumeration."
      },
      "Status": {
        "type": "string",
        "enum": [
          "Exception Group By",
          "Rejected",
          "Finished",
          "Validated",
          "SylectusDone",
          "Unexpected Error",
          "Pending",
          "Assigned",
          "Processed",
          "Processed Group By",
          "Validated Group By",
          "Assigned Package",
          "Delete Group By",
          "Assigned Pending Document",
          "Cancelled",
          "Deleted",
          "Deleted Pending Document",
          "Error Processing Group By",
          "Exception",
          "Merged Document",
          "Pending Document",
          "Pending Group By",
          "Processing Group By"
        ],
        "title": "Status",
        "description": "An enumeration."
      },
      "StatusResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "version",
          "environment"
        ],
        "title": "StatusResponse"
      },
      "Stop": {
        "properties": {
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Stops"
            },
            "type": "array",
            "title": "Stops"
          }
        },
        "type": "object",
        "title": "Stop"
      },
      "StopCity": {
        "properties": {
          "city": {
            "type": "string",
            "minLength": 1,
            "title": "City"
          },
          "miles": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles"
          }
        },
        "type": "object",
        "required": [
          "city",
          "miles"
        ],
        "title": "StopCity"
      },
      "StopCityV2": {
        "properties": {
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "example": "USA"
          },
          "city": {
            "type": "string",
            "minLength": 1,
            "title": "City"
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "title": "State"
          },
          "zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Zipcode"
          },
          "miles": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles"
          }
        },
        "type": "object",
        "required": [
          "city",
          "state"
        ],
        "title": "StopCityV2"
      },
      "Stops": {
        "properties": {
          "city": {
            "type": "string",
            "minLength": 1,
            "title": "City"
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "title": "State"
          },
          "miles": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles"
          }
        },
        "type": "object",
        "title": "Stops"
      },
      "SupportedVersions": {
        "properties": {
          "versions": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Versions"
          }
        },
        "type": "object",
        "required": [
          "versions"
        ],
        "title": "SupportedVersions"
      },
      "TemperatureRate": {
        "properties": {
          "temperature": {
            "type": "string",
            "title": "Temperature"
          },
          "rate": {
            "type": "number",
            "title": "Rate"
          }
        },
        "type": "object",
        "title": "TemperatureRate"
      },
      "TemperatureV9": {
        "properties": {
          "temperatures": {
            "items": {
              "$ref": "#/components/schemas/TemperatureValueV9"
            },
            "type": "array",
            "title": "Temperatures"
          }
        },
        "type": "object",
        "required": [
          "temperatures"
        ],
        "title": "TemperatureV9"
      },
      "TemperatureValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "number",
            "title": "From "
          },
          "to": {
            "type": "number",
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "from_"
        ],
        "title": "TemperatureValueV9",
        "description": "Generic object that represent an option with an optional charge"
      },
      "ThirdParty": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "account": {
            "type": "string",
            "title": "Account"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "zipcode": {
            "type": "string",
            "title": "Zipcode"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          }
        },
        "type": "object",
        "title": "ThirdParty"
      },
      "TimeFrame": {
        "type": "string",
        "enum": [
          "8DAYS",
          "35DAYS",
          "52WEEKS"
        ],
        "title": "TimeFrame",
        "description": "An enumeration."
      },
      "TimeZone": {
        "type": "string",
        "enum": [
          "EASTERN_STANDARD_TIME_EST",
          "EASTERN_DAYLIGHT_TIME_EDT",
          "EASTERN_TIME_ET",
          "CENTRAL_STANDARD_TIME_CST",
          "CENTRAL_DAYLIGHT_TIME_CDT",
          "CENTRAL_TIME_CT",
          "MOUNTAIN_STANDARD_TIME_MST",
          "MOUNTAIN_DAYLIGHT_TIME_MDT",
          "MOUNTAIN_TIME_MT",
          "PACIFIC_STANDARD_TIME_PST",
          "PACIFIC_DAYLIGHT_TIME_PDT",
          "PACIFIC_TIME_PT"
        ],
        "title": "TimeZone",
        "description": "An enumeration."
      },
      "TimeframeGeography": {
        "type": "string",
        "enum": [
          "3D_3_DIGIT_ZIP",
          "3D_MKT",
          "3D_X_MKT",
          "3D_REGION",
          "7D_3_DIGIT_ZIP",
          "7D_MKT",
          "7D_X_MKT",
          "7D_REGION",
          "15D_3_DIGIT_ZIP",
          "15D_MKT",
          "15D_X_MKT",
          "15D_REGION",
          "30D_3_DIGIT_ZIP",
          "30D_MKT",
          "30D_X_MKT",
          "30D_REGION",
          "60D_3_DIGIT_ZIP",
          "60D_MKT",
          "60D_X_MKT",
          "60D_REGION"
        ],
        "title": "TimeframeGeography",
        "description": "An enumeration."
      },
      "TopLane": {
        "properties": {
          "origin_city": {
            "type": "string",
            "title": "Origin City"
          },
          "origin_state": {
            "type": "string",
            "title": "Origin State"
          },
          "origin_zipcode": {
            "type": "string",
            "title": "Origin Zipcode"
          },
          "delivery_city": {
            "type": "string",
            "title": "Delivery City"
          },
          "delivery_state": {
            "type": "string",
            "title": "Delivery State"
          },
          "delivery_zipcode": {
            "type": "string",
            "title": "Delivery Zipcode"
          }
        },
        "type": "object",
        "required": [
          "origin_city",
          "origin_state",
          "origin_zipcode",
          "delivery_city",
          "delivery_state",
          "delivery_zipcode"
        ],
        "title": "TopLane"
      },
      "Trailer": {
        "type": "string",
        "enum": [
          "NOT_IDENTIFIED",
          "VAN",
          "FLATBED",
          "REEFER",
          "SPECIALIZED"
        ],
        "title": "Trailer",
        "description": "An enumeration."
      },
      "TrailerType": {
        "properties": {
          "trailer": {
            "$ref": "#/components/schemas/Trailer"
          },
          "default": {
            "type": "boolean",
            "title": "Default"
          }
        },
        "type": "object",
        "required": [
          "trailer",
          "default"
        ],
        "title": "TrailerType"
      },
      "TransitTimeDeliveryV9": {
        "properties": {
          "times": {
            "items": {
              "$ref": "#/components/schemas/TransitTimeDeliveryV9Time"
            },
            "type": "array",
            "title": "Times"
          }
        },
        "type": "object",
        "required": [
          "times"
        ],
        "title": "TransitTimeDeliveryV9"
      },
      "TransitTimeDeliveryV9Time": {
        "properties": {
          "transit_days": {
            "type": "integer",
            "title": "Transit Days"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          }
        },
        "type": "object",
        "required": [
          "transit_days",
          "from_",
          "to",
          "action"
        ],
        "title": "TransitTimeDeliveryV9Time"
      },
      "TransitTimeVariance": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "daily_distance": {
            "type": "integer",
            "title": "Daily Distance"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "daily_distance",
          "action"
        ],
        "title": "TransitTimeVariance",
        "description": "Generic object that represent an option with an optional charge"
      },
      "TruckToLoadRatioV5": {
        "properties": {
          "origins": {
            "items": {
              "$ref": "#/components/schemas/TruckToLoadRatioValueV5"
            },
            "type": "array",
            "title": "Origins"
          },
          "destinations": {
            "items": {
              "$ref": "#/components/schemas/TruckToLoadRatioValueV5"
            },
            "type": "array",
            "title": "Destinations"
          }
        },
        "type": "object",
        "title": "TruckToLoadRatioV5"
      },
      "TruckToLoadRatioValueV5": {
        "properties": {
          "from_": {
            "type": "number",
            "title": "From "
          },
          "to": {
            "type": "number",
            "title": "To"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to"
        ],
        "title": "TruckToLoadRatioValueV5"
      },
      "TruckstopInputScore": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "number",
            "title": "From "
          },
          "to": {
            "type": "number",
            "title": "To"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to"
        ],
        "title": "TruckstopInputScore"
      },
      "TruckstopModeEnum": {
        "type": "string",
        "enum": [
          "FOUR_WEEK_TREND",
          "RATE_ESTIMATE"
        ],
        "title": "TruckstopModeEnum",
        "description": "An enumeration."
      },
      "TruckstopOptionEnum": {
        "type": "string",
        "enum": [
          "POSTED",
          "BOOKED"
        ],
        "title": "TruckstopOptionEnum",
        "description": "An enumeration."
      },
      "TruckstopRateInsightsV9": {
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/TruckstopModeEnum"
          },
          "option": {
            "$ref": "#/components/schemas/TruckstopOptionEnum"
          },
          "input_scores": {
            "items": {
              "$ref": "#/components/schemas/TruckstopInputScore"
            },
            "type": "array",
            "title": "Input Scores"
          }
        },
        "type": "object",
        "required": [
          "mode",
          "option"
        ],
        "title": "TruckstopRateInsightsV9"
      },
      "TruckstopRateTypeValues": {
        "type": "string",
        "enum": [
          "RATE_INSIGHTS",
          "RATE_MATE"
        ],
        "title": "TruckstopRateTypeValues",
        "description": "An enumeration."
      },
      "UndercutAmountV3": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          }
        },
        "type": "object",
        "required": [
          "value",
          "unit"
        ],
        "title": "UndercutAmountV3",
        "description": "Generic object that represent a charge"
      },
      "Unit": {
        "type": "string",
        "enum": [
          "PERCENTAGE",
          "DOLLAR",
          "TOTAL",
          "DOLLAR_PER_MILLE"
        ],
        "title": "Unit",
        "description": "Units available for a charge"
      },
      "UpdateFSCMasterValueInput": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "trailer_types": {
            "items": {
              "$ref": "#/components/schemas/Trailer"
            },
            "type": "array"
          },
          "fsc_master_value": {
            "type": "number",
            "title": "Fsc Master Value"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "trailer_types",
          "fsc_master_value"
        ],
        "title": "UpdateFSCMasterValueInput"
      },
      "UpdateRebidInput": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "last_rate_posted": {
            "type": "number",
            "title": "Last Rate Posted"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "load_id",
          "last_rate_posted"
        ],
        "title": "UpdateRebidInput"
      },
      "UpdateReportInput": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "final_rate": {
            "type": "number",
            "title": "Final Rate"
          },
          "fsc": {
            "type": "number",
            "title": "Fsc"
          },
          "awarded": {
            "type": "string",
            "enum": [
              "YES",
              "NO",
              "NA"
            ],
            "title": "Awarded"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__depends__ExtraReportFields"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "load_id"
        ],
        "title": "UpdateReportInput"
      },
      "UpdateReportInputByTransactionId": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/ExtraData"
          }
        },
        "type": "object",
        "required": [
          "transaction_id"
        ],
        "title": "UpdateReportInputByTransactionId"
      },
      "UserCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "password",
          "roles"
        ],
        "title": "UserCreate"
      },
      "UserPassword": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "group_oid": {
            "type": "integer",
            "title": "Group Oid"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "status": {
            "type": "boolean",
            "title": "Status"
          },
          "photo": {
            "type": "string",
            "title": "Photo"
          },
          "corporatephone": {
            "type": "string",
            "title": "Corporatephone"
          },
          "extension": {
            "type": "string",
            "title": "Extension"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "oid"
        ],
        "title": "UserPassword"
      },
      "UserUpdate": {
        "properties": {
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "roles"
        ],
        "title": "UserUpdate"
      },
      "UserVersion": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "username",
          "version"
        ],
        "title": "UserVersion"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ValueStrOption": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "value"
        ],
        "title": "ValueStrOption",
        "description": "Generic object that represent an option with string value and a charge"
      },
      "Version": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "Version"
      },
      "Weekend": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "starting_day": {
            "$ref": "#/components/schemas/dbs__tabi__schemas__weekend__WeekendStartDay"
          },
          "starting_time": {
            "type": "string",
            "format": "time",
            "title": "Starting Time",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "ending_day": {
            "$ref": "#/components/schemas/dbs__tabi__schemas__weekend__WeekendEndDay"
          },
          "ending_time": {
            "type": "string",
            "format": "time",
            "title": "Ending Time",
            "description": "ISO 8601 format",
            "example": "14:23"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "starting_day",
          "starting_time",
          "ending_day",
          "ending_time"
        ],
        "title": "Weekend",
        "description": "Generic object that represent an option with a charge"
      },
      "WeekendV6": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "starting_day": {
            "$ref": "#/components/schemas/dbs__tabi__schemas__weekend__WeekendStartDay"
          },
          "starting_time": {
            "type": "string",
            "format": "time",
            "title": "Starting Time",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "ending_day": {
            "$ref": "#/components/schemas/dbs__tabi__schemas__weekend__WeekendEndDay"
          },
          "ending_time": {
            "type": "string",
            "format": "time",
            "title": "Ending Time",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "starting_day",
          "starting_time",
          "ending_day",
          "ending_time",
          "action"
        ],
        "title": "WeekendV6",
        "description": "Generic object that represent an option with an optional charge"
      },
      "WeekendV9": {
        "properties": {
          "pickup": {
            "$ref": "#/components/schemas/_BaseWeekend"
          },
          "delivery": {
            "$ref": "#/components/schemas/_BaseWeekend"
          }
        },
        "type": "object",
        "title": "WeekendV9"
      },
      "WeightTierValue": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "from_": {
            "type": "integer",
            "title": "From "
          },
          "to": {
            "type": "integer",
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "from_",
          "to"
        ],
        "title": "WeightTierValue",
        "description": "Generic object that represent an option with a charge"
      },
      "WeightTiers": {
        "properties": {
          "weights": {
            "items": {
              "$ref": "#/components/schemas/WeightTierValue"
            },
            "type": "array",
            "title": "Weights"
          },
          "stop_weight": {
            "type": "integer",
            "title": "Stop Weight"
          }
        },
        "type": "object",
        "required": [
          "stop_weight"
        ],
        "title": "WeightTiers"
      },
      "WeightTiersV8": {
        "properties": {
          "weights": {
            "items": {
              "$ref": "#/components/schemas/WeightTierValue"
            },
            "type": "array",
            "title": "Weights"
          },
          "stop_weight": {
            "type": "integer",
            "title": "Stop Weight"
          },
          "start_weight": {
            "type": "integer",
            "title": "Start Weight"
          }
        },
        "type": "object",
        "title": "WeightTiersV8"
      },
      "ZipcodeCords": {
        "properties": {
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          }
        },
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "ZipcodeCords"
      },
      "_BaseWeekend": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "starting_day": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__weekend__WeekendStartDay"
          },
          "starting_time": {
            "type": "string",
            "format": "time",
            "title": "Starting Time",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "ending_day": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__weekend__WeekendEndDay"
          },
          "ending_time": {
            "type": "string",
            "format": "time",
            "title": "Ending Time",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "type": "object",
        "required": [
          "starting_day",
          "starting_time",
          "ending_day",
          "ending_time",
          "action"
        ],
        "title": "_BaseWeekend",
        "description": "Generic object that represent an option with an optional charge"
      },
      "dbs__internal__schemas__user__User": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array",
            "title": "Roles"
          },
          "sm_metadata": {
            "$ref": "#/components/schemas/SMMetadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "roles"
        ],
        "title": "User"
      },
      "dbs__tabi__schemas__conditioned_lanes__Lane": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "destination": {
            "type": "string",
            "title": "Destination"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "origin",
          "destination"
        ],
        "title": "Lane",
        "description": "Generic object that represent an option with a charge"
      },
      "dbs__tabi__schemas__exception_report__ExceptionReport": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "exception_type": {
            "type": "string",
            "minLength": 1,
            "title": "Exception Type"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "title": "Description"
          },
          "customer": {
            "type": "string",
            "minLength": 1,
            "title": "Customer"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "title": "Created Date",
            "description": "ISO 8601 format"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "origin_city": {
            "type": "string",
            "minLength": 1,
            "title": "Origin City"
          },
          "origin_state": {
            "type": "string",
            "minLength": 1,
            "title": "Origin State"
          },
          "origin_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Zipcode"
          },
          "delivery_city": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery City"
          },
          "delivery_state": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery State"
          },
          "delivery_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Zipcode"
          },
          "trailer_type": {
            "type": "string",
            "minLength": 1,
            "title": "Trailer Type"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "pieces_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces Count",
            "default": 0
          },
          "oid": {
            "type": "integer",
            "title": "Oid"
          }
        },
        "type": "object",
        "required": [
          "customer_oid",
          "oid"
        ],
        "title": "ExceptionReport"
      },
      "dbs__tabi__schemas__exception_report__RequestExceptionReport": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "exception_type": {
            "type": "string",
            "minLength": 1,
            "title": "Exception Type"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "title": "Description"
          },
          "customer": {
            "type": "string",
            "minLength": 1,
            "title": "Customer"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "title": "Created Date",
            "description": "ISO 8601 format"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "origin_city": {
            "type": "string",
            "minLength": 1,
            "title": "Origin City"
          },
          "origin_state": {
            "type": "string",
            "minLength": 1,
            "title": "Origin State"
          },
          "origin_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Zipcode"
          },
          "delivery_city": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery City"
          },
          "delivery_state": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery State"
          },
          "delivery_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Zipcode"
          },
          "trailer_type": {
            "type": "string",
            "minLength": 1,
            "title": "Trailer Type"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "pieces_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "customer_oid"
        ],
        "title": "RequestExceptionReport"
      },
      "dbs__tabi__schemas__fixed_lanes__Lane": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "destination": {
            "type": "string",
            "title": "Destination"
          }
        },
        "type": "object",
        "required": [
          "additional",
          "origin",
          "destination"
        ],
        "title": "Lane",
        "description": "Generic object that represent an option with a charge"
      },
      "dbs__tabi__schemas__re_bid_minimum__ReBidMinimumType": {
        "type": "string",
        "enum": [
          "MINIMUM_RATE",
          "RATE_ENGINE"
        ],
        "title": "ReBidMinimumType",
        "description": "An enumeration."
      },
      "dbs__tabi__schemas__report__Report": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "customer": {
            "type": "string",
            "minLength": 1,
            "title": "Customer"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "title": "Created Date",
            "description": "ISO 8601 format"
          },
          "status": {
            "type": "string",
            "enum": [
              "Quoted",
              "Exception"
            ],
            "title": "Status",
            "default": "Quoted"
          },
          "awarded": {
            "type": "string",
            "enum": [
              "YES",
              "NO"
            ],
            "title": "Awarded",
            "default": "NO"
          },
          "miles": {
            "type": "number",
            "title": "Miles"
          },
          "base_line_rate": {
            "type": "number",
            "title": "Base Line Rate"
          },
          "miles_with_stops": {
            "type": "number",
            "title": "Miles With Stops"
          },
          "base_line_with_stops_rate": {
            "type": "number",
            "title": "Base Line With Stops Rate"
          },
          "rate_board_1": {
            "type": "number",
            "title": "Rate Board 1",
            "description": "DAT"
          },
          "rate_board_2": {
            "type": "number",
            "title": "Rate Board 2",
            "description": "TRUCKSTOP"
          },
          "rate_board_3": {
            "type": "number",
            "title": "Rate Board 3",
            "description": "GREENSCREENS"
          },
          "rate_board_4": {
            "type": "number",
            "title": "Rate Board 4",
            "description": "C4"
          },
          "rate_board_5": {
            "type": "number",
            "title": "Rate Board 5",
            "description": "MARKET INSIGHT"
          },
          "rate_board_6": {
            "type": "number",
            "title": "Rate Board 6",
            "description": "SLLR"
          },
          "rate_board_7": {
            "type": "number",
            "title": "Rate Board 7",
            "description": "REVENOVA"
          },
          "rate_board_8": {
            "type": "number",
            "title": "Rate Board 8",
            "description": "LOADDEX"
          },
          "rate_board_9": {
            "type": "number",
            "title": "Rate Board 9",
            "description": "AS/400"
          },
          "rate_board_10": {
            "type": "number",
            "title": "Rate Board 10",
            "description": "FREIGHTWAVES"
          },
          "rate_board_11": {
            "type": "number",
            "title": "Rate Board 11",
            "description": "123LOADBOARD"
          },
          "rate_board_12": {
            "type": "number",
            "title": "Rate Board 12",
            "description": "MCLEOD"
          },
          "rate_board_13": {
            "type": "number",
            "title": "Rate Board 13",
            "description": "PARADE"
          },
          "rate_board_14": {
            "type": "number",
            "title": "Rate Board 14",
            "description": "ARCBEST"
          },
          "rate_board_15": {
            "type": "number",
            "title": "Rate Board 15",
            "description": "DAT RATE CAST"
          },
          "rate_board_16": {
            "type": "number",
            "title": "Rate Board 16",
            "description": "ARCHER"
          },
          "rate_board_17": {
            "type": "number",
            "title": "Rate Board 17",
            "description": "DIRECT TRANS"
          },
          "rate_board_10_url": {
            "type": "string",
            "minLength": 1,
            "title": "Rate Board 10 Url",
            "description": "Hyperlink to the FWSonar engine dashboard"
          },
          "total_rate": {
            "type": "number",
            "title": "Total Rate"
          },
          "all_in_rate": {
            "type": "number",
            "title": "All In Rate"
          },
          "require_linehaul": {
            "type": "boolean",
            "title": "Require Linehaul"
          },
          "fsc": {
            "type": "number",
            "title": "Fsc"
          },
          "profit": {
            "type": "number",
            "title": "Profit"
          },
          "margin": {
            "type": "number",
            "title": "Margin"
          },
          "origin_city": {
            "type": "string",
            "minLength": 1,
            "title": "Origin City"
          },
          "origin_state": {
            "type": "string",
            "minLength": 1,
            "title": "Origin State"
          },
          "origin_location": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Location"
          },
          "pickup_date": {
            "type": "string",
            "format": "date",
            "title": "Pickup Date"
          },
          "pickup_hour": {
            "type": "string",
            "format": "time",
            "title": "Pickup Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "zipcode_from": {
            "type": "string",
            "minLength": 1,
            "title": "Zipcode From"
          },
          "zipcode_to": {
            "type": "string",
            "minLength": 1,
            "title": "Zipcode To"
          },
          "delivery_city": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery City"
          },
          "delivery_state": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery State"
          },
          "delivery_location": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Location"
          },
          "delivery_date": {
            "type": "string",
            "format": "date",
            "title": "Delivery Date"
          },
          "delivery_hour": {
            "type": "string",
            "format": "time",
            "title": "Delivery Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "transit_time": {
            "type": "number",
            "title": "Transit Time"
          },
          "weekend": {
            "type": "number",
            "title": "Weekend"
          },
          "after_hours": {
            "type": "number",
            "title": "After Hours"
          },
          "holiday": {
            "type": "number",
            "title": "Holiday"
          },
          "season": {
            "type": "number",
            "title": "Season"
          },
          "same_day_cutoff": {
            "type": "number",
            "title": "Same Day Cutoff"
          },
          "lead_time": {
            "type": "number",
            "title": "Lead Time"
          },
          "pickup_time": {
            "type": "number",
            "title": "Pickup Time"
          },
          "delivery_time": {
            "type": "number",
            "title": "Delivery Time"
          },
          "quote_amount_threshold": {
            "type": "number",
            "title": "Quote Amount Threshold"
          },
          "accessorials": {
            "type": "number",
            "title": "Accessorials"
          },
          "pieces_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces Count",
            "default": 0
          },
          "fixed_price_lane": {
            "type": "number",
            "title": "Fixed Price Lane"
          },
          "lane_conditioned": {
            "type": "number",
            "title": "Lane Conditioned"
          },
          "conditioned_locations_pickup": {
            "type": "number",
            "title": "Conditioned Locations Pickup"
          },
          "weight_tier": {
            "type": "number",
            "title": "Weight Tier"
          },
          "origin_conditioned": {
            "type": "number",
            "title": "Origin Conditioned"
          },
          "destination_conditioned": {
            "type": "number",
            "title": "Destination Conditioned"
          },
          "conditioned_locations_delivery": {
            "type": "number",
            "title": "Conditioned Locations Delivery"
          },
          "conditioned_lanes_by_state_rate": {
            "type": "number",
            "title": "Conditioned Lanes By State Rate"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/Trailer"
          },
          "accessorials_list": {
            "items": {
              "$ref": "#/components/schemas/Accessorial"
            },
            "type": "array"
          },
          "additional_stops": {
            "type": "integer",
            "title": "Additional Stops"
          },
          "additional_stops_cities": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StopCityV2"
                },
                {
                  "$ref": "#/components/schemas/StopCity"
                }
              ]
            },
            "type": "array",
            "title": "Additional Stops Cities"
          },
          "additional_stops_quantity": {
            "type": "number",
            "title": "Additional Stops Quantity"
          },
          "rebid_minimum_total": {
            "type": "number",
            "title": "Rebid Minimum Total"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "cross_border": {
            "type": "number",
            "title": "Cross Border"
          },
          "extra_charges_and_restrictions": {
            "type": "number",
            "title": "Extra Charges And Restrictions"
          },
          "international_shipment": {
            "type": "number",
            "title": "International Shipment"
          },
          "commodity": {
            "type": "string",
            "minLength": 1,
            "title": "Commodity"
          },
          "temperature": {
            "type": "string",
            "minLength": 1,
            "title": "Temperature"
          },
          "truck_to_load_ratio_origin_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_origin_ratio": {
            "type": "number",
            "title": "Truck To Load Ratio Origin Ratio"
          },
          "truck_to_load_ratio_destination_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_destination_ratio": {
            "type": "number",
            "title": "Truck To Load Ratio Destination Ratio"
          },
          "lane_score": {
            "type": "number",
            "title": "Lane Score"
          },
          "greenscreens_confidence_score": {
            "type": "number",
            "title": "Greenscreens Confidence Score"
          },
          "extra_data": {
            "title": "Extra Data"
          },
          "oid": {
            "type": "integer",
            "title": "Oid"
          }
        },
        "type": "object",
        "required": [
          "customer_oid",
          "oid"
        ],
        "title": "Report"
      },
      "dbs__tabi__schemas__report__RequestReport": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "customer": {
            "type": "string",
            "minLength": 1,
            "title": "Customer"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "title": "Created Date",
            "description": "ISO 8601 format"
          },
          "status": {
            "type": "string",
            "enum": [
              "Quoted",
              "Exception"
            ],
            "title": "Status",
            "default": "Quoted"
          },
          "awarded": {
            "type": "string",
            "enum": [
              "YES",
              "NO"
            ],
            "title": "Awarded",
            "default": "NO"
          },
          "miles": {
            "type": "number",
            "title": "Miles"
          },
          "base_line_rate": {
            "type": "number",
            "title": "Base Line Rate"
          },
          "miles_with_stops": {
            "type": "number",
            "title": "Miles With Stops"
          },
          "base_line_with_stops_rate": {
            "type": "number",
            "title": "Base Line With Stops Rate"
          },
          "rate_board_1": {
            "type": "number",
            "title": "Rate Board 1",
            "description": "DAT"
          },
          "rate_board_2": {
            "type": "number",
            "title": "Rate Board 2",
            "description": "TRUCKSTOP"
          },
          "rate_board_3": {
            "type": "number",
            "title": "Rate Board 3",
            "description": "GREENSCREENS"
          },
          "rate_board_4": {
            "type": "number",
            "title": "Rate Board 4",
            "description": "C4"
          },
          "rate_board_5": {
            "type": "number",
            "title": "Rate Board 5",
            "description": "MARKET INSIGHT"
          },
          "rate_board_6": {
            "type": "number",
            "title": "Rate Board 6",
            "description": "SLLR"
          },
          "rate_board_7": {
            "type": "number",
            "title": "Rate Board 7",
            "description": "REVENOVA"
          },
          "rate_board_8": {
            "type": "number",
            "title": "Rate Board 8",
            "description": "LOADDEX"
          },
          "rate_board_9": {
            "type": "number",
            "title": "Rate Board 9",
            "description": "AS/400"
          },
          "rate_board_10": {
            "type": "number",
            "title": "Rate Board 10",
            "description": "FREIGHTWAVES"
          },
          "rate_board_11": {
            "type": "number",
            "title": "Rate Board 11",
            "description": "123LOADBOARD"
          },
          "rate_board_12": {
            "type": "number",
            "title": "Rate Board 12",
            "description": "MCLEOD"
          },
          "rate_board_13": {
            "type": "number",
            "title": "Rate Board 13",
            "description": "PARADE"
          },
          "rate_board_14": {
            "type": "number",
            "title": "Rate Board 14",
            "description": "ARCBEST"
          },
          "rate_board_15": {
            "type": "number",
            "title": "Rate Board 15",
            "description": "DAT RATE CAST"
          },
          "rate_board_16": {
            "type": "number",
            "title": "Rate Board 16",
            "description": "ARCHER"
          },
          "rate_board_17": {
            "type": "number",
            "title": "Rate Board 17",
            "description": "DIRECT TRANS"
          },
          "rate_board_10_url": {
            "type": "string",
            "minLength": 1,
            "title": "Rate Board 10 Url",
            "description": "Hyperlink to the FWSonar engine dashboard"
          },
          "total_rate": {
            "type": "number",
            "title": "Total Rate"
          },
          "all_in_rate": {
            "type": "number",
            "title": "All In Rate"
          },
          "require_linehaul": {
            "type": "boolean",
            "title": "Require Linehaul"
          },
          "fsc": {
            "type": "number",
            "title": "Fsc"
          },
          "profit": {
            "type": "number",
            "title": "Profit"
          },
          "margin": {
            "type": "number",
            "title": "Margin"
          },
          "origin_city": {
            "type": "string",
            "minLength": 1,
            "title": "Origin City"
          },
          "origin_state": {
            "type": "string",
            "minLength": 1,
            "title": "Origin State"
          },
          "origin_location": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Location"
          },
          "pickup_date": {
            "type": "string",
            "format": "date",
            "title": "Pickup Date"
          },
          "pickup_hour": {
            "type": "string",
            "format": "time",
            "title": "Pickup Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "zipcode_from": {
            "type": "string",
            "minLength": 1,
            "title": "Zipcode From"
          },
          "zipcode_to": {
            "type": "string",
            "minLength": 1,
            "title": "Zipcode To"
          },
          "delivery_city": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery City"
          },
          "delivery_state": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery State"
          },
          "delivery_location": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Location"
          },
          "delivery_date": {
            "type": "string",
            "format": "date",
            "title": "Delivery Date"
          },
          "delivery_hour": {
            "type": "string",
            "format": "time",
            "title": "Delivery Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "transit_time": {
            "type": "number",
            "title": "Transit Time"
          },
          "weekend": {
            "type": "number",
            "title": "Weekend"
          },
          "after_hours": {
            "type": "number",
            "title": "After Hours"
          },
          "holiday": {
            "type": "number",
            "title": "Holiday"
          },
          "season": {
            "type": "number",
            "title": "Season"
          },
          "same_day_cutoff": {
            "type": "number",
            "title": "Same Day Cutoff"
          },
          "lead_time": {
            "type": "number",
            "title": "Lead Time"
          },
          "pickup_time": {
            "type": "number",
            "title": "Pickup Time"
          },
          "delivery_time": {
            "type": "number",
            "title": "Delivery Time"
          },
          "quote_amount_threshold": {
            "type": "number",
            "title": "Quote Amount Threshold"
          },
          "accessorials": {
            "type": "number",
            "title": "Accessorials"
          },
          "pieces_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces Count",
            "default": 0
          },
          "fixed_price_lane": {
            "type": "number",
            "title": "Fixed Price Lane"
          },
          "lane_conditioned": {
            "type": "number",
            "title": "Lane Conditioned"
          },
          "conditioned_locations_pickup": {
            "type": "number",
            "title": "Conditioned Locations Pickup"
          },
          "weight_tier": {
            "type": "number",
            "title": "Weight Tier"
          },
          "origin_conditioned": {
            "type": "number",
            "title": "Origin Conditioned"
          },
          "destination_conditioned": {
            "type": "number",
            "title": "Destination Conditioned"
          },
          "conditioned_locations_delivery": {
            "type": "number",
            "title": "Conditioned Locations Delivery"
          },
          "conditioned_lanes_by_state_rate": {
            "type": "number",
            "title": "Conditioned Lanes By State Rate"
          },
          "trailer_type": {
            "$ref": "#/components/schemas/Trailer"
          },
          "accessorials_list": {
            "items": {
              "$ref": "#/components/schemas/Accessorial"
            },
            "type": "array"
          },
          "additional_stops": {
            "type": "integer",
            "title": "Additional Stops"
          },
          "additional_stops_cities": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StopCityV2"
                },
                {
                  "$ref": "#/components/schemas/StopCity"
                }
              ]
            },
            "type": "array",
            "title": "Additional Stops Cities"
          },
          "additional_stops_quantity": {
            "type": "number",
            "title": "Additional Stops Quantity"
          },
          "rebid_minimum_total": {
            "type": "number",
            "title": "Rebid Minimum Total"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "cross_border": {
            "type": "number",
            "title": "Cross Border"
          },
          "extra_charges_and_restrictions": {
            "type": "number",
            "title": "Extra Charges And Restrictions"
          },
          "international_shipment": {
            "type": "number",
            "title": "International Shipment"
          },
          "commodity": {
            "type": "string",
            "minLength": 1,
            "title": "Commodity"
          },
          "temperature": {
            "type": "string",
            "minLength": 1,
            "title": "Temperature"
          },
          "truck_to_load_ratio_origin_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_origin_ratio": {
            "type": "number",
            "title": "Truck To Load Ratio Origin Ratio"
          },
          "truck_to_load_ratio_destination_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_destination_ratio": {
            "type": "number",
            "title": "Truck To Load Ratio Destination Ratio"
          },
          "lane_score": {
            "type": "number",
            "title": "Lane Score"
          },
          "greenscreens_confidence_score": {
            "type": "number",
            "title": "Greenscreens Confidence Score"
          },
          "extra_data": {
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "customer_oid"
        ],
        "title": "RequestReport"
      },
      "dbs__tabi__schemas__restricted_lanes__Lane": {
        "properties": {
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "destination": {
            "type": "string",
            "title": "Destination"
          }
        },
        "type": "object",
        "required": [
          "origin",
          "destination"
        ],
        "title": "Lane"
      },
      "dbs__tabi__schemas__user__User": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "group_oid": {
            "type": "integer",
            "title": "Group Oid"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "status": {
            "type": "boolean",
            "title": "Status"
          },
          "photo": {
            "type": "string",
            "title": "Photo"
          },
          "corporatephone": {
            "type": "string",
            "title": "Corporatephone"
          },
          "extension": {
            "type": "string",
            "title": "Extension"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "oid"
        ],
        "title": "User"
      },
      "dbs__tabi__schemas__weekend__WeekendEndDay": {
        "type": "string",
        "enum": [
          "SUNDAY",
          "MONDAY"
        ],
        "title": "WeekendEndDay",
        "description": "An enumeration."
      },
      "dbs__tabi__schemas__weekend__WeekendStartDay": {
        "type": "string",
        "enum": [
          "THURSDAY",
          "FRIDAY",
          "SATURDAY"
        ],
        "title": "WeekendStartDay",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__audit_table_report__ExtraReportFields": {
        "properties": {
          "license": {
            "type": "string",
            "title": "License"
          }
        },
        "type": "object",
        "title": "ExtraReportFields"
      },
      "schemas__services__tabi_db__prometeo__depends__ExtraReportFields": {
        "properties": {
          "license": {
            "type": "string",
            "minLength": 1,
            "title": "License"
          },
          "ids_list": {
            "$ref": "#/components/schemas/IDsList"
          },
          "awarded_rate": {
            "type": "number",
            "title": "Awarded Rate"
          },
          "awarded_user": {
            "type": "string",
            "title": "Awarded User"
          },
          "e2open_offer_id": {
            "type": "integer",
            "title": "E2Open Offer Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ExtraReportFields"
      },
      "schemas__services__tabi_db__prometeo__exception_report__ExceptionReport": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "customer_name": {
            "type": "string",
            "title": "Customer Name"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "equipment_type": {
            "type": "string",
            "minLength": 1,
            "title": "Equipment Type"
          },
          "exception_type": {
            "type": "string",
            "minLength": 1,
            "title": "Exception Type"
          },
          "pickup": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "delivery": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "pieces": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces",
            "default": 0
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "title": "Description"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__depends__ExtraReportFields"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "ISO 8601 format"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "title": "ExceptionReport"
      },
      "schemas__services__tabi_db__prometeo__exception_report__RequestExceptionReport": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "customer_name": {
            "type": "string",
            "title": "Customer Name"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "equipment_type": {
            "type": "string",
            "minLength": 1,
            "title": "Equipment Type"
          },
          "exception_type": {
            "type": "string",
            "minLength": 1,
            "title": "Exception Type"
          },
          "pickup": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "delivery": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "pieces": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces",
            "default": 0
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "title": "Description"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__depends__ExtraReportFields"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "ISO 8601 format"
          }
        },
        "type": "object",
        "title": "RequestExceptionReport"
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold__ByPickupDate": {
        "type": "string",
        "enum": [
          "CREATED_DATE",
          "PICKUP_DATE"
        ],
        "title": "ByPickupDate",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold__QuotesAmountThresholdValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "type": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold__TypeLane"
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "action",
          "origin",
          "type",
          "quantity"
        ],
        "title": "QuotesAmountThresholdValueV9",
        "description": "Generic object that represent an option with an optional charge"
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold__TypeLane": {
        "type": "string",
        "enum": [
          "ORIGIN",
          "DESTINATION"
        ],
        "title": "TypeLane",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_city__ByPickupDate": {
        "type": "string",
        "enum": [
          "CREATED_DATE",
          "PICKUP_DATE"
        ],
        "title": "ByPickupDate",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_city__QuotesAmountThresholdValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "type": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_city__TypeLane"
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "action",
          "origin",
          "type",
          "quantity"
        ],
        "title": "QuotesAmountThresholdValueV9",
        "description": "Generic object that represent an option with an optional charge"
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_city__TypeLane": {
        "type": "string",
        "enum": [
          "ORIGIN",
          "DESTINATION"
        ],
        "title": "TypeLane",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_state__ByPickupDate": {
        "type": "string",
        "enum": [
          "CREATED_DATE",
          "PICKUP_DATE"
        ],
        "title": "ByPickupDate",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_state__QuotesAmountThresholdValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "type": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_state__TypeLane"
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "action",
          "origin",
          "type",
          "quantity"
        ],
        "title": "QuotesAmountThresholdValueV9",
        "description": "Generic object that represent an option with an optional charge"
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_state__TypeLane": {
        "type": "string",
        "enum": [
          "ORIGIN",
          "DESTINATION"
        ],
        "title": "TypeLane",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_zip__ByPickupDate": {
        "type": "string",
        "enum": [
          "CREATED_DATE",
          "PICKUP_DATE"
        ],
        "title": "ByPickupDate",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_zip__QuotesAmountThresholdValueV9": {
        "properties": {
          "additional": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "type": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_zip__TypeLane"
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "action",
          "origin",
          "type",
          "quantity"
        ],
        "title": "QuotesAmountThresholdValueV9",
        "description": "Generic object that represent an option with an optional charge"
      },
      "schemas__services__tabi_db__prometeo__parameters__quotes_amount_threshold_zip__TypeLane": {
        "type": "string",
        "enum": [
          "ORIGIN",
          "DESTINATION"
        ],
        "title": "TypeLane",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__re_bid_minimum__ReBidMinimumType": {
        "type": "string",
        "enum": [
          "MINIMUM_RATE",
          "RATE_ENGINE"
        ],
        "title": "ReBidMinimumType",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__weekend__WeekendEndDay": {
        "type": "string",
        "enum": [
          "SUNDAY",
          "MONDAY"
        ],
        "title": "WeekendEndDay",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__parameters__weekend__WeekendStartDay": {
        "type": "string",
        "enum": [
          "THURSDAY",
          "FRIDAY",
          "SATURDAY"
        ],
        "title": "WeekendStartDay",
        "description": "An enumeration."
      },
      "schemas__services__tabi_db__prometeo__report__Report": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "customer_name": {
            "type": "string",
            "title": "Customer Name"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "equipment_type": {
            "$ref": "#/components/schemas/Trailer"
          },
          "awarded": {
            "type": "string",
            "enum": [
              "YES",
              "NO",
              "NA"
            ],
            "title": "Awarded",
            "default": "NA"
          },
          "pickup": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "delivery": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "pieces": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces",
            "default": 0
          },
          "dimensions": {
            "type": "string",
            "title": "Dimensions"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "commodity": {
            "$ref": "#/components/schemas/Commodity"
          },
          "accesorials": {
            "$ref": "#/components/schemas/Accesorials"
          },
          "miles": {
            "type": "number",
            "title": "Miles"
          },
          "status": {
            "type": "string",
            "enum": [
              "Quoted",
              "Exception",
              "Modified"
            ],
            "title": "Status",
            "default": "Quoted"
          },
          "rate_load_board": {
            "$ref": "#/components/schemas/LoadBoardRateList"
          },
          "final_rate": {
            "type": "number",
            "title": "Final Rate"
          },
          "profit": {
            "type": "number",
            "title": "Profit"
          },
          "weekend": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "after_hours": {
            "type": "number",
            "title": "After Hours"
          },
          "holidays": {
            "type": "number",
            "title": "Holidays"
          },
          "season": {
            "type": "number",
            "title": "Season"
          },
          "same_day_cutoff": {
            "type": "number",
            "title": "Same Day Cutoff"
          },
          "lead_time": {
            "type": "number",
            "title": "Lead Time"
          },
          "delivery_time_rate": {
            "type": "number",
            "title": "Delivery Time Rate"
          },
          "conditioned_lane": {
            "type": "number",
            "title": "Conditioned Lane"
          },
          "accesorial": {
            "type": "number",
            "title": "Accesorial"
          },
          "transit_time_rate": {
            "type": "number",
            "title": "Transit Time Rate"
          },
          "transit_time_delivery": {
            "type": "number",
            "title": "Transit Time Delivery"
          },
          "conditioned_location": {
            "type": "number",
            "title": "Conditioned Location"
          },
          "base_line_rate": {
            "type": "number",
            "title": "Base Line Rate"
          },
          "conditioned_weight": {
            "type": "number",
            "title": "Conditioned Weight"
          },
          "fixed_price_lane": {
            "type": "number",
            "title": "Fixed Price Lane"
          },
          "fsc": {
            "type": "number",
            "title": "Fsc"
          },
          "conditioned_origin": {
            "type": "number",
            "title": "Conditioned Origin"
          },
          "conditioned_destination": {
            "type": "number",
            "title": "Conditioned Destination"
          },
          "conditioned_consignee": {
            "type": "number",
            "title": "Conditioned Consignee"
          },
          "report": {
            "$ref": "#/components/schemas/ReportList"
          },
          "margin": {
            "type": "number",
            "title": "Margin"
          },
          "average_rate_cad": {
            "type": "number",
            "title": "Average Rate Cad"
          },
          "stop": {
            "$ref": "#/components/schemas/Stop"
          },
          "stop_rate": {
            "type": "number",
            "title": "Stop Rate"
          },
          "stop_number": {
            "type": "number",
            "title": "Stop Number"
          },
          "ttlr_origin": {
            "$ref": "#/components/schemas/FromTo"
          },
          "ttlr_origin_ratio": {
            "type": "number",
            "title": "Ttlr Origin Ratio"
          },
          "ttlr_destination": {
            "$ref": "#/components/schemas/FromTo"
          },
          "ttlr_destination_ratio": {
            "type": "number",
            "title": "Ttlr Destination Ratio"
          },
          "last_rate_posted": {
            "type": "number",
            "title": "Last Rate Posted"
          },
          "quote_amount_threshold": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_zip": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_city": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_state": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "cross_border_rate": {
            "type": "number",
            "title": "Cross Border Rate"
          },
          "rebid_minimum_rate": {
            "type": "number",
            "title": "Rebid Minimum Rate"
          },
          "rebid_count": {
            "type": "integer",
            "title": "Rebid Count"
          },
          "extra_charges_and_restrictions_rate": {
            "type": "number",
            "title": "Extra Charges And Restrictions Rate"
          },
          "temperature": {
            "$ref": "#/components/schemas/TemperatureRate"
          },
          "lane_score_rate": {
            "type": "number",
            "title": "Lane Score Rate"
          },
          "international_shipment_rate": {
            "type": "number",
            "title": "International Shipment Rate"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "miles_with_stops": {
            "type": "number",
            "title": "Miles With Stops"
          },
          "base_line_with_stops_rate": {
            "type": "number",
            "title": "Base Line With Stops Rate"
          },
          "greenscreens_confidence_score_rate": {
            "type": "number",
            "title": "Greenscreens Confidence Score Rate"
          },
          "truckstop_score_rate": {
            "type": "number",
            "title": "Truckstop Score Rate"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__depends__ExtraReportFields"
          },
          "conditioned_lane_state_rate": {
            "type": "number",
            "title": "Conditioned Lane State Rate"
          },
          "pickup_time_rate": {
            "type": "number",
            "title": "Pickup Time Rate"
          },
          "all_in_rate": {
            "type": "number",
            "title": "All In Rate"
          },
          "linehaul": {
            "type": "boolean",
            "title": "Linehaul"
          },
          "rate_board_10_url": {
            "type": "string",
            "minLength": 1,
            "title": "Rate Board 10 Url",
            "description": "Hyperlink to the FWSonar engine dashboard"
          },
          "extra_data": {
            "title": "Extra Data"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "ISO 8601 format"
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Modified At",
            "description": "ISO 8601 format"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "customer_id"
        ],
        "title": "Report"
      },
      "schemas__services__tabi_db__prometeo__report__RequestReport": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "customer_name": {
            "type": "string",
            "title": "Customer Name"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "equipment_type": {
            "$ref": "#/components/schemas/Trailer"
          },
          "awarded": {
            "type": "string",
            "enum": [
              "YES",
              "NO",
              "NA"
            ],
            "title": "Awarded",
            "default": "NA"
          },
          "pickup": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "delivery": {
            "$ref": "#/components/schemas/PickUpOrDelivery"
          },
          "pieces": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pieces",
            "default": 0
          },
          "dimensions": {
            "type": "string",
            "title": "Dimensions"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "commodity": {
            "$ref": "#/components/schemas/Commodity"
          },
          "accesorials": {
            "$ref": "#/components/schemas/Accesorials"
          },
          "miles": {
            "type": "number",
            "title": "Miles"
          },
          "status": {
            "type": "string",
            "enum": [
              "Quoted",
              "Exception",
              "Modified"
            ],
            "title": "Status",
            "default": "Quoted"
          },
          "rate_load_board": {
            "$ref": "#/components/schemas/LoadBoardRateList"
          },
          "final_rate": {
            "type": "number",
            "title": "Final Rate"
          },
          "profit": {
            "type": "number",
            "title": "Profit"
          },
          "weekend": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "after_hours": {
            "type": "number",
            "title": "After Hours"
          },
          "holidays": {
            "type": "number",
            "title": "Holidays"
          },
          "season": {
            "type": "number",
            "title": "Season"
          },
          "same_day_cutoff": {
            "type": "number",
            "title": "Same Day Cutoff"
          },
          "lead_time": {
            "type": "number",
            "title": "Lead Time"
          },
          "delivery_time_rate": {
            "type": "number",
            "title": "Delivery Time Rate"
          },
          "conditioned_lane": {
            "type": "number",
            "title": "Conditioned Lane"
          },
          "accesorial": {
            "type": "number",
            "title": "Accesorial"
          },
          "transit_time_rate": {
            "type": "number",
            "title": "Transit Time Rate"
          },
          "transit_time_delivery": {
            "type": "number",
            "title": "Transit Time Delivery"
          },
          "conditioned_location": {
            "type": "number",
            "title": "Conditioned Location"
          },
          "base_line_rate": {
            "type": "number",
            "title": "Base Line Rate"
          },
          "conditioned_weight": {
            "type": "number",
            "title": "Conditioned Weight"
          },
          "fixed_price_lane": {
            "type": "number",
            "title": "Fixed Price Lane"
          },
          "fsc": {
            "type": "number",
            "title": "Fsc"
          },
          "conditioned_origin": {
            "type": "number",
            "title": "Conditioned Origin"
          },
          "conditioned_destination": {
            "type": "number",
            "title": "Conditioned Destination"
          },
          "conditioned_consignee": {
            "type": "number",
            "title": "Conditioned Consignee"
          },
          "report": {
            "$ref": "#/components/schemas/ReportList"
          },
          "margin": {
            "type": "number",
            "title": "Margin"
          },
          "average_rate_cad": {
            "type": "number",
            "title": "Average Rate Cad"
          },
          "stop": {
            "$ref": "#/components/schemas/Stop"
          },
          "stop_rate": {
            "type": "number",
            "title": "Stop Rate"
          },
          "stop_number": {
            "type": "number",
            "title": "Stop Number"
          },
          "ttlr_origin": {
            "$ref": "#/components/schemas/FromTo"
          },
          "ttlr_origin_ratio": {
            "type": "number",
            "title": "Ttlr Origin Ratio"
          },
          "ttlr_destination": {
            "$ref": "#/components/schemas/FromTo"
          },
          "ttlr_destination_ratio": {
            "type": "number",
            "title": "Ttlr Destination Ratio"
          },
          "last_rate_posted": {
            "type": "number",
            "title": "Last Rate Posted"
          },
          "quote_amount_threshold": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_zip": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_city": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_state": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "cross_border_rate": {
            "type": "number",
            "title": "Cross Border Rate"
          },
          "rebid_minimum_rate": {
            "type": "number",
            "title": "Rebid Minimum Rate"
          },
          "rebid_count": {
            "type": "integer",
            "title": "Rebid Count"
          },
          "extra_charges_and_restrictions_rate": {
            "type": "number",
            "title": "Extra Charges And Restrictions Rate"
          },
          "temperature": {
            "$ref": "#/components/schemas/TemperatureRate"
          },
          "lane_score_rate": {
            "type": "number",
            "title": "Lane Score Rate"
          },
          "international_shipment_rate": {
            "type": "number",
            "title": "International Shipment Rate"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "miles_with_stops": {
            "type": "number",
            "title": "Miles With Stops"
          },
          "base_line_with_stops_rate": {
            "type": "number",
            "title": "Base Line With Stops Rate"
          },
          "greenscreens_confidence_score_rate": {
            "type": "number",
            "title": "Greenscreens Confidence Score Rate"
          },
          "truckstop_score_rate": {
            "type": "number",
            "title": "Truckstop Score Rate"
          },
          "api": {
            "type": "string",
            "minLength": 1,
            "title": "Api"
          },
          "platform": {
            "type": "string",
            "minLength": 1,
            "title": "Platform"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__depends__ExtraReportFields"
          },
          "conditioned_lane_state_rate": {
            "type": "number",
            "title": "Conditioned Lane State Rate"
          },
          "pickup_time_rate": {
            "type": "number",
            "title": "Pickup Time Rate"
          },
          "all_in_rate": {
            "type": "number",
            "title": "All In Rate"
          },
          "linehaul": {
            "type": "boolean",
            "title": "Linehaul"
          },
          "rate_board_10_url": {
            "type": "string",
            "minLength": 1,
            "title": "Rate Board 10 Url",
            "description": "Hyperlink to the FWSonar engine dashboard"
          },
          "extra_data": {
            "title": "Extra Data"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "ISO 8601 format"
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Modified At",
            "description": "ISO 8601 format"
          }
        },
        "type": "object",
        "required": [
          "customer_id"
        ],
        "title": "RequestReport"
      }
    },
    "securitySchemes": {
      "HTTPBasicOptional": {
        "type": "http",
        "scheme": "basic"
      },
      "JWTBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}