{
  "openapi": "3.1.0",
  "info": {
    "title": "TABi Spot Truckload Quoting API\u2019s",
    "description": "Admin",
    "version": "r1174.4b1bc74"
  },
  "servers": [
    {
      "url": "/api-spot/admin"
    }
  ],
  "paths": {
    "/api/rtr/company_id/{company_id}/calculate/duns/{duns}": {
      "post": {
        "tags": [
          "RTR"
        ],
        "summary": "Calculate By Duns",
        "operationId": "calculate_by_duns_api_rtr_company_id__company_id__calculate_duns__duns__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          },
          {
            "description": "DUNS",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Duns",
              "description": "DUNS"
            },
            "name": "duns",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateByDunsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/rtr/company_id/{company_id}/calculate/customer_id/{customer_id}": {
      "post": {
        "tags": [
          "RTR"
        ],
        "summary": "Calculate By Customer Id",
        "operationId": "calculate_by_customer_id_api_rtr_company_id__company_id__calculate_customer_id__customer_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          },
          {
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id",
              "description": "Customer ID"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputTID"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/rtr/company_id/{company_id}/calculate/company_name/{company_name}": {
      "post": {
        "tags": [
          "RTR"
        ],
        "summary": "Calculate By Company Name",
        "operationId": "calculate_by_company_name_api_rtr_company_id__company_id__calculate_company_name__company_name__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          },
          {
            "description": "CUSTOMER",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Company Name",
              "description": "CUSTOMER"
            },
            "name": "company_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateByDunsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/rtr/company_id/{company_id}/calculate/identifiers/": {
      "post": {
        "tags": [
          "RTR"
        ],
        "summary": "Calculate By Identifiers",
        "operationId": "calculate_by_identifiers_api_rtr_company_id__company_id__calculate_identifiers__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateByDunsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/rtr/company_id/{company_id}/calculate/duns_or_company_name/{duns_or_company_name}": {
      "post": {
        "tags": [
          "RTR"
        ],
        "summary": "Calculate By Duns Or Company Name",
        "operationId": "calculate_by_duns_or_company_name_api_rtr_company_id__company_id__calculate_duns_or_company_name__duns_or_company_name__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          },
          {
            "description": "DUNS or company name",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Duns Or Company Name",
              "description": "DUNS or company name"
            },
            "name": "duns_or_company_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateByDunsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/rtr/company_id/{company_id}/customer/{property_value}": {
      "post": {
        "tags": [
          "RTR"
        ],
        "summary": "Get Customer By Value And Properties List",
        "operationId": "get_customer_by_value_and_properties_list_api_rtr_company_id__company_id__customer__property_value__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          },
          {
            "description": "Property Value",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Property Value",
              "description": "Property Value"
            },
            "name": "property_value",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPropertiesList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrometeoCustomer"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api/rtr/company_id/{company_id}/exception": {
      "post": {
        "tags": [
          "RTR"
        ],
        "summary": "Post Exception",
        "operationId": "post_exception_api_rtr_company_id__company_id__exception_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExceptionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "{} not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Read Status",
        "operationId": "read_status_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read Users",
        "operationId": "read_users_users_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array",
                  "title": "Response Read Users Users Get"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Users",
        "operationId": "create_users_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/UserCreate"
                },
                "type": "array",
                "title": "Users"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUsers"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read User",
        "operationId": "read_user_users__username__get",
        "parameters": [
          {
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username",
              "description": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithPassword"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update User",
        "description": "Remove all properties form JSON that you no will update",
        "operationId": "update_user_users__username__put",
        "parameters": [
          {
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username",
              "description": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_users__username__delete",
        "parameters": [
          {
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username",
              "description": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users/c_oid/{c_oid}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete User By C Oid",
        "operationId": "delete_user_by_c_oid_users_c_oid__c_oid__delete",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users/check/credentials": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Post Check Credentials",
        "description": "Check if a group of credentials is valid",
        "operationId": "post_check_credentials_users_check_credentials_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCredentialsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Post Check Credentials Users Check Credentials Post"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users-metadata": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read Users Metadata",
        "operationId": "read_users_metadata_users_metadata_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMetadata"
                  },
                  "type": "array",
                  "title": "Response Read Users Metadata Users Metadata Get"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users-metadata/{username}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read User Metadata",
        "operationId": "read_user_metadata_users_metadata__username__get",
        "parameters": [
          {
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username",
              "description": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Update User Metadata",
        "operationId": "create_update_user_metadata_users_metadata__username__put",
        "parameters": [
          {
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username",
              "description": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/users-metadata/username/{username}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete User Metadata",
        "operationId": "delete_user_metadata_users_metadata_username__username__delete",
        "parameters": [
          {
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username",
              "description": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/tabi/import/user/by-username/{username}": {
      "post": {
        "tags": [
          "Admin TABi"
        ],
        "summary": "Import User By Username",
        "description": "Import an TABi User from username and creates the engines metadata<br>Use this resource to create users that will be used to consume DUNS or CUSTOMER_OID resources A.K.A. RTR",
        "operationId": "import_user_by_username_tabi_import_user_by_username__username__post",
        "parameters": [
          {
            "description": "TABi Username",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username",
              "description": "TABi Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleEnginesAPIData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportedUser"
                }
              }
            }
          },
          "422": {
            "description": "Possible reasons:\n - User already exists\n - Not able to create the user"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "User not found"
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/tabi/import/users/{c_oid}": {
      "post": {
        "tags": [
          "Admin TABi"
        ],
        "summary": "Import Users",
        "operationId": "import_users_tabi_import_users__c_oid__post",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportedUsers"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/prometeo/import/user/by-company-name/{company_name}": {
      "post": {
        "tags": [
          "Admin Prometeo"
        ],
        "summary": "Import User By Company Name",
        "description": "Import an Prometeo Company from name and creates the engines metadata<br>Use this resource to create users that will be used to consume DUNS or CUSTOMER_OID resources A.K.A. RTR",
        "operationId": "import_user_by_company_name_prometeo_import_user_by_company_name__company_name__post",
        "parameters": [
          {
            "description": "Prometeo Company Name",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Company Name",
              "description": "Prometeo Company Name"
            },
            "name": "company_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleEnginesAPIData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportedUser"
                }
              }
            }
          },
          "422": {
            "description": "Possible reasons:\n - User already exists\n - Not able to create the user"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "User not found"
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/dat/rate_lookup/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Dat",
        "operationId": "dat_test_dat_rate_lookup__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DATData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/c4/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "C4",
        "operationId": "c4_test_c4__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/greenscreens/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Greenscreens",
        "operationId": "greenscreens_test_greenscreens__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GreenscreensData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/truckstop/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Truckstop",
        "operationId": "truckstop_test_truckstop__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckstopData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/freightwaves/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Freightwaves",
        "operationId": "freightwaves_test_freightwaves__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreightwavesData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/mcleod/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Mcleod",
        "operationId": "mcleod_test_mcleod__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scac"
            },
            "name": "scac",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/McleodData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/parade/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Parade",
        "operationId": "parade_test_parade__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParadeData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/revenova/{stage}/{engine}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Revenova",
        "operationId": "revenova_test_revenova__stage___engine__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RevenovaRateEngine"
            },
            "name": "engine",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Revenova"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/arcbest/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Arcbest",
        "operationId": "arcbest_test_arcbest__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArcBest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/dat/rate_cast/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Dat",
        "operationId": "dat_test_dat_rate_cast__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DATRateCastData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/loaddex/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Loaddex",
        "operationId": "loaddex_test_loaddex__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dbs__quoting__schemas__api_data__LoaddexData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/directtrans/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Directtrans",
        "operationId": "directtrans_test_directtrans__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirecttransData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/archer/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Archer",
        "operationId": "archer_test_archer__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dbs__quoting__schemas__api_data__ArcherData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/truckstop_rate_insights/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Truckstop Rate Insights",
        "operationId": "truckstop_rate_insights_test_truckstop_rate_insights__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckstopRateInsights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/trinity/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Trinity",
        "operationId": "trinity_test_trinity__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trinity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/test/dcl/{stage}": {
      "post": {
        "tags": [
          "Services Test"
        ],
        "summary": "Dcl",
        "operationId": "dcl_test_dcl__stage__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StrStage"
            },
            "name": "stage",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dcl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/session_tokens/truckstop_rate_insights/{stage}/company_id/{company_id}/code/{code}": {
      "put": {
        "tags": [
          "Session Tokens"
        ],
        "summary": "Truckstop Rate Insights",
        "operationId": "truckstop_rate_insights_session_tokens_truckstop_rate_insights__stage__company_id__company_id__code__code__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            },
            "name": "code",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Company Id"
            },
            "name": "company_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read Api Data",
        "operationId": "read_api_data_api_data_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiDataRead"
                  },
                  "type": "array",
                  "title": "Response Read Api Data Api Data Get"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/username/{username}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read Api Data By Username",
        "operationId": "read_api_data_by_username_api_data_username__username__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiDataRead"
                  },
                  "type": "array",
                  "title": "Response Read Api Data By Username Api Data Username  Username  Get"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/dat/rate_lookup/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Dat Data",
        "operationId": "create_or_update_dat_data_api_data_dat_rate_lookup__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DATData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/dat_ryantrans/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Dat Ryantrans Data",
        "operationId": "create_or_update_dat_ryantrans_data_api_data_dat_ryantrans__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DATRyantransData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/c4/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update C4 Data",
        "operationId": "create_or_update_c4_data_api_data_c4__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/greenscreens/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Greenscreens Data",
        "operationId": "create_or_update_greenscreens_data_api_data_greenscreens__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GreenscreensData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/truckstop/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Truckstop Data",
        "operationId": "create_or_update_truckstop_data_api_data_truckstop__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckstopData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/freightwaves/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Freightwaves Data",
        "operationId": "create_or_update_freightwaves_data_api_data_freightwaves__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreightwavesData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/mcleod/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Mcleod Data",
        "operationId": "create_or_update_mcleod_data_api_data_mcleod__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/McleodData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/parade/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Parade Data",
        "operationId": "create_or_update_parade_data_api_data_parade__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParadeData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/dat/rate_cast/{c_oid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Or Update Dat Rate Cast Data",
        "operationId": "create_or_update_dat_rate_cast_data_api_data_dat_rate_cast__c_oid__put",
        "parameters": [
          {
            "description": "Parent Customer OID",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "C Oid",
              "description": "Parent Customer OID"
            },
            "name": "c_oid",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DATRateCastData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/api_data/{service}/{username}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete Api Data",
        "operationId": "delete_api_data_api_data__service___username__delete",
        "parameters": [
          {
            "description": "API Service",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServiceName"
                }
              ],
              "description": "API Service"
            },
            "name": "service",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            },
            "name": "username",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPCustomValidationError"
                },
                "examples": {
                  "Full": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": [
                        {
                          "loc": [
                            "string"
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "Summary": {
                    "value": {
                      "transaction_id": "202209-0617-5226-377E74FA-8FA6-482C-AB62-FA94E50297EF",
                      "detail": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Incorrect user or password"
          },
          "403": {
            "description": "Not enough privileges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBasicOptional": []
          },
          {
            "HTTPOAuth2Optional": []
          },
          {
            "JWTBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "APIEnum": {
        "type": "string",
        "enum": [
          "DB",
          "QUOTING",
          "SPOT",
          "SPOT_MEDIATOR",
          "EMAIL",
          "IDATA",
          "E2OPEN_SPOT",
          "RPA",
          "OUTLOOK",
          "PROMETEO",
          "OFFER"
        ],
        "title": "APIEnum",
        "description": "An enumeration."
      },
      "Accessorial": {
        "type": "string",
        "enum": [
          "LOAD",
          "UNLOAD",
          "HAZMAT",
          "TARPS",
          "RAMPS",
          "ADDITIONAL_STOP",
          "OTHER"
        ],
        "title": "Accessorial",
        "description": "An enumeration."
      },
      "Action": {
        "type": "string",
        "enum": [
          "ALERT_NOTIFICATION",
          "GO",
          "NO_GO",
          "EXTRA_CHARGE",
          "INFO",
          "BASELINE_RATE",
          "CONTRACTUAL_RATE"
        ],
        "title": "Action",
        "description": "Type of action to do for an event"
      },
      "Agent": {
        "properties": {
          "agents": {
            "items": {
              "$ref": "#/components/schemas/AgentCompany"
            },
            "type": "array",
            "title": "Agents"
          }
        },
        "type": "object",
        "title": "Agent"
      },
      "AgentCompany": {
        "properties": {
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          },
          "company_name": {
            "type": "string",
            "title": "Company Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "company_id",
          "company_name",
          "code"
        ],
        "title": "AgentCompany"
      },
      "ApiConnection": {
        "type": "string",
        "enum": [
          "BOTH",
          "SPOT",
          "ROUTING_GUIDE"
        ],
        "title": "ApiConnection",
        "description": "An enumeration."
      },
      "ApiDataRead": {
        "properties": {
          "c_oid": {
            "type": "integer",
            "title": "C Oid",
            "description": "Parent Customer OID"
          },
          "service": {
            "$ref": "#/components/schemas/ServiceName"
          },
          "data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "service",
          "data"
        ],
        "title": "ApiDataRead",
        "description": "TODO: OLD API DATA METHOD, NOT USE\nShow non-sensitive data about API data"
      },
      "ArcBest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "app_id": {
            "type": "string",
            "title": "App Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "app_id"
        ],
        "title": "ArcBest"
      },
      "Archer": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "Archer"
      },
      "AwardedData": {
        "properties": {
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails"
          },
          "match_rate": {
            "type": "boolean",
            "title": "Match Rate"
          },
          "dollar_threshold": {
            "type": "number",
            "title": "Dollar Threshold"
          }
        },
        "type": "object",
        "title": "AwardedData"
      },
      "BlueYonder": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "duns": {
            "type": "string",
            "title": "Duns"
          },
          "company_name": {
            "type": "string",
            "title": "Company Name"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "BlueYonder"
      },
      "Blueyonder": {
        "properties": {
          "auto_tender": {
            "$ref": "#/components/schemas/BlueyonderAutoTender"
          }
        },
        "type": "object",
        "required": [
          "auto_tender"
        ],
        "title": "Blueyonder"
      },
      "BlueyonderAutoTender": {
        "type": "string",
        "enum": [
          "YES",
          "NO"
        ],
        "title": "BlueyonderAutoTender",
        "description": "An enumeration."
      },
      "C4Data": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "client_id",
          "client_secret"
        ],
        "title": "C4Data"
      },
      "CalculateByDunsInput": {
        "properties": {
          "api": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APIEnum"
              },
              {
                "type": "string"
              }
            ],
            "title": "Api",
            "default": "SPOT"
          },
          "platform": {
            "type": "string",
            "title": "Platform"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/ExtraReportFields"
          },
          "require_linehaul": {
            "type": "boolean",
            "title": "Require Linehaul",
            "description": "When the value of \"True\" is set, the validation process will check whether the calculated output contains a LineHaul rate. If the LineHaul rate is not present, the validation will fail.",
            "default": false
          },
          "miles": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles",
            "description": "Miles from origin to destination, just in case you want to use your own, instead of the ones you got from the rate engine"
          },
          "miles_with_stops": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles With Stops",
            "description": "Miles from origin, to stop 1, from, to stop 2, ..., to destination"
          },
          "trailer_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Trailer"
              },
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Trailer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Trailer Type"
          },
          "origin_city": {
            "type": "string",
            "minLength": 1,
            "title": "Origin City"
          },
          "origin_state": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z]{2,3}$",
            "title": "Origin State"
          },
          "origin_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "default": "USA",
            "example": "USA"
          },
          "delivery_city": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery City"
          },
          "delivery_state": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z]{2,3}$",
            "title": "Delivery State"
          },
          "delivery_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "default": "USA",
            "example": "USA"
          },
          "pickup_date": {
            "type": "string",
            "format": "date",
            "title": "Pickup Date",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          },
          "delivery_date": {
            "type": "string",
            "format": "date",
            "title": "Delivery Date",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          },
          "pickup_hour": {
            "type": "string",
            "format": "time",
            "title": "Pickup Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "delivery_hour": {
            "type": "string",
            "format": "time",
            "title": "Delivery Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "weight": {
            "type": "integer",
            "title": "Weight"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "origin_location": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Location"
          },
          "delivery_location": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Location"
          },
          "accessorials": {
            "items": {
              "$ref": "#/components/schemas/Accessorial"
            },
            "type": "array"
          },
          "extra_charges_and_restrictions": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Item"
                },
                {
                  "$ref": "#/components/schemas/ItemV7"
                },
                {
                  "$ref": "#/components/schemas/ItemV8"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Extra Charges And Restrictions"
          },
          "commodity": {
            "type": "string",
            "minLength": 1,
            "title": "Commodity"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "minLength": 1
              }
            ],
            "title": "Temperature"
          },
          "origin_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Zipcode"
          },
          "delivery_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Zipcode"
          },
          "stop_cities": {
            "items": {
              "$ref": "#/components/schemas/StopCityV2"
            },
            "type": "array",
            "title": "Stop Cities"
          },
          "stops_quantity": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Stops Quantity",
            "default": 0
          },
          "extra_data": {
            "title": "Extra Data"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "fuel_price_per_mile": {
            "type": "number",
            "title": "Fuel Price Per Mile"
          },
          "identifiers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Identifiers"
          },
          "multi_stops_apis": {
            "type": "boolean",
            "title": "Multi Stops Apis",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "trailer_type",
          "origin_city",
          "origin_state",
          "delivery_city",
          "delivery_state"
        ],
        "title": "CalculateByDunsInput"
      },
      "CompanyPlatforms": {
        "properties": {
          "e2open": {
            "$ref": "#/components/schemas/E2Open"
          }
        },
        "type": "object",
        "title": "CompanyPlatforms"
      },
      "CreatedUsers": {
        "properties": {
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          },
          "created": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "title": "Created",
            "default": []
          }
        },
        "type": "object",
        "title": "CreatedUsers"
      },
      "CustomerPropertiesList": {
        "properties": {
          "customer_properties_list": {
            "items": {
              "$ref": "#/components/schemas/CustomerProperty"
            },
            "type": "array"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          }
        },
        "type": "object",
        "required": [
          "customer_properties_list"
        ],
        "title": "CustomerPropertiesList"
      },
      "CustomerProperty": {
        "type": "string",
        "enum": [
          "DUNS",
          "COMPANY_NAME",
          "CUSTOMER_OID",
          "IDENTIFIERS"
        ],
        "title": "CustomerProperty",
        "description": "An enumeration."
      },
      "DATData": {
        "properties": {
          "org_username": {
            "type": "string",
            "title": "Org Username"
          },
          "org_password": {
            "type": "string",
            "title": "Org Password"
          },
          "usr_username": {
            "type": "string",
            "title": "Usr Username"
          }
        },
        "type": "object",
        "required": [
          "org_username",
          "org_password",
          "usr_username"
        ],
        "title": "DATData"
      },
      "DATRateCastData": {
        "properties": {
          "org_username": {
            "type": "string",
            "title": "Org Username"
          },
          "org_password": {
            "type": "string",
            "title": "Org Password"
          },
          "usr_username": {
            "type": "string",
            "title": "Usr Username"
          }
        },
        "type": "object",
        "required": [
          "org_username",
          "org_password",
          "usr_username"
        ],
        "title": "DATRateCastData"
      },
      "DATRyantransData": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "DATRyantransData"
      },
      "Dcl": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Dcl"
      },
      "Directtrans": {
        "properties": {
          "api_key": {
            "type": "string",
            "title": "Api Key"
          }
        },
        "type": "object",
        "required": [
          "api_key"
        ],
        "title": "Directtrans"
      },
      "DirecttransData": {
        "properties": {
          "api_key": {
            "type": "string",
            "title": "Api Key"
          }
        },
        "type": "object",
        "required": [
          "api_key"
        ],
        "title": "DirecttransData"
      },
      "E2Open": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails"
          }
        },
        "type": "object",
        "title": "E2Open"
      },
      "E2OpenSpot": {
        "properties": {
          "basis": {
            "$ref": "#/components/schemas/E2OpenSpotBasis"
          },
          "mode": {
            "$ref": "#/components/schemas/E2OpenSpotMode"
          }
        },
        "type": "object",
        "required": [
          "basis"
        ],
        "title": "E2OpenSpot"
      },
      "E2OpenSpotBasis": {
        "type": "string",
        "enum": [
          "CPM",
          "FLT"
        ],
        "title": "E2OpenSpotBasis",
        "description": "An enumeration."
      },
      "E2OpenSpotMode": {
        "type": "string",
        "enum": [
          "RPA",
          "API"
        ],
        "title": "E2OpenSpotMode",
        "description": "An enumeration."
      },
      "EmailNotification": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails"
          },
          "no_go": {
            "type": "boolean",
            "title": "No Go"
          }
        },
        "type": "object",
        "required": [
          "emails",
          "no_go"
        ],
        "title": "EmailNotification"
      },
      "Emerge": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "duns": {
            "type": "string",
            "title": "Duns"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "Emerge"
      },
      "Environment": {
        "type": "string",
        "enum": [
          "PROD",
          "QA",
          "TEST",
          "DEV"
        ],
        "title": "Environment",
        "description": "An enumeration."
      },
      "Event": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "type",
          "action",
          "summary"
        ],
        "title": "Event"
      },
      "EventType": {
        "type": "string",
        "enum": [
          "ADDITIONAL_STOPS",
          "AFTER_HOURS",
          "BASE_LINE_RATE",
          "BILL_AMOUNT_MARGIN",
          "CONDITIONED_LANE",
          "CROSS_BORDER",
          "DELIVERY_DATE",
          "DELIVERY_TIME",
          "DISTANCE_MARGIN",
          "DISTANCE_TIERS",
          "EQUIPMENT_TYPE",
          "EXTRA_CHARGES_AND_RESTRICTIONS",
          "FIXED_LANE",
          "FSC",
          "GREENSCREENS_CONFIDENCE_SCORE",
          "TRUCKSTOP_SCORES",
          "HOLIDAY",
          "INTERNATIONAL_SHIPMENT",
          "LANE_BY_STATE",
          "LANE_SCORES",
          "LEAD_TIME",
          "No Linehaul Rate Found",
          "LIVE_HANDLING",
          "MARGIN_CONTROL",
          "MILEAGE_CAP",
          "MILEAGE_THRESHOLD",
          "MINIMUM_RATE",
          "NEGATIVE_RATE",
          "PICKUP_DATE",
          "PICKUP_TIME",
          "QUOTES_AMOUNT_THRESHOLD",
          "QUOTES_AMOUNT_THRESHOLD_ZIP",
          "QUOTES_AMOUNT_THRESHOLD_CITY",
          "QUOTES_AMOUNT_THRESHOLD_STATE",
          "RE_BID_MINIMUM",
          "RESTRICTED_LANE",
          "Local/Round Trip",
          "SAME_DAY_CUTOFF",
          "SEASONALITY",
          "SPOT",
          "RTR",
          "TRAILER_TYPE",
          "TRANSIT_TIME_VARIANCE",
          "TRUCK_TO_LOAD_RATIO",
          "WEEKEND",
          "WEIGHT_TIERS",
          "TEMPERATURE",
          "E2OPEN_SPOT",
          "TRANSIT_TIME_DELIVERY",
          "OFFER"
        ],
        "title": "EventType",
        "description": "An enumeration."
      },
      "ExceptionInput": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "identifiers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Identifiers"
          },
          "load_id": {
            "type": "string",
            "title": "Load Id"
          },
          "customer": {
            "type": "string",
            "title": "Customer"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "platform": {
            "type": "string",
            "title": "Platform"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/ExtraReportFields"
          }
        },
        "type": "object",
        "required": [
          "summary"
        ],
        "title": "ExceptionInput"
      },
      "ExtraReportFields": {
        "properties": {
          "license": {
            "type": "string",
            "minLength": 1,
            "title": "License"
          },
          "ids_list": {
            "$ref": "#/components/schemas/IDsList"
          },
          "awarded_rate": {
            "type": "number",
            "title": "Awarded Rate"
          },
          "awarded_user": {
            "type": "string",
            "title": "Awarded User"
          },
          "e2open_offer_id": {
            "type": "integer",
            "title": "E2Open Offer Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ExtraReportFields"
      },
      "FreightwavesData": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "FreightwavesData"
      },
      "FromTo": {
        "properties": {
          "from_": {
            "type": "number",
            "minimum": 0.0,
            "title": "From "
          },
          "to": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "To"
          }
        },
        "type": "object",
        "required": [
          "from_",
          "to"
        ],
        "title": "FromTo"
      },
      "GreenscreensData": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "GreenscreensData"
      },
      "HTTPCustomValidationError": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "title": "Transaction ID"
          },
          "detail": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ValidationError"
                },
                "type": "array"
              },
              {
                "type": "string"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPCustomValidationError"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "type": "string",
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IDsList": {
        "properties": {
          "quote_id": {
            "type": "integer",
            "title": "Quote Id"
          },
          "quote_number": {
            "type": "string",
            "title": "Quote Number"
          },
          "reference_id": {
            "type": "string",
            "title": "Reference Id"
          },
          "quote_date": {
            "type": "string",
            "format": "date-time",
            "title": "Quote Date"
          }
        },
        "type": "object",
        "required": [
          "quote_id",
          "quote_number"
        ],
        "title": "IDsList"
      },
      "ISO31661Alfa3": {
        "type": "string",
        "enum": [
          "ABW",
          "AFG",
          "AGO",
          "AIA",
          "ALA",
          "ALB",
          "AND",
          "ARE",
          "ARG",
          "ARM",
          "ASM",
          "ATA",
          "ATF",
          "ATG",
          "AUS",
          "AUT",
          "AZE",
          "BDI",
          "BEL",
          "BEN",
          "BES",
          "BFA",
          "BGD",
          "BGR",
          "BHR",
          "BHS",
          "BIH",
          "BLM",
          "BLR",
          "BLZ",
          "BMU",
          "BOL",
          "BRA",
          "BRB",
          "BRN",
          "BTN",
          "BVT",
          "BWA",
          "CAF",
          "CAN",
          "CCK",
          "CHE",
          "CHL",
          "CHN",
          "CIV",
          "CMR",
          "COD",
          "COG",
          "COK",
          "COL",
          "COM",
          "CPV",
          "CRI",
          "CUB",
          "CUW",
          "CXR",
          "CYM",
          "CYP",
          "CZE",
          "DEU",
          "DJI",
          "DMA",
          "DNK",
          "DOM",
          "DZA",
          "ECU",
          "EGY",
          "ERI",
          "ESH",
          "ESP",
          "EST",
          "ETH",
          "FIN",
          "FJI",
          "FLK",
          "FRA",
          "FRO",
          "FSM",
          "GAB",
          "GBR",
          "GEO",
          "GGY",
          "GHA",
          "GIB",
          "GIN",
          "GLP",
          "GMB",
          "GNB",
          "GNQ",
          "GRC",
          "GRD",
          "GRL",
          "GTM",
          "GUF",
          "GUM",
          "GUY",
          "HKG",
          "HMD",
          "HND",
          "HRV",
          "HTI",
          "HUN",
          "IDN",
          "IMN",
          "IND",
          "IOT",
          "IRL",
          "IRN",
          "IRQ",
          "ISL",
          "ISR",
          "ITA",
          "JAM",
          "JEY",
          "JOR",
          "JPN",
          "KAZ",
          "KEN",
          "KGZ",
          "KHM",
          "KIR",
          "KNA",
          "KOR",
          "KWT",
          "LAO",
          "LBN",
          "LBR",
          "LBY",
          "LCA",
          "LIE",
          "LKA",
          "LSO",
          "LTU",
          "LUX",
          "LVA",
          "MAC",
          "MAF",
          "MAR",
          "MCO",
          "MDA",
          "MDG",
          "MDV",
          "MEX",
          "MHL",
          "MKD",
          "MLI",
          "MLT",
          "MMR",
          "MNE",
          "MNG",
          "MNP",
          "MOZ",
          "MRT",
          "MSR",
          "MTQ",
          "MUS",
          "MWI",
          "MYS",
          "MYT",
          "NAM",
          "NCL",
          "NER",
          "NFK",
          "NGA",
          "NIC",
          "NIU",
          "NLD",
          "NOR",
          "NPL",
          "NRU",
          "NZL",
          "OMN",
          "PAK",
          "PAN",
          "PCN",
          "PER",
          "PHL",
          "PLW",
          "PNG",
          "POL",
          "PRI",
          "PRK",
          "PRT",
          "PRY",
          "PSE",
          "PYF",
          "QAT",
          "REU",
          "ROU",
          "RUS",
          "RWA",
          "SAU",
          "SDN",
          "SEN",
          "SGP",
          "SGS",
          "SHN",
          "SJM",
          "SLB",
          "SLE",
          "SLV",
          "SMR",
          "SOM",
          "SPM",
          "SRB",
          "SSD",
          "STP",
          "SUR",
          "SVK",
          "SVN",
          "SWE",
          "SWZ",
          "SXM",
          "SYC",
          "SYR",
          "TCA",
          "TCD",
          "TGO",
          "THA",
          "TJK",
          "TKL",
          "TKM",
          "TLS",
          "TON",
          "TTO",
          "TUN",
          "TUR",
          "TUV",
          "TWN",
          "TZA",
          "UGA",
          "UKR",
          "UMI",
          "URY",
          "USA",
          "UZB",
          "VAT",
          "VCT",
          "VEN",
          "VGB",
          "VIR",
          "VNM",
          "VUT",
          "WLF",
          "WSM",
          "YEM",
          "ZAF",
          "ZMB",
          "ZWE"
        ],
        "title": "ISO31661Alfa3",
        "description": "Format ISO 3166-1 Alfa 3\nCode list: https://datahub.io/core/country-codes"
      },
      "ImportedUser": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_oid": {
            "type": "integer",
            "title": "User Oid",
            "description": "User OID; Company ID for Tabi 2"
          },
          "c_oid": {
            "type": "integer",
            "title": "C Oid",
            "description": "Parent Customer OID; Default Customer ID for Tabi 2"
          },
          "cc_oid": {
            "type": "integer",
            "title": "Cc Oid",
            "description": "My Customer's Customer OID; Default Customer ID for Tabi 2"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array",
            "title": "Roles"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "roles"
        ],
        "title": "ImportedUser"
      },
      "ImportedUsers": {
        "properties": {
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          },
          "created": {
            "items": {
              "$ref": "#/components/schemas/ImportedUser"
            },
            "type": "array",
            "title": "Created",
            "default": []
          }
        },
        "type": "object",
        "title": "ImportedUsers"
      },
      "InputTID": {
        "properties": {
          "api": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APIEnum"
              },
              {
                "type": "string"
              }
            ],
            "title": "Api",
            "default": "SPOT"
          },
          "platform": {
            "type": "string",
            "title": "Platform"
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username"
          },
          "extra_report_fields": {
            "$ref": "#/components/schemas/ExtraReportFields"
          },
          "require_linehaul": {
            "type": "boolean",
            "title": "Require Linehaul",
            "description": "When the value of \"True\" is set, the validation process will check whether the calculated output contains a LineHaul rate. If the LineHaul rate is not present, the validation will fail.",
            "default": false
          },
          "miles": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles",
            "description": "Miles from origin to destination, just in case you want to use your own, instead of the ones you got from the rate engine"
          },
          "miles_with_stops": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles With Stops",
            "description": "Miles from origin, to stop 1, from, to stop 2, ..., to destination"
          },
          "trailer_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Trailer"
              },
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Trailer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Trailer Type"
          },
          "origin_city": {
            "type": "string",
            "minLength": 1,
            "title": "Origin City"
          },
          "origin_state": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z]{2,3}$",
            "title": "Origin State"
          },
          "origin_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "default": "USA",
            "example": "USA"
          },
          "delivery_city": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery City"
          },
          "delivery_state": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z]{2,3}$",
            "title": "Delivery State"
          },
          "delivery_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "default": "USA",
            "example": "USA"
          },
          "pickup_date": {
            "type": "string",
            "format": "date",
            "title": "Pickup Date",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          },
          "delivery_date": {
            "type": "string",
            "format": "date",
            "title": "Delivery Date",
            "description": "ISO 8601 format",
            "example": "2008-09-15"
          },
          "pickup_hour": {
            "type": "string",
            "format": "time",
            "title": "Pickup Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "delivery_hour": {
            "type": "string",
            "format": "time",
            "title": "Delivery Hour",
            "description": "ISO 8601 format",
            "example": "14:23"
          },
          "weight": {
            "type": "integer",
            "title": "Weight"
          },
          "load_id": {
            "type": "string",
            "minLength": 1,
            "title": "Load Id"
          },
          "origin_location": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Location"
          },
          "delivery_location": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Location"
          },
          "accessorials": {
            "items": {
              "$ref": "#/components/schemas/Accessorial"
            },
            "type": "array"
          },
          "extra_charges_and_restrictions": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Item"
                },
                {
                  "$ref": "#/components/schemas/ItemV7"
                },
                {
                  "$ref": "#/components/schemas/ItemV8"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Extra Charges And Restrictions"
          },
          "commodity": {
            "type": "string",
            "minLength": 1,
            "title": "Commodity"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "minLength": 1
              }
            ],
            "title": "Temperature"
          },
          "origin_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Origin Zipcode"
          },
          "delivery_zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Delivery Zipcode"
          },
          "stop_cities": {
            "items": {
              "$ref": "#/components/schemas/StopCityV2"
            },
            "type": "array",
            "title": "Stop Cities"
          },
          "stops_quantity": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Stops Quantity",
            "default": 0
          },
          "extra_data": {
            "title": "Extra Data"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id"
          },
          "fuel_price_per_mile": {
            "type": "number",
            "title": "Fuel Price Per Mile"
          },
          "identifiers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Identifiers"
          }
        },
        "type": "object",
        "required": [
          "trailer_type",
          "origin_city",
          "origin_state",
          "delivery_city",
          "delivery_state"
        ],
        "title": "InputTID"
      },
      "Item": {
        "type": "string",
        "enum": [
          "HAZMAT"
        ],
        "title": "Item",
        "description": "An enumeration."
      },
      "ItemV7": {
        "type": "string",
        "enum": [
          "HAZMAT",
          "TANKER_ENDORSEMENT",
          "APPOINTMENT_REQUIRED",
          "PALLET_EXCHANGE",
          "MODE",
          "SPECIAL_HANDLING",
          "INSURANCE",
          "OVER_DIMENSIONED",
          "TARPS",
          "RAMPS",
          "LOAD",
          "UNLOAD",
          "DROP_TRAILER"
        ],
        "title": "ItemV7",
        "description": "An enumeration."
      },
      "ItemV8": {
        "type": "string",
        "enum": [
          "HAZMAT",
          "TANKER_ENDORSEMENT",
          "APPOINTMENT_REQUIRED",
          "PALLET_EXCHANGE",
          "SPECIAL_HANDLING",
          "INSURANCE",
          "OVER_DIMENSIONED",
          "TARPS",
          "RAMPS",
          "LOAD",
          "UNLOAD",
          "DROP_TRAILER",
          "OTHER"
        ],
        "title": "ItemV8",
        "description": "An enumeration."
      },
      "LoadModeName": {
        "properties": {
          "van": {
            "type": "string",
            "title": "Van"
          },
          "reefer": {
            "type": "string",
            "title": "Reefer"
          },
          "flatbed": {
            "type": "string",
            "title": "Flatbed"
          },
          "specialized": {
            "type": "string",
            "title": "Specialized"
          }
        },
        "type": "object",
        "title": "LoadModeName"
      },
      "Loaddex": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "Loaddex"
      },
      "McleodData": {
        "properties": {
          "x_api_key": {
            "type": "string",
            "title": "X Api Key"
          }
        },
        "type": "object",
        "required": [
          "x_api_key"
        ],
        "title": "McleodData"
      },
      "Metadata": {
        "properties": {
          "emerge": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Emerge"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Emerge"
              }
            ],
            "title": "Emerge"
          },
          "blueyonder": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BlueYonder"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/BlueYonder"
              }
            ],
            "title": "Blueyonder"
          },
          "transplace": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Transplace"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Transplace"
              }
            ],
            "title": "Transplace"
          },
          "revenova": {
            "$ref": "#/components/schemas/Revenova"
          },
          "arcbest": {
            "$ref": "#/components/schemas/ArcBest"
          },
          "loaddex": {
            "$ref": "#/components/schemas/Loaddex"
          },
          "directtrans": {
            "$ref": "#/components/schemas/Directtrans"
          },
          "smart_tender": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SmartTender"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/SmartTender"
              }
            ],
            "title": "Smart Tender"
          },
          "archer": {
            "$ref": "#/components/schemas/Archer"
          },
          "truckstop_rate_insights": {
            "$ref": "#/components/schemas/TruckstopRateInsights"
          },
          "trinity": {
            "$ref": "#/components/schemas/Trinity"
          }
        },
        "type": "object",
        "title": "Metadata"
      },
      "MultipleEnginesAPIData": {
        "properties": {
          "dat": {
            "$ref": "#/components/schemas/DATData"
          },
          "dat_rate_cast": {
            "$ref": "#/components/schemas/DATRateCastData"
          },
          "datryantrans": {
            "$ref": "#/components/schemas/DATRyantransData"
          },
          "c4": {
            "$ref": "#/components/schemas/C4Data"
          },
          "greenscreens": {
            "$ref": "#/components/schemas/GreenscreensData"
          },
          "truckstop": {
            "$ref": "#/components/schemas/TruckstopData"
          },
          "freightwaves": {
            "$ref": "#/components/schemas/FreightwavesData"
          },
          "mcleod": {
            "$ref": "#/components/schemas/McleodData"
          },
          "parade": {
            "$ref": "#/components/schemas/ParadeData"
          },
          "revenova": {
            "$ref": "#/components/schemas/Revenova"
          },
          "arcbest": {
            "$ref": "#/components/schemas/ArcBest"
          },
          "loaddex": {
            "$ref": "#/components/schemas/Loaddex"
          },
          "directtrans": {
            "$ref": "#/components/schemas/Directtrans"
          },
          "archer": {
            "$ref": "#/components/schemas/Archer"
          },
          "trinity": {
            "$ref": "#/components/schemas/Trinity"
          },
          "emerge": {
            "$ref": "#/components/schemas/Emerge"
          },
          "blueyonder": {
            "$ref": "#/components/schemas/BlueYonder"
          },
          "transplace": {
            "$ref": "#/components/schemas/Transplace"
          },
          "smart_tender": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SmartTender"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/SmartTender"
              }
            ],
            "title": "Smart Tender"
          }
        },
        "type": "object",
        "title": "MultipleEnginesAPIData"
      },
      "Navisphere": {
        "properties": {
          "api_connection": {
            "$ref": "#/components/schemas/ApiConnection"
          }
        },
        "type": "object",
        "required": [
          "api_connection"
        ],
        "title": "Navisphere"
      },
      "OriginDeliveryRate": {
        "properties": {
          "origin": {
            "type": "number",
            "title": "Origin",
            "default": 0
          },
          "delivery": {
            "type": "number",
            "title": "Delivery",
            "default": 0
          }
        },
        "type": "object",
        "title": "OriginDeliveryRate"
      },
      "Output": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id",
            "description": "Unique transaction identifier, transversal to all the APIs from which the request comes"
          },
          "fail": {
            "type": "boolean",
            "title": "Fail",
            "description": "Return True if any NO_GO events were found",
            "default": false
          },
          "original_miles": {
            "type": "number",
            "title": "Original Miles"
          },
          "original_miles_with_stops": {
            "type": "number",
            "title": "Original Miles With Stops"
          },
          "original_base_line_rate": {
            "type": "number",
            "title": "Original Base Line Rate"
          },
          "original_base_line_with_stops_rate": {
            "type": "number",
            "title": "Original Base Line With Stops Rate"
          },
          "rate_board_1": {
            "type": "number",
            "title": "Rate Board 1",
            "description": "DAT"
          },
          "rate_board_2": {
            "type": "number",
            "title": "Rate Board 2",
            "description": "TRUCKSTOP"
          },
          "rate_board_3": {
            "type": "number",
            "title": "Rate Board 3",
            "description": "GREENSCREENS"
          },
          "rate_board_4": {
            "type": "number",
            "title": "Rate Board 4",
            "description": "C4"
          },
          "rate_board_5": {
            "type": "number",
            "title": "Rate Board 5",
            "description": "MARKET INSIGHT"
          },
          "rate_board_6": {
            "type": "number",
            "title": "Rate Board 6",
            "description": "SLLR"
          },
          "rate_board_7": {
            "type": "number",
            "title": "Rate Board 7",
            "description": "REVENOVA"
          },
          "rate_board_8": {
            "type": "number",
            "title": "Rate Board 8",
            "description": "LOADDEX"
          },
          "rate_board_9": {
            "type": "number",
            "title": "Rate Board 9",
            "description": "AS/400"
          },
          "rate_board_10": {
            "type": "number",
            "title": "Rate Board 10",
            "description": "FREIGHTWAVES"
          },
          "rate_board_11": {
            "type": "number",
            "title": "Rate Board 11",
            "description": "123LOADBOARD"
          },
          "rate_board_12": {
            "type": "number",
            "title": "Rate Board 12",
            "description": "MCLEOD"
          },
          "rate_board_13": {
            "type": "number",
            "title": "Rate Board 13",
            "description": "PARADE"
          },
          "rate_board_14": {
            "type": "number",
            "title": "Rate Board 14",
            "description": "ARCBEST"
          },
          "rate_board_15": {
            "type": "number",
            "title": "Rate Board 15",
            "description": "DAT RATE CAST"
          },
          "rate_board_16": {
            "type": "number",
            "title": "Rate Board 16",
            "description": "ARCHER"
          },
          "rate_board_17": {
            "type": "number",
            "title": "Rate Board 17",
            "description": "DIRECT TRANS"
          },
          "rate_board_18": {
            "type": "number",
            "title": "Rate Board 18",
            "description": "FIXED PRICE"
          },
          "rate_board_19": {
            "type": "number",
            "title": "Rate Board 19",
            "description": "TRINITY"
          },
          "rate_board_20": {
            "type": "number",
            "title": "Rate Board 20",
            "description": "DIRECT CONNECT LOGISTIX"
          },
          "fixed_price_lane": {
            "type": "number",
            "title": "Fixed Price Lane",
            "default": 0
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "type": "array",
            "title": "Events",
            "default": []
          },
          "exception_report_oid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Exception Report Oid"
          },
          "report_oid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Report Oid"
          },
          "distance_margin": {
            "type": "number",
            "title": "Distance Margin",
            "default": 0
          },
          "lead_time": {
            "type": "number",
            "title": "Lead Time",
            "default": 0
          },
          "weekend": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/OriginDeliveryRate"
              }
            ],
            "title": "Weekend",
            "default": 0
          },
          "holiday": {
            "type": "number",
            "title": "Holiday",
            "default": 0
          },
          "after_hours": {
            "type": "number",
            "title": "After Hours",
            "default": 0
          },
          "season": {
            "type": "number",
            "title": "Season",
            "default": 0
          },
          "transit_time": {
            "type": "number",
            "title": "Transit Time",
            "default": 0
          },
          "transit_time_delivery": {
            "type": "number",
            "title": "Transit Time Delivery",
            "default": 0
          },
          "weight_tier": {
            "type": "number",
            "title": "Weight Tier",
            "default": 0
          },
          "delivery_time": {
            "type": "number",
            "title": "Delivery Time",
            "default": 0
          },
          "pickup_time": {
            "type": "number",
            "title": "Pickup Time",
            "default": 0
          },
          "greenscreens_confidence_score": {
            "type": "number",
            "title": "Greenscreens Confidence Score",
            "default": 0
          },
          "truckstop_score": {
            "type": "number",
            "title": "Truckstop Score",
            "default": 0
          },
          "origin_conditioned": {
            "type": "number",
            "title": "Origin Conditioned",
            "default": 0
          },
          "origin_state_conditioned": {
            "type": "number",
            "title": "Origin State Conditioned",
            "default": 0
          },
          "origin_zip_conditioned": {
            "type": "number",
            "title": "Origin Zip Conditioned",
            "default": 0
          },
          "destination_conditioned": {
            "type": "number",
            "title": "Destination Conditioned",
            "default": 0
          },
          "destination_state_conditioned": {
            "type": "number",
            "title": "Destination State Conditioned",
            "default": 0
          },
          "destination_zip_conditioned": {
            "type": "number",
            "title": "Destination Zip Conditioned",
            "default": 0
          },
          "lane_conditioned": {
            "type": "number",
            "title": "Lane Conditioned",
            "default": 0
          },
          "quote_amount_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/OriginDeliveryRate"
              }
            ],
            "title": "Quote Amount Threshold",
            "default": 0
          },
          "quote_amount_threshold_zip": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_city": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_state": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "conditioned_locations_pickup": {
            "type": "number",
            "title": "Conditioned Locations Pickup",
            "default": 0
          },
          "conditioned_locations_delivery": {
            "type": "number",
            "title": "Conditioned Locations Delivery",
            "default": 0
          },
          "conditioned_lanes_by_state": {
            "type": "number",
            "title": "Conditioned Lanes By State",
            "default": 0
          },
          "accessorials": {
            "type": "number",
            "title": "Accessorials",
            "default": 0
          },
          "extra_charges_and_restrictions": {
            "type": "number",
            "title": "Extra Charges And Restrictions",
            "default": 0
          },
          "lane_scores": {
            "type": "number",
            "title": "Lane Scores",
            "default": 0
          },
          "same_day_cutoff": {
            "type": "number",
            "title": "Same Day Cutoff",
            "default": 0
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0
          },
          "stops": {
            "type": "number",
            "title": "Stops",
            "default": 0
          },
          "stops_quantity": {
            "type": "number",
            "title": "Stops Quantity",
            "default": 0
          },
          "truck_to_load_ratio_origin_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_destination_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_origin": {
            "type": "number",
            "title": "Truck To Load Ratio Origin",
            "default": 0
          },
          "truck_to_load_ratio_destination": {
            "type": "number",
            "title": "Truck To Load Ratio Destination",
            "default": 0
          },
          "cross_border": {
            "type": "number",
            "title": "Cross Border",
            "default": 0
          },
          "cross_border_origin_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "Cross Border Origin Country",
            "description": "country detected using 'origin_country' or 'origin_state'"
          },
          "cross_border_delivery_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "Cross Border Delivery Country",
            "description": "country detected using 'delivery_country' or 'delivery_state'"
          },
          "international_shipment": {
            "type": "number",
            "title": "International Shipment",
            "default": 0
          },
          "international_shipment_origin_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "International Shipment Origin Country",
            "description": "country detected using 'origin_country' or 'origin_state'"
          },
          "international_shipment_delivery_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "International Shipment Delivery Country",
            "description": "country detected using 'delivery_country' or 'delivery_state'"
          },
          "total_rate": {
            "type": "number",
            "title": "Total Rate",
            "description": "Calculated rate without subtracting the fuel(fsc)",
            "default": 0
          },
          "fsc": {
            "type": "number",
            "title": "Fsc",
            "default": 0
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Equal to \"total_rate - fsc\"",
            "default": 0
          },
          "margin_final": {
            "type": "number",
            "title": "Margin Final",
            "default": 0
          },
          "desired_margin": {
            "type": "number",
            "title": "Desired Margin",
            "description": "Aka profit",
            "default": 0
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post",
            "default": false
          },
          "re_bid_minimum_total": {
            "type": "number",
            "title": "Re Bid Minimum Total",
            "description": "When Re-bid minimum is enabled in TABi Connect, this will be filled with the total of the re-bid, as long as it does not contain any NO_GO event",
            "default": 0
          },
          "re_bid_minimum_output": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputBase"
              }
            ],
            "title": "Re Bid Minimum Output",
            "description": "When Re-bid minimum is enabled in TABi Connect, this will be filled with their quote output, including NO_GO events"
          }
        },
        "type": "object",
        "title": "Output",
        "description": "This is used for resources that return data to Customer"
      },
      "OutputBase": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "maxLength": 53,
            "minLength": 53,
            "title": "Transaction Id",
            "description": "Unique transaction identifier, transversal to all the APIs from which the request comes"
          },
          "fail": {
            "type": "boolean",
            "title": "Fail",
            "description": "Return True if any NO_GO events were found",
            "default": false
          },
          "original_miles": {
            "type": "number",
            "title": "Original Miles"
          },
          "original_miles_with_stops": {
            "type": "number",
            "title": "Original Miles With Stops"
          },
          "original_base_line_rate": {
            "type": "number",
            "title": "Original Base Line Rate"
          },
          "original_base_line_with_stops_rate": {
            "type": "number",
            "title": "Original Base Line With Stops Rate"
          },
          "rate_board_1": {
            "type": "number",
            "title": "Rate Board 1",
            "description": "DAT"
          },
          "rate_board_2": {
            "type": "number",
            "title": "Rate Board 2",
            "description": "TRUCKSTOP"
          },
          "rate_board_3": {
            "type": "number",
            "title": "Rate Board 3",
            "description": "GREENSCREENS"
          },
          "rate_board_4": {
            "type": "number",
            "title": "Rate Board 4",
            "description": "C4"
          },
          "rate_board_5": {
            "type": "number",
            "title": "Rate Board 5",
            "description": "MARKET INSIGHT"
          },
          "rate_board_6": {
            "type": "number",
            "title": "Rate Board 6",
            "description": "SLLR"
          },
          "rate_board_7": {
            "type": "number",
            "title": "Rate Board 7",
            "description": "REVENOVA"
          },
          "rate_board_8": {
            "type": "number",
            "title": "Rate Board 8",
            "description": "LOADDEX"
          },
          "rate_board_9": {
            "type": "number",
            "title": "Rate Board 9",
            "description": "AS/400"
          },
          "rate_board_10": {
            "type": "number",
            "title": "Rate Board 10",
            "description": "FREIGHTWAVES"
          },
          "rate_board_11": {
            "type": "number",
            "title": "Rate Board 11",
            "description": "123LOADBOARD"
          },
          "rate_board_12": {
            "type": "number",
            "title": "Rate Board 12",
            "description": "MCLEOD"
          },
          "rate_board_13": {
            "type": "number",
            "title": "Rate Board 13",
            "description": "PARADE"
          },
          "rate_board_14": {
            "type": "number",
            "title": "Rate Board 14",
            "description": "ARCBEST"
          },
          "rate_board_15": {
            "type": "number",
            "title": "Rate Board 15",
            "description": "DAT RATE CAST"
          },
          "rate_board_16": {
            "type": "number",
            "title": "Rate Board 16",
            "description": "ARCHER"
          },
          "rate_board_17": {
            "type": "number",
            "title": "Rate Board 17",
            "description": "DIRECT TRANS"
          },
          "rate_board_18": {
            "type": "number",
            "title": "Rate Board 18",
            "description": "FIXED PRICE"
          },
          "rate_board_19": {
            "type": "number",
            "title": "Rate Board 19",
            "description": "TRINITY"
          },
          "rate_board_20": {
            "type": "number",
            "title": "Rate Board 20",
            "description": "DIRECT CONNECT LOGISTIX"
          },
          "fixed_price_lane": {
            "type": "number",
            "title": "Fixed Price Lane",
            "default": 0
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "type": "array",
            "title": "Events",
            "default": []
          },
          "exception_report_oid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Exception Report Oid"
          },
          "report_oid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Report Oid"
          },
          "distance_margin": {
            "type": "number",
            "title": "Distance Margin",
            "default": 0
          },
          "lead_time": {
            "type": "number",
            "title": "Lead Time",
            "default": 0
          },
          "weekend": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/OriginDeliveryRate"
              }
            ],
            "title": "Weekend",
            "default": 0
          },
          "holiday": {
            "type": "number",
            "title": "Holiday",
            "default": 0
          },
          "after_hours": {
            "type": "number",
            "title": "After Hours",
            "default": 0
          },
          "season": {
            "type": "number",
            "title": "Season",
            "default": 0
          },
          "transit_time": {
            "type": "number",
            "title": "Transit Time",
            "default": 0
          },
          "transit_time_delivery": {
            "type": "number",
            "title": "Transit Time Delivery",
            "default": 0
          },
          "weight_tier": {
            "type": "number",
            "title": "Weight Tier",
            "default": 0
          },
          "delivery_time": {
            "type": "number",
            "title": "Delivery Time",
            "default": 0
          },
          "pickup_time": {
            "type": "number",
            "title": "Pickup Time",
            "default": 0
          },
          "greenscreens_confidence_score": {
            "type": "number",
            "title": "Greenscreens Confidence Score",
            "default": 0
          },
          "truckstop_score": {
            "type": "number",
            "title": "Truckstop Score",
            "default": 0
          },
          "origin_conditioned": {
            "type": "number",
            "title": "Origin Conditioned",
            "default": 0
          },
          "origin_state_conditioned": {
            "type": "number",
            "title": "Origin State Conditioned",
            "default": 0
          },
          "origin_zip_conditioned": {
            "type": "number",
            "title": "Origin Zip Conditioned",
            "default": 0
          },
          "destination_conditioned": {
            "type": "number",
            "title": "Destination Conditioned",
            "default": 0
          },
          "destination_state_conditioned": {
            "type": "number",
            "title": "Destination State Conditioned",
            "default": 0
          },
          "destination_zip_conditioned": {
            "type": "number",
            "title": "Destination Zip Conditioned",
            "default": 0
          },
          "lane_conditioned": {
            "type": "number",
            "title": "Lane Conditioned",
            "default": 0
          },
          "quote_amount_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/OriginDeliveryRate"
              }
            ],
            "title": "Quote Amount Threshold",
            "default": 0
          },
          "quote_amount_threshold_zip": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_city": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "quote_amount_threshold_state": {
            "$ref": "#/components/schemas/OriginDeliveryRate"
          },
          "conditioned_locations_pickup": {
            "type": "number",
            "title": "Conditioned Locations Pickup",
            "default": 0
          },
          "conditioned_locations_delivery": {
            "type": "number",
            "title": "Conditioned Locations Delivery",
            "default": 0
          },
          "conditioned_lanes_by_state": {
            "type": "number",
            "title": "Conditioned Lanes By State",
            "default": 0
          },
          "accessorials": {
            "type": "number",
            "title": "Accessorials",
            "default": 0
          },
          "extra_charges_and_restrictions": {
            "type": "number",
            "title": "Extra Charges And Restrictions",
            "default": 0
          },
          "lane_scores": {
            "type": "number",
            "title": "Lane Scores",
            "default": 0
          },
          "same_day_cutoff": {
            "type": "number",
            "title": "Same Day Cutoff",
            "default": 0
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0
          },
          "stops": {
            "type": "number",
            "title": "Stops",
            "default": 0
          },
          "stops_quantity": {
            "type": "number",
            "title": "Stops Quantity",
            "default": 0
          },
          "truck_to_load_ratio_origin_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_destination_from_to": {
            "$ref": "#/components/schemas/FromTo"
          },
          "truck_to_load_ratio_origin": {
            "type": "number",
            "title": "Truck To Load Ratio Origin",
            "default": 0
          },
          "truck_to_load_ratio_destination": {
            "type": "number",
            "title": "Truck To Load Ratio Destination",
            "default": 0
          },
          "cross_border": {
            "type": "number",
            "title": "Cross Border",
            "default": 0
          },
          "cross_border_origin_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "Cross Border Origin Country",
            "description": "country detected using 'origin_country' or 'origin_state'"
          },
          "cross_border_delivery_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "Cross Border Delivery Country",
            "description": "country detected using 'delivery_country' or 'delivery_state'"
          },
          "international_shipment": {
            "type": "number",
            "title": "International Shipment",
            "default": 0
          },
          "international_shipment_origin_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "International Shipment Origin Country",
            "description": "country detected using 'origin_country' or 'origin_state'"
          },
          "international_shipment_delivery_country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "International Shipment Delivery Country",
            "description": "country detected using 'delivery_country' or 'delivery_state'"
          },
          "total_rate": {
            "type": "number",
            "title": "Total Rate",
            "description": "Calculated rate without subtracting the fuel(fsc)",
            "default": 0
          },
          "fsc": {
            "type": "number",
            "title": "Fsc",
            "default": 0
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Equal to \"total_rate - fsc\"",
            "default": 0
          },
          "margin_final": {
            "type": "number",
            "title": "Margin Final",
            "default": 0
          },
          "desired_margin": {
            "type": "number",
            "title": "Desired Margin",
            "description": "Aka profit",
            "default": 0
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post",
            "default": false
          }
        },
        "type": "object",
        "title": "OutputBase"
      },
      "OutputToken": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token"
        ],
        "title": "OutputToken"
      },
      "ParadeData": {
        "properties": {
          "api_key": {
            "type": "string",
            "title": "Api Key"
          }
        },
        "type": "object",
        "required": [
          "api_key"
        ],
        "title": "ParadeData"
      },
      "Platforms": {
        "properties": {
          "e2open_spot": {
            "$ref": "#/components/schemas/E2OpenSpot"
          },
          "blueyonder_api": {
            "$ref": "#/components/schemas/Blueyonder"
          },
          "navisphere_api": {
            "$ref": "#/components/schemas/Navisphere"
          }
        },
        "type": "object",
        "title": "Platforms"
      },
      "PrometeoCompany": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_parade_company": {
            "type": "boolean",
            "title": "Is Parade Company"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "scacs": {
            "items": {
              "$ref": "#/components/schemas/PrometeoSCAC"
            },
            "type": "array",
            "title": "Scacs"
          },
          "additional_data": {
            "$ref": "#/components/schemas/PrometeoCompanyAdditionalData"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "is_active",
          "is_parade_company",
          "deleted"
        ],
        "title": "PrometeoCompany"
      },
      "PrometeoCompanyAdditionalData": {
        "properties": {
          "e2open_spot_email": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "E2Open Spot Email"
          },
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "platforms": {
            "$ref": "#/components/schemas/CompanyPlatforms"
          }
        },
        "type": "object",
        "title": "PrometeoCompanyAdditionalData"
      },
      "PrometeoCustomer": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "company": {
            "$ref": "#/components/schemas/PrometeoCompany"
          },
          "contact_name": {
            "type": "string",
            "title": "Contact Name"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "duns": {
            "type": "string",
            "title": "Duns"
          },
          "additional_data": {
            "$ref": "#/components/schemas/PrometeoCustomerAdditionalData"
          },
          "third_party": {
            "$ref": "#/components/schemas/ThirdParty"
          },
          "parade": {
            "type": "boolean",
            "title": "Parade",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default"
          },
          "bid_post": {
            "type": "boolean",
            "title": "Bid Post"
          },
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "companyname": {
            "type": "string",
            "title": "Companyname"
          }
        },
        "type": "object",
        "required": [
          "id",
          "company_id",
          "name",
          "is_active",
          "deleted",
          "is_default",
          "bid_post",
          "oid",
          "companyname"
        ],
        "title": "PrometeoCustomer"
      },
      "PrometeoCustomerAdditionalData": {
        "properties": {
          "email_notification": {
            "$ref": "#/components/schemas/EmailNotification"
          },
          "third_party": {
            "type": "object",
            "title": "Third Party"
          },
          "equipment_type_keywords": {
            "items": {},
            "type": "array",
            "title": "Equipment Type Keywords"
          },
          "loaddex_data": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__loaddex_data__LoaddexData"
          },
          "archer_data": {
            "$ref": "#/components/schemas/schemas__services__tabi_db__prometeo__archer_data__ArcherData"
          },
          "scac": {
            "type": "string",
            "title": "Scac"
          },
          "platforms": {
            "$ref": "#/components/schemas/Platforms"
          },
          "awarded_data": {
            "$ref": "#/components/schemas/AwardedData"
          },
          "identifiers": {
            "items": {},
            "type": "array",
            "title": "Identifiers"
          }
        },
        "type": "object",
        "title": "PrometeoCustomerAdditionalData"
      },
      "PrometeoSCAC": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "scac_code": {
            "type": "string",
            "title": "Scac Code"
          },
          "scac_name": {
            "type": "string",
            "title": "Scac Name"
          },
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "scac_code",
          "scac_name",
          "company_id"
        ],
        "title": "PrometeoSCAC"
      },
      "RateResponse": {
        "properties": {
          "mileage": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Mileage"
          },
          "high_rate": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "High Rate"
          },
          "average_rate": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Average Rate"
          },
          "low_rate": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Low Rate"
          },
          "raw_request": {
            "type": "string",
            "title": "Raw Request"
          },
          "raw_response": {
            "type": "string",
            "title": "Raw Response"
          },
          "dashboard_url": {
            "type": "string",
            "minLength": 1,
            "title": "Dashboard Url"
          },
          "endpoint": {
            "type": "string",
            "title": "Endpoint"
          },
          "lane_score": {
            "type": "integer",
            "title": "Lane Score"
          },
          "greenscreens_confidence_score": {
            "type": "number",
            "title": "Greenscreens Confidence Score"
          },
          "truckstop_score": {
            "type": "number",
            "title": "Truckstop Score"
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration"
          },
          "archer_response_id": {
            "type": "integer",
            "title": "Archer Response Id"
          }
        },
        "type": "object",
        "required": [
          "mileage",
          "high_rate",
          "average_rate",
          "low_rate",
          "raw_request",
          "raw_response"
        ],
        "title": "RateResponse"
      },
      "Revenova": {
        "properties": {
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "mode_id": {
            "type": "string",
            "title": "Mode Id"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "username",
          "password",
          "mode_id"
        ],
        "title": "Revenova"
      },
      "RevenovaRateEngine": {
        "type": "string",
        "enum": [
          "DAT",
          "TRUCKSTOP",
          "FREIGHTWAVES"
        ],
        "title": "RevenovaRateEngine",
        "description": "An enumeration."
      },
      "Role": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "role": {
            "$ref": "#/components/schemas/RoleValue"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "role"
        ],
        "title": "Role"
      },
      "RoleValue": {
        "type": "string",
        "enum": [
          "INTERNAL_ADMIN",
          "COMPANY_ID",
          "QUOTING_CALCULATION",
          "DUNS_QUOTING_CALCULATION",
          "CUSTOMER_QUOTING_CALCULATION",
          "RPA_CALCULATION",
          "PROMETEO_CALCULATION",
          "OUTLOOK_CALCULATION",
          "E2OPEN_CALCULATION",
          "HOME_DEPOT"
        ],
        "title": "RoleValue",
        "description": "An enumeration."
      },
      "SMMetadata": {
        "properties": {
          "company_id": {
            "type": "integer",
            "title": "Company Id"
          },
          "default_customer_id": {
            "type": "integer",
            "title": "Default Customer Id"
          },
          "blueyonder": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BlueYonder"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/BlueYonder"
              }
            ],
            "title": "Blueyonder"
          },
          "emerge": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Emerge"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Emerge"
              }
            ],
            "title": "Emerge"
          },
          "smart_tender": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SmartTender"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/SmartTender"
              }
            ],
            "title": "Smart Tender"
          },
          "transplace": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Transplace"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Transplace"
              }
            ],
            "title": "Transplace"
          },
          "dat": {
            "$ref": "#/components/schemas/DATData"
          },
          "c4": {
            "$ref": "#/components/schemas/C4Data"
          },
          "greenscreens": {
            "$ref": "#/components/schemas/GreenscreensData"
          },
          "truckstop": {
            "$ref": "#/components/schemas/TruckstopData"
          },
          "freightwaves": {
            "$ref": "#/components/schemas/FreightwavesData"
          },
          "mcleod": {
            "$ref": "#/components/schemas/McleodData"
          },
          "parade": {
            "$ref": "#/components/schemas/ParadeData"
          },
          "revenova": {
            "$ref": "#/components/schemas/Revenova"
          },
          "arcbest": {
            "$ref": "#/components/schemas/ArcBest"
          },
          "dat_rate_cast": {
            "$ref": "#/components/schemas/DATRateCastData"
          },
          "loaddex": {
            "$ref": "#/components/schemas/Loaddex"
          },
          "directtrans": {
            "$ref": "#/components/schemas/Directtrans"
          },
          "archer": {
            "$ref": "#/components/schemas/Archer"
          },
          "truckstop_rate_insights": {
            "$ref": "#/components/schemas/TruckstopRateInsights"
          },
          "trinity": {
            "$ref": "#/components/schemas/Trinity"
          },
          "dat_ryan_trans": {
            "$ref": "#/components/schemas/DATRyantransData"
          },
          "dcl": {
            "$ref": "#/components/schemas/Dcl"
          }
        },
        "type": "object",
        "required": [
          "company_id",
          "default_customer_id"
        ],
        "title": "SMMetadata",
        "description": "The Secret Manager Metadata for the company id"
      },
      "ServiceName": {
        "type": "string",
        "enum": [
          "C4",
          "DAT",
          "DATRYANTRANS",
          "TRUCKSTOP",
          "TRUCKSTOP_RATE_INSIGHTS",
          "GREENSCREENS",
          "FREIGHTWAVES",
          "MCLEOD",
          "PARADE",
          "DATRATECAST",
          "DIRECTTRANS"
        ],
        "title": "ServiceName",
        "description": "TODO: OLD API DATA METHOD, NOT USE"
      },
      "SmartTender": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_username": {
            "type": "string",
            "title": "Client Username"
          },
          "client_password": {
            "type": "string",
            "title": "Client Password"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "identifier": {
            "type": "string",
            "title": "Identifier"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_username",
          "client_password"
        ],
        "title": "SmartTender"
      },
      "Status": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "version",
          "environment"
        ],
        "title": "Status"
      },
      "StopCityV2": {
        "properties": {
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO31661Alfa3"
              }
            ],
            "example": "USA"
          },
          "city": {
            "type": "string",
            "minLength": 1,
            "title": "City"
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "title": "State"
          },
          "zipcode": {
            "type": "string",
            "minLength": 1,
            "title": "Zipcode"
          },
          "miles": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Miles"
          }
        },
        "type": "object",
        "required": [
          "city",
          "state"
        ],
        "title": "StopCityV2"
      },
      "StrStage": {
        "type": "string",
        "enum": [
          "STAGING",
          "PROD"
        ],
        "title": "StrStage",
        "description": "An enumeration."
      },
      "ThirdParty": {
        "properties": {
          "oid": {
            "type": "integer",
            "title": "Oid"
          },
          "customer_oid": {
            "type": "integer",
            "title": "Customer Oid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "account": {
            "type": "string",
            "title": "Account"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "zipcode": {
            "type": "string",
            "title": "Zipcode"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          }
        },
        "type": "object",
        "title": "ThirdParty"
      },
      "Trailer": {
        "type": "string",
        "enum": [
          "VAN",
          "FLATBED",
          "REEFER"
        ],
        "title": "Trailer",
        "description": "An enumeration."
      },
      "Transplace": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "company_name": {
            "type": "string",
            "title": "Company Name"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "Transplace"
      },
      "Trinity": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Trinity"
      },
      "TruckstopData": {
        "properties": {
          "integration_id": {
            "type": "integer",
            "title": "Integration Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "integration_id",
          "username",
          "password"
        ],
        "title": "TruckstopData"
      },
      "TruckstopRateInsights": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "TruckstopRateInsights"
      },
      "User": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_oid": {
            "type": "integer",
            "title": "User Oid",
            "description": "User OID; Company ID for Tabi 2"
          },
          "c_oid": {
            "type": "integer",
            "title": "C Oid",
            "description": "Parent Customer OID; Default Customer ID for Tabi 2"
          },
          "cc_oid": {
            "type": "integer",
            "title": "Cc Oid",
            "description": "My Customer's Customer OID; Default Customer ID for Tabi 2"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array",
            "title": "Roles"
          },
          "sm_metadata": {
            "$ref": "#/components/schemas/SMMetadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "roles"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_oid": {
            "type": "integer",
            "title": "User Oid",
            "description": "User OID; Company ID for Tabi 2"
          },
          "c_oid": {
            "type": "integer",
            "title": "C Oid",
            "description": "Parent Customer OID; Default Customer ID for Tabi 2"
          },
          "cc_oid": {
            "type": "integer",
            "title": "Cc Oid",
            "description": "My Customer's Customer OID; Default Customer ID for Tabi 2"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "password",
          "roles"
        ],
        "title": "UserCreate"
      },
      "UserMetadata": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "data": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "user",
          "data"
        ],
        "title": "UserMetadata"
      },
      "UserUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          },
          "c_oid": {
            "type": "integer",
            "title": "C Oid",
            "description": "Parent Customer OID"
          },
          "cc_oid": {
            "type": "integer",
            "title": "Cc Oid",
            "description": "My Customer's Customer OID"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleValue"
            },
            "type": "array"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserWithPassword": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_oid": {
            "type": "integer",
            "title": "User Oid",
            "description": "User OID; Company ID for Tabi 2"
          },
          "c_oid": {
            "type": "integer",
            "title": "C Oid",
            "description": "Parent Customer OID; Default Customer ID for Tabi 2"
          },
          "cc_oid": {
            "type": "integer",
            "title": "Cc Oid",
            "description": "My Customer's Customer OID; Default Customer ID for Tabi 2"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array",
            "title": "Roles"
          },
          "sm_metadata": {
            "$ref": "#/components/schemas/SMMetadata"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "roles"
        ],
        "title": "UserWithPassword"
      },
      "UsersCredentialsInput": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "role": {
            "$ref": "#/components/schemas/RoleValue"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "role"
        ],
        "title": "UsersCredentialsInput"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "dbs__quoting__schemas__api_data__ArcherData": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "ArcherData"
      },
      "dbs__quoting__schemas__api_data__LoaddexData": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "LoaddexData"
      },
      "schemas__services__tabi_db__prometeo__archer_data__ArcherData": {
        "properties": {
          "shipper_id": {
            "type": "integer",
            "title": "Shipper Id"
          },
          "reefer_temperature": {
            "type": "string",
            "title": "Reefer Temperature"
          }
        },
        "type": "object",
        "required": [
          "shipper_id"
        ],
        "title": "ArcherData"
      },
      "schemas__services__tabi_db__prometeo__loaddex_data__LoaddexData": {
        "properties": {
          "shipper_code": {
            "type": "string",
            "title": "Shipper Code"
          },
          "load_mode_name": {
            "$ref": "#/components/schemas/LoadModeName"
          }
        },
        "type": "object",
        "required": [
          "shipper_code",
          "load_mode_name"
        ],
        "title": "LoaddexData"
      }
    },
    "securitySchemes": {
      "HTTPBasicOptional": {
        "type": "http",
        "scheme": "basic"
      },
      "HTTPOAuth2Optional": {
        "type": "http",
        "scheme": "bearer"
      },
      "JWTBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}